(undo-tree-save-format-version . 1)
"f97a26fde622281bb452e8d1507fa1862e5881a9"
[nil nil nil nil (25583 53998 680119 601000) 0 nil]
([nil nil ((#("map " 0 4 (fontified t)) . 1762) (undo-tree-id181 . -3) (t 25568 64176 0 0)) nil (25583 54013 813157 543000) 0 nil] [nil nil ((1703 . 1704) (t 25568 64176 0 0)) ((#("k" 0 1 (face haskell-definition-face fontified t)) . 1703) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1)) (25583 53997 403708 361000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1761) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . 1) (undo-tree-id180 . -1)) nil (25583 54013 813154 462000) 0 nil])
([nil nil ((1704 . 1749) (#("                                paramBindings" 0 45 (fontified t)) . 1704)) ((1704 . 1749) (#("                                PARAMBINDINGS" 0 32 (fontified t) 32 45 (face haskell-constructor-face fontified t)) . 1704) (undo-tree-id27 . -45) (undo-tree-id28 . -45) (undo-tree-id29 . -45) (undo-tree-id30 . -32) (undo-tree-id31 . -45) (undo-tree-id32 . -45) (undo-tree-id33 . -45) (undo-tree-id34 . -45) (undo-tree-id35 . -32) (undo-tree-id36 . -33) (undo-tree-id37 . -45) (undo-tree-id38 . -45) (undo-tree-id39 . -45) (undo-tree-id40 . -45) (undo-tree-id41 . -45) (undo-tree-id42 . -45) (undo-tree-id43 . -45) (undo-tree-id44 . -45) (undo-tree-id45 . -45) (undo-tree-id46 . -45) (undo-tree-id47 . -45) (undo-tree-id48 . -45) (undo-tree-id49 . -45) (undo-tree-id50 . -45) (undo-tree-id51 . -45) (undo-tree-id52 . -32) (undo-tree-id53 . -45) (undo-tree-id54 . -45) (undo-tree-id55 . -32) (undo-tree-id56 . -33) (undo-tree-id57 . -45) (undo-tree-id58 . -45) (undo-tree-id59 . -45) (undo-tree-id60 . -45) (undo-tree-id61 . -45) (undo-tree-id62 . -45) (undo-tree-id63 . -45) (undo-tree-id64 . -45) (undo-tree-id65 . -45) (undo-tree-id66 . -45) (undo-tree-id67 . -45) (undo-tree-id68 . -45)) (25583 53997 59287 315000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1761) (undo-tree-id175 . 1) (undo-tree-id176 . -1)) nil (25583 54013 813149 245000) 0 nil])
([nil nil ((1749 . 1755) (#(" = zip" 0 1 (fontified t) 1 2 (face haskell-operator-face syntax-table (1) fontified t) 2 6 (fontified t)) . 1749)) ((1749 . 1755) (#(" = ZIP" 0 1 (fontified t) 1 2 (face haskell-operator-face syntax-table (1) fontified t) 2 3 (fontified t) 3 6 (face haskell-constructor-face fontified t)) . 1749) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) (undo-tree-id7 . -1) (undo-tree-id8 . -3) (undo-tree-id9 . -6) (undo-tree-id10 . -6) (undo-tree-id11 . -1) (undo-tree-id12 . -2) (undo-tree-id13 . -3) (undo-tree-id14 . -4) (undo-tree-id15 . -6) (undo-tree-id16 . -6) (undo-tree-id17 . -6) (undo-tree-id18 . -6) (undo-tree-id19 . -6) (undo-tree-id20 . -6) (undo-tree-id21 . -6) (undo-tree-id22 . -6) (undo-tree-id23 . -6) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -6)) (25583 53996 764569 61000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1761) (undo-tree-id174 . -1)) nil (25583 54013 813145 612000) 0 nil])
([nil nil ((1755 . 1756)) ((#("u" 0 1 (face haskell-constructor-face fontified t)) . 1755) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) (25583 53996 764490 303000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . 1761)) nil (25583 54013 813143 192000) 0 nil])
nil
([nil nil ((#("al " 0 3 (fontified t)) . 1761) (undo-tree-id173 . -2)) nil (25583 54013 813141 613000) 0 nil])
([nil nil ((#(" context" 0 8 (fontified t)) . 1760) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -7) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -8) 1761) nil (25583 54013 813137 267000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1760) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . 1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1)) nil (25583 54013 813113 941000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1765) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . 1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1)) nil (25583 54013 813101 946000) 0 nil])
([nil nil ((730 . 733) (#("Integer" 0 7 (face haskell-type-face haskell-type t font-lock-multiline t fontified t)) . 730) (undo-tree-id182 . -5) (undo-tree-id183 . -5) (undo-tree-id184 . -6) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (undo-tree-id191 . -3) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -3) (undo-tree-id209 . -3) (undo-tree-id210 . -3) (undo-tree-id211 . -3) (undo-tree-id212 . -3) (undo-tree-id213 . -3) (undo-tree-id214 . -3) (undo-tree-id215 . -3) (undo-tree-id216 . -3) (undo-tree-id217 . -3) (undo-tree-id218 . -3) (undo-tree-id219 . -3) (undo-tree-id220 . -3) (undo-tree-id221 . -3) (undo-tree-id222 . -3) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (undo-tree-id231 . -3) (undo-tree-id232 . -3) (undo-tree-id233 . -3) (undo-tree-id234 . -3) (undo-tree-id235 . -3) (undo-tree-id236 . -3) (undo-tree-id237 . -3) (undo-tree-id238 . -3) (undo-tree-id239 . -3) (undo-tree-id240 . -3) (undo-tree-id241 . -3) (undo-tree-id242 . -3) (undo-tree-id243 . -3) (undo-tree-id244 . -3) (undo-tree-id245 . -3) (undo-tree-id246 . -3) (undo-tree-id247 . -3) (undo-tree-id248 . -3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -3) (undo-tree-id255 . -3) (undo-tree-id256 . -3) (undo-tree-id257 . -3) (undo-tree-id258 . -3) (undo-tree-id259 . -3) (undo-tree-id260 . -3) (undo-tree-id261 . -3) (undo-tree-id262 . -3) (undo-tree-id263 . -3) (undo-tree-id264 . -3) (undo-tree-id265 . -3) (undo-tree-id266 . -3) (undo-tree-id267 . -3) (undo-tree-id268 . -3) (undo-tree-id269 . -3) (undo-tree-id270 . -3) (undo-tree-id271 . -3) (undo-tree-id272 . -3) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -3) (undo-tree-id281 . -3) (undo-tree-id282 . -3) (undo-tree-id283 . -3) (undo-tree-id284 . -3) (undo-tree-id285 . -3) (undo-tree-id286 . -3) (undo-tree-id287 . -3) (undo-tree-id288 . -3) (undo-tree-id289 . -3) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -3) (undo-tree-id293 . -5) (undo-tree-id294 . -5) (undo-tree-id295 . -5) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) (undo-tree-id300 . -5) (undo-tree-id301 . -5) (undo-tree-id302 . -5) (undo-tree-id303 . -5) (undo-tree-id304 . -5) (undo-tree-id305 . -5) (undo-tree-id306 . -5) (undo-tree-id307 . -5) (undo-tree-id308 . -5) (undo-tree-id309 . -5) (undo-tree-id310 . -5) (undo-tree-id311 . -5) (undo-tree-id312 . -5) (undo-tree-id313 . -5) (undo-tree-id314 . -5) (undo-tree-id315 . -5) (undo-tree-id316 . -5) (undo-tree-id317 . -5) (undo-tree-id318 . -5) (undo-tree-id319 . -5) (undo-tree-id320 . -5) (undo-tree-id321 . -5) (undo-tree-id322 . -5) (undo-tree-id323 . -5) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (undo-tree-id327 . -5) (undo-tree-id328 . -5) (undo-tree-id329 . -5) (undo-tree-id330 . -5) (undo-tree-id331 . -5) (undo-tree-id332 . -5) (undo-tree-id333 . -5) (undo-tree-id334 . -5) (undo-tree-id335 . -5) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -5) (undo-tree-id344 . -5) (undo-tree-id345 . -5) (undo-tree-id346 . -5) (undo-tree-id347 . -5) (undo-tree-id348 . -5) (undo-tree-id349 . -5) (undo-tree-id350 . -5) (undo-tree-id351 . -5) (undo-tree-id352 . -5) (undo-tree-id353 . -5) (undo-tree-id354 . -7) (undo-tree-id355 . -7) 735 (t 25583 54013 930220 916000)) nil (25583 54166 313712 711000) 0 nil])
([nil nil ((1287 . 1294) (t 25583 54166 460214 797000)) nil (25583 54349 817367 57000) 0 nil])
([nil nil ((#("=" 0 1 (face haskell-operator-face syntax-table (1) fontified t)) . 1292)) nil (25583 54349 817364 605000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1292) (undo-tree-id356 . 1) (undo-tree-id357 . -1) (undo-tree-id358 . -1)) nil (25583 54349 817359 470000) 0 nil])
([nil nil ((1292 . 1299) (t 25583 54349 946874 113000)) nil (25583 54415 496525 226000) 0 nil])
([nil nil ((1299 . 1300)) nil (25583 54464 630114 481000) 0 nil])
([nil nil ((1300 . 1301) (t 25583 54415 620204 818000)) nil (25583 54589 33898 12000) 0 nil] [nil nil ((#("E" 0 1 (face haskell-type-face haskell-type t font-lock-multiline t fontified t)) . -905) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) 906 (905 . 906) (#("Integer" 0 7 (face haskell-type-face haskell-type t font-lock-multiline t fontified t)) . 905) (undo-tree-id475 . -6) (undo-tree-id476 . -4) (undo-tree-id477 . -6) (undo-tree-id478 . -6) (undo-tree-id479 . -6) (undo-tree-id480 . -6) (undo-tree-id481 . -6) (undo-tree-id482 . -6) (undo-tree-id483 . -6) (undo-tree-id484 . -6) (undo-tree-id485 . -6) (undo-tree-id486 . -6) (undo-tree-id487 . -6) (undo-tree-id488 . -6) (undo-tree-id489 . -6) (undo-tree-id490 . -6) (undo-tree-id491 . -6) (undo-tree-id492 . -6) (undo-tree-id493 . -6) (undo-tree-id494 . -6) (undo-tree-id495 . -6) (undo-tree-id496 . -6) (undo-tree-id497 . -5) (undo-tree-id498 . -6) (undo-tree-id499 . -5) (undo-tree-id500 . -5) (undo-tree-id501 . -5) (undo-tree-id502 . -5) (undo-tree-id503 . -5) (undo-tree-id504 . -5) (undo-tree-id505 . -5) (undo-tree-id506 . -5) (undo-tree-id507 . -5) (undo-tree-id508 . -5) (undo-tree-id509 . -5) (undo-tree-id510 . -4) (undo-tree-id511 . -5) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -4) (undo-tree-id536 . -4) (undo-tree-id537 . -4) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (undo-tree-id546 . -4) (undo-tree-id547 . -4) (undo-tree-id548 . -4) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -7) (undo-tree-id553 . -7) (undo-tree-id554 . -1) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -4) (undo-tree-id561 . -4) (undo-tree-id562 . -4) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -7) (undo-tree-id716 . -7) 909 (t 25583 54415 620204 818000)) ((905 . 912) (#("E" 0 1 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil)) . 905) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (905 . 906)) (25583 54464 629363 890000) 0 nil] [nil nil ((#("Integer" 0 7 (face haskell-type-face haskell-type t font-lock-multiline t fontified t)) . 905) (undo-tree-id359 . -6) (undo-tree-id360 . -4) (undo-tree-id361 . -6) (undo-tree-id362 . -6) (undo-tree-id363 . -6) (undo-tree-id364 . -6) (undo-tree-id365 . -6) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6) (undo-tree-id369 . -6) (undo-tree-id370 . -6) (undo-tree-id371 . -6) (undo-tree-id372 . -6) (undo-tree-id373 . -6) (undo-tree-id374 . -6) (undo-tree-id375 . -6) (undo-tree-id376 . -6) (undo-tree-id377 . -6) (undo-tree-id378 . -6) (undo-tree-id379 . -6) (undo-tree-id380 . -6) (undo-tree-id381 . -5) (undo-tree-id382 . -6) (undo-tree-id383 . -5) (undo-tree-id384 . -5) (undo-tree-id385 . -5) (undo-tree-id386 . -5) (undo-tree-id387 . -5) (undo-tree-id388 . -5) (undo-tree-id389 . -5) (undo-tree-id390 . -5) (undo-tree-id391 . -5) (undo-tree-id392 . -5) (undo-tree-id393 . -5) (undo-tree-id394 . -4) (undo-tree-id395 . -5) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -7) (undo-tree-id436 . -7) 909 (t 25583 54415 620204 818000)) ((905 . 912)) (25583 54432 100831 678000) 0 nil])
([nil nil ((1339 . 1340)) nil (25583 54758 815143 978000) 0 nil])
nil
nil
([nil nil ((#("  " 0 2 (fontified t)) . -602) (undo-tree-id757 . -2) (undo-tree-id758 . -2) (undo-tree-id759 . -2) (undo-tree-id760 . -2) (undo-tree-id761 . -2) (undo-tree-id762 . -2) (undo-tree-id763 . -2) (undo-tree-id764 . -2) (undo-tree-id765 . -2) (undo-tree-id766 . -2) (undo-tree-id767 . -2) (undo-tree-id768 . -2) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) 604 (601 . 604) (t 25583 54589 146864 530000) 590) nil (25583 54762 494979 485000) 0 nil] [nil nil ((nil rear-nonsticky nil 602 . 603) (nil fontified nil 591 . 603) (591 . 603) 590 (t 25583 54589 146864 530000)) ((#("Debug.Trace " 0 5 (fontified nil) 5 6 (face haskell-definition-face syntax-table (1) fontified nil) 6 11 (face haskell-constructor-face fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 591) (undo-tree-id753 . -11) (undo-tree-id754 . -11) (undo-tree-id755 . -11) (undo-tree-id756 . -11) (nil rear-nonsticky t 602 . 603)) (25583 54758 814878 478000) 0 nil])
([nil nil ((602 . 609)) nil (25583 54762 494942 534000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 620 . 621) (nil fontified nil 609 . 621) (609 . 621) 608) nil (25583 54762 494936 296000) 0 nil])
([nil nil ((nil rear-nonsticky nil 811 . 812) (nil fontified nil 793 . 812) (793 . 812) (t 25583 54762 530190 926000)) nil (25583 54773 1597 606000) 0 nil])
([nil nil ((#("  " 0 2 (haskell-type t font-lock-multiline t fontified t)) . -793) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) 795 (792 . 795) 754) nil (25583 54773 1583 283000) 0 nil])
([nil nil ((1664 . 1666) (#("1" 0 1 (syntax-table (2) fontified t)) . -1664) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (#(" " 0 1 (fontified t)) . -1665) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) 1666 (1663 . 1666) (t 25583 54773 116857 170000)) nil (25583 54804 972849 264000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-multiline t font-lock-fontified t fontified t)) . -1670) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) 1671 (1665 . 1671)) nil (25583 54804 972795 279000) 0 nil])
([nil nil ((1671 . 1674)) nil (25583 54804 972767 502000) 0 nil])
([nil nil ((1673 . 1685)) nil (25583 54804 972761 869000) 0 nil])
([nil nil ((1672 . 1673) (#("'" 0 1 (font-lock-fontified t fontified t)) . 1672) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (t 25583 54805 6855 894000)) nil (25583 54811 416990 884000) 0 nil])
([nil nil ((1685 . 1686) (#("'" 0 1 (face font-lock-string-face font-lock-fontified t fontified t)) . -1685) (undo-tree-id871 . 1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) 1686) nil (25583 54811 416970 528000) 0 nil])
([nil nil ((1672 . 1673) (t 25583 54811 550188 963000)) nil (25583 54880 69385 225000) 0 nil])
([nil nil ((1693 . 1694) (#("\"" 0 1 (face font-lock-warning-face syntax-table (15) fontified t font-lock-fontified t)) . -1693) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) 1694 (1687 . 1694)) nil (25583 54880 69375 762000) 0 nil])
([nil nil ((1609 . 1610) (t 25583 54880 203519 552000)) nil (25583 54996 360954 228000) 0 nil])
([nil nil ((1610 . 1611) (1609 . 1610)) nil (25583 54996 360952 881000) 0 nil])
([nil nil ((1610 . 1617)) nil (25583 54996 360951 79000) 0 nil])
([nil nil ((1621 . 1622) (#("e" 0 1 (fontified t)) . -1621) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (#("s" 0 1 (fontified t)) . -1622) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) 1623 (1617 . 1623)) nil (25583 54996 360946 730000) 0 nil])
([nil nil ((1706 . 1711) (#("id" 0 2 (fontified t font-lock-fontified t)) . 1706) (undo-tree-id912 . -1) (undo-tree-id913 . -2) (undo-tree-id914 . -2) (undo-tree-id915 . -2) (undo-tree-id916 . -1) (undo-tree-id917 . -2) (undo-tree-id918 . -2) (undo-tree-id919 . -2) (undo-tree-id920 . -1) (undo-tree-id921 . -2) (undo-tree-id922 . -2) (undo-tree-id923 . -2) (undo-tree-id924 . -1) (undo-tree-id925 . -2) (undo-tree-id926 . -2) (undo-tree-id927 . -2) (undo-tree-id928 . -2) (undo-tree-id929 . -2) (undo-tree-id930 . -2) (undo-tree-id931 . -2) (undo-tree-id932 . -2) (undo-tree-id933 . -2) (undo-tree-id934 . -2) (undo-tree-id935 . -2) (undo-tree-id936 . -2) (undo-tree-id937 . -2) (undo-tree-id938 . -2) (undo-tree-id939 . -2) (undo-tree-id940 . -2) (undo-tree-id941 . -1) (undo-tree-id942 . -2) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -2) (undo-tree-id956 . -2)) nil (25583 55080 106442 641000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1624) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (#("d" 0 1 (fontified t)) . -1625) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) 1626 (t 25583 54996 486848 228000)) nil (25583 55088 326732 647000) 0 nil] [nil nil ((#("@id lexp   -> eval (paramBindings,contextFunctions) exp `debug` (\"hahaha memes\" ++ memes)" 0 1 (face haskell-operator-face syntax-table (1) fontified t) 1 11 (fontified t) 11 13 (face haskell-operator-face syntax-table (1) fontified t) 13 56 (fontified t) 56 57 (font-lock-multiline t face haskell-operator-face font-lock-fontified t fontified t) 57 62 (font-lock-multiline t face haskell-operator-face font-lock-fontified t fontified t) 62 63 (font-lock-multiline t face haskell-operator-face font-lock-fontified t fontified t) 63 65 (font-lock-fontified t fontified t) 65 66 (face font-lock-string-face fontified t) 66 79 (face font-lock-string-face font-lock-fontified t fontified t) 79 80 (font-lock-fontified t fontified t) 80 81 (face haskell-operator-face syntax-table (1) font-lock-fontified t fontified t) 81 82 (face haskell-operator-face syntax-table (1) fontified t font-lock-fontified t) 82 89 (fontified t font-lock-fontified t)) . 1623) (undo-tree-id1007 . -88) (undo-tree-id1008 . 1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -4) (undo-tree-id1012 . -11) (undo-tree-id1013 . -14) (undo-tree-id1014 . -19) (undo-tree-id1015 . -19) (undo-tree-id1016 . -20) (undo-tree-id1017 . -20) (undo-tree-id1018 . -19) (undo-tree-id1019 . -20) (undo-tree-id1020 . -33) (undo-tree-id1021 . -33) (undo-tree-id1022 . -34) (undo-tree-id1023 . -34) (undo-tree-id1024 . -33) (undo-tree-id1025 . -34) (undo-tree-id1026 . -50) (undo-tree-id1027 . -50) (undo-tree-id1028 . -51) (undo-tree-id1029 . -52) (undo-tree-id1030 . -50) (undo-tree-id1031 . -51) (undo-tree-id1032 . -56) (undo-tree-id1033 . -56) (undo-tree-id1034 . -57) (undo-tree-id1035 . -57) (undo-tree-id1036 . -56) (undo-tree-id1037 . -57) (undo-tree-id1038 . -62) (undo-tree-id1039 . -62) (undo-tree-id1040 . -63) (undo-tree-id1041 . -64) (undo-tree-id1042 . -64) (undo-tree-id1043 . -65) (undo-tree-id1044 . -65) (undo-tree-id1045 . -80) (undo-tree-id1046 . -83) (undo-tree-id1047 . -88) (undo-tree-id1048 . -88) (undo-tree-id1049 . -89) (undo-tree-id1050 . -88) (undo-tree-id1051 . -89) (undo-tree-id1052 . -56) (undo-tree-id1053 . -57) (undo-tree-id1054 . -56) (undo-tree-id1055 . -57) (undo-tree-id1056 . -56) (undo-tree-id1057 . -63) (undo-tree-id1058 . -56) (undo-tree-id1059 . -57) (undo-tree-id1060 . -57) (undo-tree-id1061 . -62) (undo-tree-id1062 . -57) (undo-tree-id1063 . -62) (undo-tree-id1064 . -62) (undo-tree-id1065 . -63) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -2) (undo-tree-id1069 . -4) (undo-tree-id1070 . -5) (undo-tree-id1071 . -11) (undo-tree-id1072 . -12) (undo-tree-id1073 . -14) (undo-tree-id1074 . -15) (undo-tree-id1075 . -20) (undo-tree-id1076 . -21) (undo-tree-id1077 . -34) (undo-tree-id1078 . -35) (undo-tree-id1079 . -52) (undo-tree-id1080 . -53) (undo-tree-id1081 . -57) (undo-tree-id1082 . -58) (undo-tree-id1083 . -80) (undo-tree-id1084 . -81) (undo-tree-id1085 . -83) (undo-tree-id1086 . -84) (undo-tree-id1087 . -89) (undo-tree-id1088 . -89) (t 25583 54996 486848 228000)) ((1623 . 1712)) (25583 55080 106079 35000) 0 nil] [nil nil ((#(")" 0 1 (fontified t)) . 1622) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . 1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (t 25583 54996 486848 228000)) ((1622 . 1623)) (25583 55024 838625 628000) 0 nil])
([nil nil ((#("@" 0 1 (face haskell-operator-face syntax-table (1) fontified t)) . 1623) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1)) nil (25583 55088 326619 431000) 0 nil])
nil
nil
([nil nil ((1609 . 1612)) nil (25583 55088 326488 562000) 0 nil])
([nil nil ((#("n" 0 1 (face haskell-constructor-face fontified t)) . 1614) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (t 25583 55088 446844 550000)) nil (25583 55097 902583 792000) 0 nil])
([nil nil ((#("hahaha" 0 6 (face font-lock-string-face font-lock-fontified t fontified t)) . 1688) (undo-tree-id1708 . -5) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -2) (undo-tree-id1718 . -1) (undo-tree-id1719 . -2) (undo-tree-id1720 . -2) (undo-tree-id1721 . -2) (undo-tree-id1722 . -2) (undo-tree-id1723 . -2) (undo-tree-id1724 . -2) (undo-tree-id1725 . -2) (undo-tree-id1726 . -2) (undo-tree-id1727 . -2) (undo-tree-id1728 . -2) (undo-tree-id1729 . -2) (undo-tree-id1730 . -3) (undo-tree-id1731 . -2) (undo-tree-id1732 . -3) (undo-tree-id1733 . -3) (undo-tree-id1734 . -3) (undo-tree-id1735 . -3) (undo-tree-id1736 . -3) (undo-tree-id1737 . -3) (undo-tree-id1738 . -3) (undo-tree-id1739 . -3) (undo-tree-id1740 . -3) (undo-tree-id1741 . -3) (undo-tree-id1742 . -3) (undo-tree-id1743 . -4) (undo-tree-id1744 . -3) (undo-tree-id1745 . -4) (undo-tree-id1746 . -4) (undo-tree-id1747 . -4) (undo-tree-id1748 . -4) (undo-tree-id1749 . -4) (undo-tree-id1750 . -4) (undo-tree-id1751 . -4) (undo-tree-id1752 . -4) (undo-tree-id1753 . -4) (undo-tree-id1754 . -4) (undo-tree-id1755 . -4) (undo-tree-id1756 . -4) (undo-tree-id1757 . -4) (undo-tree-id1758 . -4) (undo-tree-id1759 . -4) (undo-tree-id1760 . -4) (undo-tree-id1761 . -3) (undo-tree-id1762 . -4) (undo-tree-id1763 . -3) (undo-tree-id1764 . -3) (undo-tree-id1765 . -3) (undo-tree-id1766 . -3) (undo-tree-id1767 . -3) (undo-tree-id1768 . -3) (undo-tree-id1769 . -2) (undo-tree-id1770 . -3) (undo-tree-id1771 . -2) (undo-tree-id1772 . -2) (undo-tree-id1773 . -2) (undo-tree-id1774 . -2) (undo-tree-id1775 . -2) (undo-tree-id1776 . -2) (undo-tree-id1777 . -2) (undo-tree-id1778 . -2) (undo-tree-id1779 . -2) (undo-tree-id1780 . -2) (undo-tree-id1781 . -2) (undo-tree-id1782 . -1) (undo-tree-id1783 . -2) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -6) (undo-tree-id1844 . -6) 1689 (t 25583 55097 950177 504000)) nil (25583 55140 942077 722000) 0 nil])
([nil nil ((1688 . 1689)) nil (25583 55140 941946 117000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face font-lock-fontified t fontified t)) . 1689) (undo-tree-id1705 . 1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1)) nil (25583 55140 941944 693000) 0 nil])
([nil nil ((#("lmemes" 0 1 (face font-lock-string-face fontified t) 1 6 (face font-lock-string-face font-lock-fontified t fontified t)) . 1688) (undo-tree-id1615 . -5) (undo-tree-id1616 . 5) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -6) (undo-tree-id1704 . -6) 1689) nil (25583 55140 941935 32000) 0 nil])
([nil nil ((1687 . 1691) (#("\"" 0 1 (face font-lock-warning-face syntax-table (15) fontified t)) . -1687) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (#("\"" 0 1 (face font-lock-string-face font-lock-fontified t fontified t)) . -1688) (undo-tree-id1586 . 1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) 1689) nil (25583 55140 941819 115000) 0 nil])
([nil nil ((#("++ memes" 0 1 (face haskell-operator-face syntax-table (1) font-lock-fontified t fontified t) 1 2 (face haskell-operator-face syntax-table (1) fontified t font-lock-fontified t) 2 8 (fontified t font-lock-fontified t)) . 1692) (undo-tree-id1257 . -7) (undo-tree-id1258 . -1) (undo-tree-id1259 . -3) (undo-tree-id1260 . -4) (undo-tree-id1261 . -8) (undo-tree-id1262 . -8)) nil (25583 55140 941471 876000) 0 nil])
([nil nil ((1692 . 1696)) nil (25583 55140 941398 74000) 0 nil])
([nil nil ((1685 . 1687) (t 25583 55140 973509 116000)) nil (25583 55246 35531 550000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t fontified t)) . -1685) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (#("$" 0 1 (face haskell-operator-face syntax-table (1) font-lock-fontified t fontified t)) . -1686) (undo-tree-id1980 . -1) 1687) nil (25583 55246 35529 563000) 0 nil])
([nil nil ((1619 . 1625) (#("memes" 0 5 (fontified t)) . 1619) (undo-tree-id1977 . -4)) nil (25583 55246 35525 151000) 0 nil])
([nil nil ((1686 . 1688)) nil (25583 55246 35523 13000) 0 nil])
([nil nil ((1700 . 1703)) nil (25583 55246 35522 72000) 0 nil])
([nil nil ((1702 . 1703)) nil (25583 55246 35521 106000) 0 nil])
([nil nil ((1696 . 1699) (#("\"" 0 1 (face font-lock-warning-face syntax-table (15) font-lock-fontified t fontified t)) . -1696) (undo-tree-id1976 . -1) 1697 (1689 . 1697)) nil (25583 55246 35519 682000) 0 nil])
([nil nil ((1698 . 1700) (#(":" 0 1 (face haskell-operator-face syntax-table (1) font-lock-fontified t fontified t)) . -1698) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) 1699 (1698 . 1699)) nil (25583 55246 35515 514000) 0 nil])
([nil nil ((1699 . 1700)) nil (25583 55246 35500 692000) 0 nil])
([nil nil ((1701 . 1703)) nil (25583 55246 35499 466000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t fontified t)) . 1703) (undo-tree-id1953 . 1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1)) nil (25583 55246 35496 999000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t)) . -1714) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (#("+" 0 1 (face haskell-operator-face syntax-table (1) fontified t font-lock-fontified t)) . -1715) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (#("+" 0 1 (face haskell-operator-face syntax-table (1) fontified t font-lock-fontified t)) . -1716) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (#(" " 0 1 (fontified t font-lock-fontified t)) . -1717) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) 1718) nil (25583 55246 35476 603000) 0 nil])
([nil nil ((#("$" 0 1 (face haskell-operator-face syntax-table (1) font-lock-fontified t fontified t)) . 1687) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (t 25583 55246 396838 227000)) nil (25583 55264 958690 52000) 0 nil])
([nil nil ((1687 . 1688)) nil (25583 55264 958664 226000) 0 nil])
([nil nil ((1714 . 1715)) nil (25583 55264 958658 759000) 0 nil])
([nil nil ((1714 . 1716) (#("¨" 0 1 (fontified t syntax-table (1) face haskell-operator-face)) . -1714) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 1715 (1714 . 1715) (#(":" 0 1 (fontified t syntax-table (1) face haskell-constructor-face)) . -1714) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#(":" 0 1 (fontified t syntax-table (1) face haskell-operator-face)) . -1715) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 1716 (1714 . 1716) (t 25583 55265 80170 813000)) nil (25585 8214 213634 176000) 0 nil])
([nil nil ((1717 . 1718) (1716 . 1717)) nil (25585 8214 213544 690000) 0 nil])
([nil nil ((1717 . 1725)) nil (25585 8853 202083 752000) 0 nil])
([nil nil ((2257 . 2258) (#("5" 0 1 (syntax-table (2) fontified t)) . 2257) (undo-tree-id84 . -1)) nil (25585 8859 931258 822000) 0 nil] [nil nil ((2843 . 2844) (#("8" 0 1 (fontified t syntax-table (2))) . 2843) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (t 25585 8214 956197 263000)) ((2843 . 2844) (#("2" 0 1 (fontified t syntax-table (2))) . 2843) (t 25585 8842 419559 616000)) (25585 8842 382148 812000) 0 nil])
([nil nil ((2257 . 2258) (#("2" 0 1 (fontified t syntax-table (2))) . 2257) (undo-tree-id85 . -1) (t 25585 8859 966227 93000)) nil (25585 8899 792746 10000) 0 nil])
nil
([nil nil ((1479 . 1481) (t 25585 8899 912895 611000)) nil (25585 9011 941153 14000) 0 nil])
([nil nil ((1483 . 1486) (#("b" 0 1 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t)) . -1483) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (#("u" 0 1 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t)) . -1484) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) 1485 (1480 . 1485)) nil (25585 9011 941146 657000) 0 nil])
([nil nil ((1487 . 1489)) nil (25585 9011 941069 5000) 0 nil])
([nil nil ((1489 . 1494) (#("C" 0 1 (font-lock-fontified t fontified t face font-lock-string-face)) . -1489) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("a" 0 1 (font-lock-fontified t fontified t face font-lock-string-face)) . -1490) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("s" 0 1 (font-lock-fontified t fontified t face font-lock-string-face)) . -1491) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("o" 0 1 (font-lock-fontified t fontified t face font-lock-string-face)) . -1492) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (#(" " 0 1 (font-lock-fontified t fontified t face font-lock-string-face)) . -1493) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) 1494 (1489 . 1494) (#("c" 0 1 (font-lock-fontified t fontified t face font-lock-string-face)) . -1489) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 1490 (1489 . 1490) (#("E" 0 1 (font-lock-fontified t fontified t face font-lock-string-face)) . -1489) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (#("W" 0 1 (font-lock-fontified t fontified t face font-lock-string-face)) . -1490) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) 1491 (1489 . 1491)) nil (25585 9011 941047 92000) 0 nil])
([nil nil ((1489 . 1498)) nil (25585 9011 940675 27000) 0 nil])
([nil nil ((1561 . 1575) (1551 . 1561) (1550 . 1551)) nil (25585 9011 940668 770000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t)) . 1482) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (t 25585 9012 66234 138000)) nil (25585 9031 758398 69000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t)) . 1553) (undo-tree-id441 . -1) (undo-tree-id442 . -1)) nil (25585 9031 758213 666000) 0 nil])
([nil nil ((2304 . 2305) (#("1" 0 1 (fontified t syntax-table (2))) . 2304) (undo-tree-id509 . -1) (t 25585 9031 799568 383000)) nil (25585 9098 485891 72000) 0 nil])
([nil nil ((2304 . 2305) (#("0" 0 1 (fontified t syntax-table (2))) . 2304) (undo-tree-id510 . -1) (t 25585 9098 622904 814000)) nil (25585 9181 287456 861000) 0 nil])
([nil nil ((1380 . 1383) (t 25585 9181 412908 646000)) nil (25585 10207 456341 736000) 0 nil])
([nil nil ((1382 . 1387)) nil (25585 10207 456340 326000) 0 nil])
([nil nil ((1398 . 1409) (1389 . 1398) (#("`" 0 1 (font-lock-fontified t fontified t)) . -1389) (undo-tree-id2 . -1) 1390 (1388 . 1390)) nil (25585 10207 456338 638000) 0 nil])
([nil nil ((1408 . 1409) (#(" " 0 1 (face font-lock-string-face fontified t font-lock-fontified t)) . -1408) (undo-tree-id1 . -1) 1409) nil (25585 10207 456334 790000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face syntax-table (15) fontified t font-lock-fontified t)) . -1413) (undo-tree-id0 . -1) 1414 (1409 . 1414)) nil (25585 10207 456330 665000) 0 nil])
([nil nil ((1408 . 1409)) nil (25585 10207 456313 989000) 0 nil])
([nil nil ((1389 . 1390)) nil (25585 10207 456312 691000) 0 nil])
([nil nil ((1417 . 1418) (1415 . 1417)) nil (25585 10207 456311 174000) 0 nil])
([nil nil ((1415 . 1420)) nil (25585 10207 456309 291000) 0 nil])
([nil nil ((1415 . 1416)) nil (25585 10207 456307 110000) 0 nil])
([nil nil ((1424 . 1425)) nil (25585 10207 456301 384000) 0 nil])
([nil nil ((2349 . 2350) (#("1" 0 1 (syntax-table (2) fontified t)) . 2349) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (t 25585 10207 606289 455000)) nil (25585 10267 240649 248000) 0 nil])
([nil nil ((1382 . 1383) (#(" " 0 1 (fontified t)) . -1382) (undo-tree-id17 . -1) 1383 (1381 . 1383) (t 25585 10267 279625 560000)) nil (25585 10940 485048 708000) 0 nil])
([nil nil ((#("#" 0 1 (face haskell-operator-face syntax-table (1) fontified t)) . -1381) (undo-tree-id12 . -1) (#(" " 0 1 (fontified t)) . -1382) (undo-tree-id13 . -1) 1383 (1381 . 1383) (#("%%`" 0 1 (face haskell-operator-face syntax-table (1) fontified t) 1 2 (face haskell-operator-face syntax-table (1) fontified t) 2 3 (font-lock-multiline t face haskell-operator-face font-lock-fontified t fontified t)) . 1381) (undo-tree-id14 . 1) (undo-tree-id15 . -2) (undo-tree-id16 . -1)) nil (25585 10940 485042 479000) 0 nil])
([nil nil ((apply -3 1381 1428 undo--wrap-and-run-primitive-undo 1381 1428 (("                                                                            " . 1381) (1381 . 1460) 1424))) nil (25585 10940 485022 387000) 0 nil])
([nil nil ((2351 . 2352) (#("0" 0 1 (syntax-table (2) fontified t)) . 2351) (undo-tree-id18 . -1) (t 25585 10940 519656 716000)) nil (25585 10951 301613 170000) 0 nil])
([nil nil ((1478 . 1480) (t 25585 10951 426323 890000)) nil (25585 11001 220816 278000) 0 nil])
([nil nil ((1482 . 1484) (#("8" 0 1 (font-lock-multiline t face haskell-operator-face font-lock-fontified t fontified t)) . -1482) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) 1483 (1479 . 1483)) nil (25585 11001 220812 428000) 0 nil])
([nil nil ((1502 . 1503) (1498 . 1502) (#("f" 0 1 (face font-lock-string-face fontified t font-lock-fontified t)) . -1498) (undo-tree-id99 . -1) (#("i" 0 1 (face font-lock-string-face fontified t font-lock-fontified t)) . -1499) (undo-tree-id100 . -1) 1500 (1485 . 1500)) nil (25585 11001 220745 902000) 0 nil])
([nil nil ((1500 . 1501) (#("v" 0 1 (face font-lock-string-face fontified t font-lock-fontified t)) . -1500) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 1501 (1499 . 1501) (#("ç" 0 1 (face font-lock-string-face fontified t font-lock-fontified t)) . -1499) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("ã" 0 1 (face font-lock-string-face fontified t font-lock-fontified t)) . -1500) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) 1501) nil (25585 11001 220731 339000) 0 nil])
([nil nil ((1999 . 2002) (#("V" 0 1 (fontified t)) . -1999) (undo-tree-id169 . -1) 2000 (1999 . 2000) (#("V" 0 1 (fontified t)) . -1999) (undo-tree-id170 . -1) (#("a" 0 1 (fontified t)) . -2000) (undo-tree-id171 . -1) (#("r" 0 1 (fontified t)) . -2001) (undo-tree-id172 . -1) (#("i" 0 1 (fontified t)) . -2002) (undo-tree-id173 . -1) (#("b" 0 1 (fontified t)) . -2003) (undo-tree-id174 . -1) 2004 (1995 . 2004) (#("u" 0 1 (fontified t)) . -1995) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("p" 0 1 (fontified t)) . -1996) (undo-tree-id177 . -1) 1997 (1995 . 1997) (t 25585 11001 852992 896000)) nil (25585 11439 928276 95000) 0 nil])
([nil nil ((2002 . 2003)) nil (25585 11439 928198 352000) 0 nil])
([nil nil ((2002 . 2003) (#("s" 0 1 (fontified t)) . -2002) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 2003 (2001 . 2003) (#("r" 0 1 (fontified t)) . -2001) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 2002) nil (25585 11454 551979 384000) 0 nil])
([nil nil ((1989 . 1990)) nil (25585 11473 967064 994000) 0 nil] [nil nil ((2003 . 2005) (t 25585 11440 53013 182000)) ((#(" $" 0 1 (fontified t) 1 2 (face haskell-operator-face syntax-table (1) fontified t)) . 2003) (undo-tree-id178 . 1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (t 25585 11450 286346 992000)) (25585 11450 127760 860000) 0 nil])
([nil nil ((1990 . 1991)) nil (25585 11473 967059 45000) 0 nil])
nil
([nil nil ((2079 . 2082) (2076 . 2079) (t 25585 11474 89681 429000) 2076) nil (25585 11529 764996 285000) 0 nil])
([nil nil ((2079 . 2081) 2081) nil (25585 11529 764994 319000) 0 nil])
([nil nil ((#("    eva
" 0 2 (fontified t) 2 4 (fontified t) 4 7 (fontified t) 7 8 (fontified t)) . 2077) (undo-tree-id291 . -4) (undo-tree-id292 . 1) (undo-tree-id293 . -7) (undo-tree-id294 . -4) 2081) nil (25585 11529 764992 544000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -918) (undo-tree-id290 . -2) 920 (917 . 920) 917) nil (25585 11529 764987 179000) 0 nil])
([nil nil ((2077 . 2084) (2076 . 2077)) nil (25585 11529 764983 888000) 0 nil])
([nil nil ((2088 . 2091) (2084 . 2088)) nil (25585 11529 764982 68000) 0 nil])
([nil nil ((2093 . 2094) (2091 . 2093)) nil (25585 11529 764980 523000) 0 nil])
([nil nil ((nil fontified t 2099 . 2100) (nil font-lock-multiline t 2099 . 2100) (nil haskell-type t 2099 . 2100) (nil face haskell-type-face 2099 . 2100) (#("V" 0 1 (face haskell-type-face haskell-type t font-lock-multiline t fontified t)) . -2092) (2093 . 2101) 2093 (2092 . 2093) (#("[]" 0 2 (haskell-type t font-lock-multiline t face haskell-constructor-face fontified t)) . 2092) (undo-tree-id285 . -1) (undo-tree-id286 . 2) (undo-tree-id287 . -1) (undo-tree-id288 . 1) (undo-tree-id289 . -2)) nil (25585 11529 764977 760000) 0 nil])
([nil nil ((2091 . 2093) (#(" " 0 1 (haskell-type t font-lock-multiline t fontified t)) . -2091) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) 2092) nil (25585 11529 764968 662000) 0 nil])
([nil nil ((2091 . 2092)) nil (25585 11529 764960 907000) 0 nil])
([nil nil ((2094 . 2095)) nil (25585 11529 764959 67000) 0 nil])
([nil nil ((#("e" 0 1 (face haskell-type-face haskell-type t font-lock-multiline t fontified t)) . -2110) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 2111 (2103 . 2111)) nil (25585 11529 764953 354000) 0 nil])
([nil nil ((#("  " 0 2 (haskell-type t font-lock-multiline t fontified t)) . -2111) (undo-tree-id308 . -2) (undo-tree-id309 . -2) 2113 (2110 . 2113) (t 25585 11529 823017 349000) 2109) nil (25585 11563 448533 134000) 0 nil])
([nil nil ((2115 . 2122) (2111 . 2115)) nil (25585 11563 448528 14000) 0 nil])
([nil nil ((#("evalVars" 0 8 (fontified t)) . 1998) (undo-tree-id306 . -1) (undo-tree-id307 . -7) 1999) nil (25585 11563 448525 928000) 0 nil])
([nil nil ((2001 . 2002) (#("e" 0 1 (fontified t)) . -2001) (undo-tree-id305 . -1) 2002 (1998 . 2002)) nil (25585 11563 448522 201000) 0 nil])
([nil nil ((#("eval" 0 4 (fontified t)) . -2002) (2006 . 2014) 2006 (2002 . 2006)) nil (25585 11563 448518 195000) 0 nil])
([nil nil ((2015 . 2016)) nil (25585 11563 448515 374000) 0 nil])
([nil nil ((#("$" 0 1 (face haskell-operator-face syntax-table (1) fontified t)) . 1990) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1)) nil (25585 11563 448508 996000) 0 nil])
([nil nil ((2016 . 2017) (2014 . 2016) (t 25585 11564 803018 966000)) nil (25585 11629 617617 618000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2028) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#("n" 0 1 (fontified t)) . -2029) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#("c" 0 1 (fontified t)) . -2030) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("t" 0 1 (fontified t)) . -2031) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("i" 0 1 (fontified t)) . -2032) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (#("o" 0 1 (fontified t)) . -2033) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#("n" 0 1 (fontified t)) . -2034) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (#("s" 0 1 (fontified t)) . -2035) (undo-tree-id327 . -1) (undo-tree-id328 . -1) 2036 (#("cont" 0 4 (fontified t)) . -2020) (2024 . 2040) 2024 (2016 . 2024) (#("s" 0 1 (fontified t)) . -2016) (undo-tree-id329 . -1) 2017 (2016 . 2017)) nil (25585 11629 617612 146000) 0 nil])
([nil nil ((2031 . 2094) 2092) nil (25585 11629 617703 213000) 0 nil])
([nil nil ((2070 . 2079) (#("Functions" 0 9 (fontified t)) . 2070) (undo-tree-id330 . -8)) ((2070 . 2079) (#("Variables" 0 9 (fontified t)) . 2070)) (25585 11630 566472 740000) 0 nil])
([nil nil ((2082 . 2085) (#("snd" 0 3 (fontified t)) . 2082) (undo-tree-id331 . -2) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -3) (undo-tree-id335 . -3)) nil (25585 11677 584244 907000) 0 nil])
([nil nil ((#("Exp " 0 3 (face haskell-type-face haskell-type t font-lock-multiline t fontified t) 3 4 (haskell-type t font-lock-multiline t fontified t)) . 2170) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -1) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -3) (undo-tree-id663 . -4) (undo-tree-id664 . -3) (undo-tree-id665 . -3) (undo-tree-id666 . -3) (undo-tree-id667 . -3) (undo-tree-id668 . -3) (undo-tree-id669 . -3) (undo-tree-id670 . -2) (undo-tree-id671 . -3) (undo-tree-id672 . -2) (undo-tree-id673 . -2) (undo-tree-id674 . -2) (undo-tree-id675 . -2) (undo-tree-id676 . -2) (undo-tree-id677 . -2) (undo-tree-id678 . -2) (undo-tree-id679 . -2) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -2) (undo-tree-id683 . -1) (undo-tree-id684 . -2) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -4) 2171) nil (25585 11702 559575 242000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . 1990) (t 25585 11634 766355 539000)) ((1990 . 1991) (t 25585 11660 789690 81000)) (25585 11676 723191 777000) 0 nil])
([nil nil ((#("-> " 0 1 (face haskell-operator-face haskell-type t font-lock-multiline t syntax-table (1) fontified t) 1 2 (face haskell-operator-face haskell-type t font-lock-multiline t syntax-table (1) fontified t) 2 3 (haskell-type t font-lock-multiline t fontified t)) . 2170) (undo-tree-id617 . -2) (undo-tree-id618 . -3) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -2) (undo-tree-id626 . -3) (undo-tree-id627 . -2) (undo-tree-id628 . -2) (undo-tree-id629 . -2) (undo-tree-id630 . -2) (undo-tree-id631 . -2) (undo-tree-id632 . -2) (undo-tree-id633 . -1) (undo-tree-id634 . -2) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -1) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -1) (undo-tree-id648 . -3) (undo-tree-id649 . -3)) nil (25585 11702 559500 4000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . 2026) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (t 25585 11660 789690 81000)) ((2026 . 2027)) (25585 11676 125800 261000) 0 nil])
([nil nil ((2186 . 2192) (#("_" 0 1 (face haskell-keyword-face fontified t)) . -2186) (undo-tree-id614 . -1) (#(">" 0 1 (face haskell-operator-face syntax-table (1) fontified t)) . -2187) (undo-tree-id615 . -1) (#(" " 0 1 (fontified t)) . -2188) (undo-tree-id616 . -1) 2189 (2185 . 2189)) nil (25585 11702 559460 464000) 0 nil])
([nil nil ((#("(fst context)" 0 5 (fontified t) 5 12 (fontified t) 12 13 (fontified t)) . 2014) (undo-tree-id336 . -12) (undo-tree-id337 . -7) (undo-tree-id338 . -12) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -2) (undo-tree-id347 . -1) (undo-tree-id348 . -2) (undo-tree-id349 . -2) (undo-tree-id350 . -2) (undo-tree-id351 . -2) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -3) (undo-tree-id355 . -2) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -3) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -4) (undo-tree-id363 . -3) (undo-tree-id364 . -4) (undo-tree-id365 . -4) (undo-tree-id366 . -4) (undo-tree-id367 . -4) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -5) (undo-tree-id371 . -4) (undo-tree-id372 . -5) (undo-tree-id373 . -5) (undo-tree-id374 . -5) (undo-tree-id375 . -5) (undo-tree-id376 . -5) (undo-tree-id377 . -5) (undo-tree-id378 . -6) (undo-tree-id379 . -5) (undo-tree-id380 . -6) (undo-tree-id381 . -6) (undo-tree-id382 . -6) (undo-tree-id383 . -6) (undo-tree-id384 . -6) (undo-tree-id385 . -6) (undo-tree-id386 . -7) (undo-tree-id387 . -6) (undo-tree-id388 . -7) (undo-tree-id389 . -7) (undo-tree-id390 . -7) (undo-tree-id391 . -7) (undo-tree-id392 . -7) (undo-tree-id393 . -7) (undo-tree-id394 . -8) (undo-tree-id395 . -7) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) (undo-tree-id402 . -9) (undo-tree-id403 . -8) (undo-tree-id404 . -9) (undo-tree-id405 . -9) (undo-tree-id406 . -9) (undo-tree-id407 . -9) (undo-tree-id408 . -9) (undo-tree-id409 . -9) (undo-tree-id410 . -10) (undo-tree-id411 . -9) (undo-tree-id412 . -10) (undo-tree-id413 . -10) (undo-tree-id414 . -10) (undo-tree-id415 . -10) (undo-tree-id416 . -10) (undo-tree-id417 . -10) (undo-tree-id418 . -11) (undo-tree-id419 . -10) (undo-tree-id420 . -11) (undo-tree-id421 . -11) (undo-tree-id422 . -11) (undo-tree-id423 . -11) (undo-tree-id424 . -11) (undo-tree-id425 . -11) (undo-tree-id426 . -11) (undo-tree-id427 . -11) (undo-tree-id428 . -11) (undo-tree-id429 . -11) (undo-tree-id430 . -11) (undo-tree-id431 . -12) (undo-tree-id432 . -11) (undo-tree-id433 . -12) (undo-tree-id434 . -12) (undo-tree-id435 . -12) (undo-tree-id436 . -12) (undo-tree-id437 . -12) (undo-tree-id438 . -12) (undo-tree-id439 . -12) (undo-tree-id440 . -12) (undo-tree-id441 . -12) (undo-tree-id442 . -12) (undo-tree-id443 . -12) (undo-tree-id444 . -12) (undo-tree-id445 . -12) (undo-tree-id446 . -12) (undo-tree-id447 . -12) (undo-tree-id448 . -12) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -5) (undo-tree-id453 . -12) (undo-tree-id454 . -12) (undo-tree-id455 . -13) (undo-tree-id456 . -13) (undo-tree-id457 . -13) (undo-tree-id458 . -13) (undo-tree-id459 . -12) (undo-tree-id460 . -12) (undo-tree-id461 . -1) (undo-tree-id462 . -2) (undo-tree-id463 . -5) (undo-tree-id464 . -6) (undo-tree-id465 . -12) (undo-tree-id466 . -12) (undo-tree-id467 . -12) (undo-tree-id468 . -12) (undo-tree-id469 . -12) (undo-tree-id470 . -12) (undo-tree-id471 . -12) (undo-tree-id472 . -12) (undo-tree-id473 . -12) (undo-tree-id474 . -12) (undo-tree-id475 . -12) (undo-tree-id476 . -12) (undo-tree-id477 . -12) (undo-tree-id478 . -12) (undo-tree-id479 . -12) (undo-tree-id480 . -12) (undo-tree-id481 . -12) (undo-tree-id482 . -12) (undo-tree-id483 . -12) (undo-tree-id484 . -12) (undo-tree-id485 . -12) (undo-tree-id486 . -12) (undo-tree-id487 . -12) (undo-tree-id488 . -12) (undo-tree-id489 . -12) (undo-tree-id490 . -12) (undo-tree-id491 . -12) (undo-tree-id492 . -12) (undo-tree-id493 . -12) (undo-tree-id494 . -12) (undo-tree-id495 . -12) (undo-tree-id496 . -12) (undo-tree-id497 . -12) (undo-tree-id498 . -12) (undo-tree-id499 . -12) (undo-tree-id500 . -12) (undo-tree-id501 . -12) (undo-tree-id502 . -12) (undo-tree-id503 . -12) (undo-tree-id504 . -12) (undo-tree-id505 . -12) (undo-tree-id506 . -12) (undo-tree-id507 . -12) (undo-tree-id508 . -12) (undo-tree-id509 . -12) (undo-tree-id510 . -12) (undo-tree-id511 . -12) (undo-tree-id512 . -11) (undo-tree-id513 . -12) (undo-tree-id514 . -11) (undo-tree-id515 . -11) (undo-tree-id516 . -11) (undo-tree-id517 . -11) (undo-tree-id518 . -11) (undo-tree-id519 . -11) (undo-tree-id520 . -11) (undo-tree-id521 . -11) (undo-tree-id522 . -11) (undo-tree-id523 . -11) (undo-tree-id524 . -11) (undo-tree-id525 . -11) (undo-tree-id526 . -11) (undo-tree-id527 . -11) (undo-tree-id528 . -11) (undo-tree-id529 . -11) (undo-tree-id530 . -10) (undo-tree-id531 . -11) (undo-tree-id532 . -10) (undo-tree-id533 . -10) (undo-tree-id534 . -10) (undo-tree-id535 . -10) (undo-tree-id536 . -10) (undo-tree-id537 . -10) (undo-tree-id538 . -9) (undo-tree-id539 . -10) (undo-tree-id540 . -9) (undo-tree-id541 . -9) (undo-tree-id542 . -9) (undo-tree-id543 . -9) (undo-tree-id544 . -9) (undo-tree-id545 . -9) (undo-tree-id546 . -8) (undo-tree-id547 . -9) (undo-tree-id548 . -8) (undo-tree-id549 . -8) (undo-tree-id550 . -8) (undo-tree-id551 . -8) (undo-tree-id552 . -8) (undo-tree-id553 . -8) (undo-tree-id554 . -8) (undo-tree-id555 . -8) (undo-tree-id556 . -8) (undo-tree-id557 . -8) (undo-tree-id558 . -8) (undo-tree-id559 . -7) (undo-tree-id560 . -8) (undo-tree-id561 . -7) (undo-tree-id562 . -7) (undo-tree-id563 . -7) (undo-tree-id564 . -7) (undo-tree-id565 . -7) (undo-tree-id566 . -7) (undo-tree-id567 . -7) (undo-tree-id568 . -7) (undo-tree-id569 . -7) (undo-tree-id570 . -7) (undo-tree-id571 . -7) (undo-tree-id572 . -7) (undo-tree-id573 . -7) (undo-tree-id574 . -7) (undo-tree-id575 . -7) (undo-tree-id576 . -7) (undo-tree-id577 . -7) (undo-tree-id578 . -7) (undo-tree-id579 . -7) (undo-tree-id580 . -7) (undo-tree-id581 . -7) (undo-tree-id582 . -7) (undo-tree-id583 . -7) (undo-tree-id584 . -7) (undo-tree-id585 . -7) (undo-tree-id586 . -7) (undo-tree-id587 . -7) (undo-tree-id588 . -7) (undo-tree-id589 . -7) (undo-tree-id590 . -7) (undo-tree-id591 . -7) (undo-tree-id592 . -7) (undo-tree-id593 . -7) (undo-tree-id594 . -7) (undo-tree-id595 . -7) (undo-tree-id596 . -7) (undo-tree-id597 . -7) (undo-tree-id598 . -7) (undo-tree-id599 . -7) (undo-tree-id600 . -7) (undo-tree-id601 . -7) (undo-tree-id602 . -7) (undo-tree-id603 . -7) (undo-tree-id604 . -7) (undo-tree-id605 . -7) (undo-tree-id606 . -7) (undo-tree-id607 . -7) (undo-tree-id608 . -7) (undo-tree-id609 . -7) (undo-tree-id610 . -13) 2021) ((2014 . 2027)) (25585 11676 125333 274000) 0 nil])
([nil nil ((2001 . 2002) (t 25585 11702 599692 21000)) nil (25585 11733 418900 78000) 0 nil])
nil
([nil nil ((nil fontified t 2019 . 2027) (#("contextF" 0 8 (fontified t)) . -2011) (2019 . 2035) 2019 (#("conte" 0 5 (fontified t)) . -2011) (2016 . 2024) 2016 (2015 . 2016) (#("y" 0 1 (fontified t)) . -2015) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) 2016 (2010 . 2016)) nil (25585 11733 418886 655000) 0 nil])
([nil nil ((2027 . 2028)) nil (25585 11733 418826 725000) 0 nil])
([nil nil ((#("(fst contextF)" 0 5 (fontified t) 5 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 2034) (undo-tree-id861 . -13) (undo-tree-id862 . -13) (undo-tree-id863 . -12) (undo-tree-id864 . -5) (undo-tree-id865 . -1) (undo-tree-id866 . -2) (undo-tree-id867 . -5) (undo-tree-id868 . -6) (undo-tree-id869 . -13) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -5) (undo-tree-id874 . -13) (undo-tree-id875 . -13) (undo-tree-id876 . -14) (undo-tree-id877 . -14) (undo-tree-id878 . -14) (undo-tree-id879 . -14) (undo-tree-id880 . -1) (undo-tree-id881 . -2) (undo-tree-id882 . -5) (undo-tree-id883 . -6) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -5) (undo-tree-id888 . -13) (undo-tree-id889 . -13) (undo-tree-id890 . -14) (undo-tree-id891 . -14) (undo-tree-id892 . -14) (undo-tree-id893 . -14) (undo-tree-id894 . -1) (undo-tree-id895 . -2) (undo-tree-id896 . -5) (undo-tree-id897 . -6) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -5) (undo-tree-id902 . -13) (undo-tree-id903 . -13) (undo-tree-id904 . -14) (undo-tree-id905 . -14) (undo-tree-id906 . -14) (undo-tree-id907 . -14) (undo-tree-id908 . -1) (undo-tree-id909 . -2) (undo-tree-id910 . -5) (undo-tree-id911 . -6) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -2) (undo-tree-id920 . -1) (undo-tree-id921 . -2) (undo-tree-id922 . -2) (undo-tree-id923 . -2) (undo-tree-id924 . -2) (undo-tree-id925 . -2) (undo-tree-id926 . -2) (undo-tree-id927 . -3) (undo-tree-id928 . -2) (undo-tree-id929 . -3) (undo-tree-id930 . -3) (undo-tree-id931 . -3) (undo-tree-id932 . -3) (undo-tree-id933 . -3) (undo-tree-id934 . -3) (undo-tree-id935 . -4) (undo-tree-id936 . -3) (undo-tree-id937 . -4) (undo-tree-id938 . -4) (undo-tree-id939 . -4) (undo-tree-id940 . -4) (undo-tree-id941 . -4) (undo-tree-id942 . -4) (undo-tree-id943 . -5) (undo-tree-id944 . -4) (undo-tree-id945 . -5) (undo-tree-id946 . -5) (undo-tree-id947 . -5) (undo-tree-id948 . -5) (undo-tree-id949 . -5) (undo-tree-id950 . -5) (undo-tree-id951 . -5) (undo-tree-id952 . -5) (undo-tree-id953 . -5) (undo-tree-id954 . -5) (undo-tree-id955 . -5) (undo-tree-id956 . -5) (undo-tree-id957 . -5) (undo-tree-id958 . -5) (undo-tree-id959 . -5) (undo-tree-id960 . -5) (undo-tree-id961 . -5) (undo-tree-id962 . -5) (undo-tree-id963 . -5) (undo-tree-id964 . -5) (undo-tree-id965 . -5) (undo-tree-id966 . -5) (undo-tree-id967 . -5) (undo-tree-id968 . -5) (undo-tree-id969 . -14) 2039) nil (25585 11733 418790 818000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2033) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1)) nil (25585 11733 418438 380000) 0 nil])
([nil nil ((2205 . 2209) (t 25585 11733 476360 121000)) nil (25585 12041 976359 860000) 0 nil])
([nil nil ((2205 . 2206)) nil (25585 12041 976357 789000) 0 nil])
([nil nil ((2210 . 2214)) nil (25585 12041 976355 574000) 0 nil])
([nil nil ((2213 . 2222)) nil (25585 12041 976349 703000) 0 nil])
([nil nil ((#("ariables" 0 8 (fontified t)) . 2214) (undo-tree-id985 . -7) (undo-tree-id986 . -7) (undo-tree-id987 . -7) (undo-tree-id988 . -7) (undo-tree-id989 . -7) (undo-tree-id990 . -7) (undo-tree-id991 . -7) (undo-tree-id992 . -7) (undo-tree-id993 . -7) (undo-tree-id994 . -7) (undo-tree-id995 . -7) (undo-tree-id996 . -7) (undo-tree-id997 . -7) (undo-tree-id998 . -7) (undo-tree-id999 . -7) (undo-tree-id1000 . -7) (undo-tree-id1001 . -7) (undo-tree-id1002 . -7) (undo-tree-id1003 . -7) (undo-tree-id1004 . -7) (undo-tree-id1005 . -7) (undo-tree-id1006 . -7) (undo-tree-id1007 . -7) (undo-tree-id1008 . -7) (undo-tree-id1009 . -7) (undo-tree-id1010 . -7) (undo-tree-id1011 . -7) (undo-tree-id1012 . -7) (undo-tree-id1013 . -7) (undo-tree-id1014 . -7) (undo-tree-id1015 . -7) (undo-tree-id1016 . -7) (undo-tree-id1017 . -7) (undo-tree-id1018 . -7) (undo-tree-id1019 . -7) (undo-tree-id1020 . -7) (undo-tree-id1021 . -7) (undo-tree-id1022 . -7) (undo-tree-id1023 . -7) (undo-tree-id1024 . -7) (undo-tree-id1025 . -7) (undo-tree-id1026 . -7) (undo-tree-id1027 . -7) (undo-tree-id1028 . -6) (undo-tree-id1029 . -7) (undo-tree-id1030 . -6) (undo-tree-id1031 . -6) (undo-tree-id1032 . -6) (undo-tree-id1033 . -6) (undo-tree-id1034 . -6) (undo-tree-id1035 . -6) (undo-tree-id1036 . -6) (undo-tree-id1037 . -6) (undo-tree-id1038 . -6) (undo-tree-id1039 . -6) (undo-tree-id1040 . -6) (undo-tree-id1041 . -6) (undo-tree-id1042 . -6) (undo-tree-id1043 . -6) (undo-tree-id1044 . -6) (undo-tree-id1045 . -6) (undo-tree-id1046 . -5) (undo-tree-id1047 . -6) (undo-tree-id1048 . -5) (undo-tree-id1049 . -5) (undo-tree-id1050 . -5) (undo-tree-id1051 . -5) (undo-tree-id1052 . -5) (undo-tree-id1053 . -5) (undo-tree-id1054 . -4) (undo-tree-id1055 . -5) (undo-tree-id1056 . -4) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) (undo-tree-id1060 . -4) (undo-tree-id1061 . -4) (undo-tree-id1062 . -3) (undo-tree-id1063 . -4) (undo-tree-id1064 . -3) (undo-tree-id1065 . -3) (undo-tree-id1066 . -3) (undo-tree-id1067 . -3) (undo-tree-id1068 . -3) (undo-tree-id1069 . -3) (undo-tree-id1070 . -2) (undo-tree-id1071 . -3) (undo-tree-id1072 . -2) (undo-tree-id1073 . -2) (undo-tree-id1074 . -2) (undo-tree-id1075 . -2) (undo-tree-id1076 . -2) (undo-tree-id1077 . -2) (undo-tree-id1078 . -1) (undo-tree-id1079 . -2) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -8) (undo-tree-id1088 . -8) (t 25585 12042 19707 766000)) nil (25585 12052 306476 25000) 0 nil])
([nil nil ((2214 . 2215)) nil (25585 12052 306376 700000) 0 nil])
([nil nil ((2215 . 2219) (#(" " 0 1 (fontified t)) . -2215) (undo-tree-id984 . -1) 2216) nil (25585 12052 306371 496000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2219) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (t 25585 12052 429708 249000)) nil (25585 12063 358542 499000) 0 nil])
([nil nil ((2226 . 2232) (2221 . 2226)) nil (25585 12063 358519 40000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -2233) (undo-tree-id1840 . -2) 2235 (2232 . 2235) (t 25585 12063 683042 103000) 2230) nil (25585 12210 583620 81000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -2233) (undo-tree-id1839 . -2) 2235 (2232 . 2235) 2197) nil (25585 12210 583616 781000) 0 nil])
([nil nil ((2236 . 2244) (#("d" 0 1 (face haskell-constructor-face fontified t)) . -2236) (undo-tree-id1834 . -1) (#("d" 0 1 (face haskell-constructor-face fontified t)) . -2237) (undo-tree-id1835 . -1) 2238 (2236 . 2238) (#("A" 0 1 (face haskell-constructor-face fontified t)) . -2236) (undo-tree-id1836 . -1) (#("D" 0 1 (face haskell-constructor-face fontified t)) . -2237) (undo-tree-id1837 . -1) (#("D" 0 1 (face haskell-constructor-face fontified t)) . -2238) (undo-tree-id1838 . -1) 2239 (2235 . 2239) (2232 . 2235) 2231) nil (25585 12210 583612 529000) 0 nil])
([nil nil ((2215 . 2216) (#("exp" 0 3 (fontified t)) . 2215) (undo-tree-id1832 . -2) (undo-tree-id1833 . -1) 2216) nil (25585 12210 583603 584000) 0 nil])
([nil nil ((2233 . 2236) (#("EAdd" 0 4 (face haskell-constructor-face fontified t)) . 2233) (undo-tree-id1778 . -3) (undo-tree-id1779 . -2) (undo-tree-id1780 . -4) (undo-tree-id1781 . -4) (undo-tree-id1782 . -4) (undo-tree-id1783 . -4) (undo-tree-id1784 . -4) (undo-tree-id1785 . -4) (undo-tree-id1786 . -3) (undo-tree-id1787 . -4) (undo-tree-id1788 . -3) (undo-tree-id1789 . -3) (undo-tree-id1790 . -3) (undo-tree-id1791 . -3) (undo-tree-id1792 . -3) (undo-tree-id1793 . -3) (undo-tree-id1794 . -2) (undo-tree-id1795 . -3) (undo-tree-id1796 . -2) (undo-tree-id1797 . -2) (undo-tree-id1798 . -2) (undo-tree-id1799 . -2) (undo-tree-id1800 . -2) (undo-tree-id1801 . -2) (undo-tree-id1802 . -2) (undo-tree-id1803 . -2) (undo-tree-id1804 . -2) (undo-tree-id1805 . -2) (undo-tree-id1806 . -2) (undo-tree-id1807 . -2) (undo-tree-id1808 . -2) (undo-tree-id1809 . -2) (undo-tree-id1810 . -2) (undo-tree-id1811 . -2) (undo-tree-id1812 . -2) (undo-tree-id1813 . -2) (undo-tree-id1814 . -2) (undo-tree-id1815 . -2) (undo-tree-id1816 . -2) (undo-tree-id1817 . -2) (undo-tree-id1818 . -2) (undo-tree-id1819 . -2) (undo-tree-id1820 . -2) (undo-tree-id1821 . -2) (undo-tree-id1822 . -2) (undo-tree-id1823 . -2) (undo-tree-id1824 . -2) (undo-tree-id1825 . -2) (undo-tree-id1826 . -2) (undo-tree-id1827 . -2) (undo-tree-id1828 . -2) (undo-tree-id1829 . -2) (undo-tree-id1830 . -4) (undo-tree-id1831 . -4) 2235) nil (25585 12210 585042 311000) 0 nil])
([nil nil ((2240 . 2245) (#(" " 0 1 (fontified t)) . -2240) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) 2241) nil (25585 12250 490154 285000) 0 nil] [nil nil ((#("  " 0 2 (fontified t)) . -2231) (undo-tree-id1099 . -1) (undo-tree-id1100 . -2) (undo-tree-id1101 . -2) (undo-tree-id1102 . -2) (undo-tree-id1103 . -2) (undo-tree-id1104 . -2) (undo-tree-id1105 . -2) (undo-tree-id1106 . -2) (undo-tree-id1107 . -2) (undo-tree-id1108 . -2) (undo-tree-id1109 . -2) (undo-tree-id1110 . -2) (undo-tree-id1111 . -2) (undo-tree-id1112 . -2) (undo-tree-id1113 . -2) (undo-tree-id1114 . -2) (undo-tree-id1115 . -2) (undo-tree-id1116 . -2) (undo-tree-id1117 . -2) (undo-tree-id1118 . -2) (undo-tree-id1119 . -2) (undo-tree-id1120 . -2) (undo-tree-id1121 . -2) (undo-tree-id1122 . -2) (undo-tree-id1123 . -2) (undo-tree-id1124 . -2) (undo-tree-id1125 . -2) (undo-tree-id1126 . -2) (undo-tree-id1127 . -2) (undo-tree-id1128 . -2) (undo-tree-id1129 . -2) (undo-tree-id1130 . -2) (undo-tree-id1131 . -2) (undo-tree-id1132 . -2) (undo-tree-id1133 . -2) (undo-tree-id1134 . -2) (undo-tree-id1135 . -2) (undo-tree-id1136 . -2) (undo-tree-id1137 . -2) (undo-tree-id1138 . -2) (undo-tree-id1139 . -2) (undo-tree-id1140 . -2) (undo-tree-id1141 . -2) (undo-tree-id1142 . -2) (undo-tree-id1143 . -2) (undo-tree-id1144 . -2) (undo-tree-id1145 . -2) (undo-tree-id1146 . -2) (undo-tree-id1147 . -2) (undo-tree-id1148 . -2) (undo-tree-id1149 . -2) (undo-tree-id1150 . -2) (undo-tree-id1151 . -2) (undo-tree-id1152 . -2) (undo-tree-id1153 . -2) (undo-tree-id1154 . -2) (undo-tree-id1155 . -2) (undo-tree-id1156 . -2) (undo-tree-id1157 . -2) (undo-tree-id1158 . -2) (undo-tree-id1159 . -2) (undo-tree-id1160 . -2) (undo-tree-id1161 . -2) (undo-tree-id1162 . -2) (undo-tree-id1163 . -2) (undo-tree-id1164 . -2) (undo-tree-id1165 . -2) (undo-tree-id1166 . -2) (undo-tree-id1167 . -2) (undo-tree-id1168 . -2) (undo-tree-id1169 . -2) (undo-tree-id1170 . -2) (undo-tree-id1171 . -2) (undo-tree-id1172 . -2) (undo-tree-id1173 . -2) (undo-tree-id1174 . -2) (undo-tree-id1175 . -2) (undo-tree-id1176 . -2) (undo-tree-id1177 . -2) (undo-tree-id1178 . -2) (undo-tree-id1179 . -2) (undo-tree-id1180 . -2) (undo-tree-id1181 . -2) (undo-tree-id1182 . -2) (undo-tree-id1183 . -2) (undo-tree-id1184 . -2) (undo-tree-id1185 . -2) (undo-tree-id1186 . -2) (undo-tree-id1187 . -2) (undo-tree-id1188 . -2) (undo-tree-id1189 . -2) (undo-tree-id1190 . -2) (undo-tree-id1191 . -2) (undo-tree-id1192 . -2) (undo-tree-id1193 . -2) (undo-tree-id1194 . -2) (undo-tree-id1195 . -2) (undo-tree-id1196 . -2) (undo-tree-id1197 . -2) (undo-tree-id1198 . -2) (undo-tree-id1199 . -2) (undo-tree-id1200 . -2) (undo-tree-id1201 . -2) (undo-tree-id1202 . -2) (undo-tree-id1203 . -2) (undo-tree-id1204 . -2) (undo-tree-id1205 . -2) (undo-tree-id1206 . -2) (undo-tree-id1207 . -2) (undo-tree-id1208 . -2) (undo-tree-id1209 . -2) (undo-tree-id1210 . -2) (undo-tree-id1211 . -2) (undo-tree-id1212 . -2) (undo-tree-id1213 . -2) (undo-tree-id1214 . -2) (undo-tree-id1215 . -2) (undo-tree-id1216 . -2) (undo-tree-id1217 . -2) (undo-tree-id1218 . -2) (undo-tree-id1219 . -2) (undo-tree-id1220 . -2) (undo-tree-id1221 . -2) (undo-tree-id1222 . -2) (undo-tree-id1223 . -2) (undo-tree-id1224 . -2) (undo-tree-id1225 . -2) (undo-tree-id1226 . -2) (undo-tree-id1227 . -2) (undo-tree-id1228 . -2) (undo-tree-id1229 . -2) (undo-tree-id1230 . -2) (undo-tree-id1231 . -2) (undo-tree-id1232 . -2) (undo-tree-id1233 . -2) (undo-tree-id1234 . -2) (undo-tree-id1235 . -2) (undo-tree-id1236 . -2) (undo-tree-id1237 . -2) (undo-tree-id1238 . -2) (undo-tree-id1239 . -2) (undo-tree-id1240 . -2) (undo-tree-id1241 . -2) (undo-tree-id1242 . -2) (undo-tree-id1243 . -2) (undo-tree-id1244 . -2) (undo-tree-id1245 . -2) (undo-tree-id1246 . -2) (undo-tree-id1247 . -2) (undo-tree-id1248 . -2) (undo-tree-id1249 . -2) (undo-tree-id1250 . -2) (undo-tree-id1251 . -2) (undo-tree-id1252 . -2) (undo-tree-id1253 . -2) (undo-tree-id1254 . -2) (undo-tree-id1255 . -2) (undo-tree-id1256 . -2) (undo-tree-id1257 . -2) (undo-tree-id1258 . -2) (undo-tree-id1259 . -2) (undo-tree-id1260 . -2) (undo-tree-id1261 . -2) (undo-tree-id1262 . -2) (undo-tree-id1263 . -2) (undo-tree-id1264 . -2) (undo-tree-id1265 . -2) (undo-tree-id1266 . -2) (undo-tree-id1267 . -2) (undo-tree-id1268 . -2) (undo-tree-id1269 . -2) (undo-tree-id1270 . -2) (undo-tree-id1271 . -2) (undo-tree-id1272 . -2) (undo-tree-id1273 . -2) (undo-tree-id1274 . -2) (undo-tree-id1275 . -2) (undo-tree-id1276 . -2) (undo-tree-id1277 . -2) (undo-tree-id1278 . -2) (undo-tree-id1279 . -2) (undo-tree-id1280 . -2) (undo-tree-id1281 . -2) (undo-tree-id1282 . -2) (undo-tree-id1283 . -2) (undo-tree-id1284 . -2) (undo-tree-id1285 . -2) (undo-tree-id1286 . -2) (undo-tree-id1287 . -2) (undo-tree-id1288 . -2) (undo-tree-id1289 . -2) (undo-tree-id1290 . -2) (undo-tree-id1291 . -2) (undo-tree-id1292 . -2) (undo-tree-id1293 . -2) (undo-tree-id1294 . -2) (undo-tree-id1295 . -2) (undo-tree-id1296 . -2) (undo-tree-id1297 . -2) (undo-tree-id1298 . -2) (undo-tree-id1299 . -2) (undo-tree-id1300 . -2) (undo-tree-id1301 . -2) (undo-tree-id1302 . -2) (undo-tree-id1303 . -2) (undo-tree-id1304 . -2) (undo-tree-id1305 . -2) (undo-tree-id1306 . -2) (undo-tree-id1307 . -2) (undo-tree-id1308 . -2) (undo-tree-id1309 . -2) (undo-tree-id1310 . -2) (undo-tree-id1311 . -2) (undo-tree-id1312 . -2) (undo-tree-id1313 . -2) (undo-tree-id1314 . -2) (undo-tree-id1315 . -2) (undo-tree-id1316 . -2) (undo-tree-id1317 . -2) (undo-tree-id1318 . -2) (undo-tree-id1319 . -2) (undo-tree-id1320 . -2) (undo-tree-id1321 . -2) (undo-tree-id1322 . -2) (undo-tree-id1323 . -2) (undo-tree-id1324 . -2) (undo-tree-id1325 . -2) (undo-tree-id1326 . -2) (undo-tree-id1327 . -2) (undo-tree-id1328 . -2) (undo-tree-id1329 . -2) (undo-tree-id1330 . -2) (undo-tree-id1331 . -2) (undo-tree-id1332 . -2) (undo-tree-id1333 . -2) (undo-tree-id1334 . -2) (undo-tree-id1335 . -2) (undo-tree-id1336 . -2) (undo-tree-id1337 . -2) (undo-tree-id1338 . -2) (undo-tree-id1339 . -2) (undo-tree-id1340 . -2) (undo-tree-id1341 . -2) (undo-tree-id1342 . -2) (undo-tree-id1343 . -2) (undo-tree-id1344 . -2) (undo-tree-id1345 . -2) (undo-tree-id1346 . -2) (undo-tree-id1347 . -2) (undo-tree-id1348 . -2) (undo-tree-id1349 . -2) (undo-tree-id1350 . -2) (undo-tree-id1351 . -2) (undo-tree-id1352 . -2) (undo-tree-id1353 . -2) (undo-tree-id1354 . -2) (undo-tree-id1355 . -2) (undo-tree-id1356 . -2) (undo-tree-id1357 . -2) (undo-tree-id1358 . -2) (undo-tree-id1359 . -2) (undo-tree-id1360 . -2) (undo-tree-id1361 . -2) (undo-tree-id1362 . -2) (undo-tree-id1363 . -2) (undo-tree-id1364 . -2) (undo-tree-id1365 . -2) (undo-tree-id1366 . -2) (undo-tree-id1367 . -2) (undo-tree-id1368 . -2) (undo-tree-id1369 . -2) (undo-tree-id1370 . -2) (undo-tree-id1371 . -2) (undo-tree-id1372 . -2) (undo-tree-id1373 . -2) (undo-tree-id1374 . -2) (undo-tree-id1375 . -2) (undo-tree-id1376 . -2) (undo-tree-id1377 . -2) (undo-tree-id1378 . -2) (undo-tree-id1379 . -2) (undo-tree-id1380 . -2) (undo-tree-id1381 . -2) (undo-tree-id1382 . -2) (undo-tree-id1383 . -2) (undo-tree-id1384 . -2) (undo-tree-id1385 . -2) (undo-tree-id1386 . -2) (undo-tree-id1387 . -2) (undo-tree-id1388 . -2) (undo-tree-id1389 . -2) (undo-tree-id1390 . -2) (undo-tree-id1391 . -2) (undo-tree-id1392 . -2) (undo-tree-id1393 . -2) (undo-tree-id1394 . -2) (undo-tree-id1395 . -2) (undo-tree-id1396 . -2) (undo-tree-id1397 . -2) (undo-tree-id1398 . -2) (undo-tree-id1399 . -2) (undo-tree-id1400 . -2) (undo-tree-id1401 . -2) (undo-tree-id1402 . -2) (undo-tree-id1403 . -2) (undo-tree-id1404 . -2) (undo-tree-id1405 . -2) (undo-tree-id1406 . -2) (undo-tree-id1407 . -2) (undo-tree-id1408 . -2) (undo-tree-id1409 . -2) (undo-tree-id1410 . -2) (undo-tree-id1411 . -2) (undo-tree-id1412 . -2) (undo-tree-id1413 . -2) (undo-tree-id1414 . -2) (undo-tree-id1415 . -2) (undo-tree-id1416 . -2) (undo-tree-id1417 . -2) (undo-tree-id1418 . -2) (undo-tree-id1419 . -2) (undo-tree-id1420 . -2) (undo-tree-id1421 . -2) (undo-tree-id1422 . -2) (undo-tree-id1423 . -2) (undo-tree-id1424 . -2) (undo-tree-id1425 . -2) (undo-tree-id1426 . -2) (undo-tree-id1427 . -2) (undo-tree-id1428 . -2) (undo-tree-id1429 . -2) (undo-tree-id1430 . -2) (undo-tree-id1431 . -2) (undo-tree-id1432 . -2) (undo-tree-id1433 . -2) (undo-tree-id1434 . -2) (undo-tree-id1435 . -2) (undo-tree-id1436 . -2) (undo-tree-id1437 . -2) (undo-tree-id1438 . -2) (undo-tree-id1439 . -2) (undo-tree-id1440 . -2) (undo-tree-id1441 . -2) (undo-tree-id1442 . -2) (undo-tree-id1443 . -2) (undo-tree-id1444 . -2) (undo-tree-id1445 . -2) (undo-tree-id1446 . -2) 2233 (2231 . 2233) (2231 . 2232) (#("  Sub exp 
" 0 2 (fontified t) 2 5 (face haskell-constructor-face fontified t) 5 10 (fontified t) 10 11 (fontified t)) . 2231) (undo-tree-id1447 . 1) (undo-tree-id1448 . -10) (undo-tree-id1449 . -11) (undo-tree-id1450 . -11) (undo-tree-id1451 . -11) (undo-tree-id1452 . -11) (undo-tree-id1453 . -11) (undo-tree-id1454 . -11) (undo-tree-id1455 . -11) (undo-tree-id1456 . -11) (undo-tree-id1457 . -9) (undo-tree-id1458 . -11) (undo-tree-id1459 . -11) (undo-tree-id1460 . -2) (undo-tree-id1461 . -6) (undo-tree-id1462 . -2) (undo-tree-id1463 . -2) (undo-tree-id1464 . -2) (undo-tree-id1465 . -2) (undo-tree-id1466 . -2) (undo-tree-id1467 . -2) (undo-tree-id1468 . -2) (undo-tree-id1469 . -2) (undo-tree-id1470 . -2) (undo-tree-id1471 . -2) (undo-tree-id1472 . -2) (undo-tree-id1473 . -2) (undo-tree-id1474 . -2) (undo-tree-id1475 . -2) (undo-tree-id1476 . -2) (undo-tree-id1477 . -2) (undo-tree-id1478 . -2) (undo-tree-id1479 . -2) (undo-tree-id1480 . -2) (undo-tree-id1481 . -2) (undo-tree-id1482 . -2) (undo-tree-id1483 . -2) (undo-tree-id1484 . -2) (undo-tree-id1485 . -2) (undo-tree-id1486 . -2) (undo-tree-id1487 . -2) (undo-tree-id1488 . -2) (undo-tree-id1489 . -2) (undo-tree-id1490 . -2) (undo-tree-id1491 . -2) (undo-tree-id1492 . -2) (undo-tree-id1493 . -2) (undo-tree-id1494 . -2) (undo-tree-id1495 . -2) (undo-tree-id1496 . -2) (undo-tree-id1497 . -2) (undo-tree-id1498 . -2) (undo-tree-id1499 . -2) (undo-tree-id1500 . -2) (undo-tree-id1501 . -2) (undo-tree-id1502 . -2) (undo-tree-id1503 . -2) (undo-tree-id1504 . -2) (undo-tree-id1505 . -2) (undo-tree-id1506 . -2) (undo-tree-id1507 . -2) (undo-tree-id1508 . -2) (undo-tree-id1509 . -2) (undo-tree-id1510 . -6) (undo-tree-id1511 . -2) (undo-tree-id1512 . -2) (undo-tree-id1513 . -2) (undo-tree-id1514 . -6) (undo-tree-id1515 . -7) (undo-tree-id1516 . -2) (undo-tree-id1517 . -2) (undo-tree-id1518 . -2) (undo-tree-id1519 . -2) (undo-tree-id1520 . -2) (undo-tree-id1521 . -2) (undo-tree-id1522 . -2) (undo-tree-id1523 . -2) (undo-tree-id1524 . -2) (undo-tree-id1525 . -2) (undo-tree-id1526 . -2) (undo-tree-id1527 . -2) (undo-tree-id1528 . -2) (undo-tree-id1529 . -2) (undo-tree-id1530 . -2) (undo-tree-id1531 . -2) (undo-tree-id1532 . -2) (undo-tree-id1533 . -6) (undo-tree-id1534 . -3) (undo-tree-id1535 . -2) (undo-tree-id1536 . -2) (undo-tree-id1537 . -3) (undo-tree-id1538 . -6) (undo-tree-id1539 . -7) (undo-tree-id1540 . -3) (undo-tree-id1541 . -3) (undo-tree-id1542 . -3) (undo-tree-id1543 . -3) (undo-tree-id1544 . -3) (undo-tree-id1545 . -3) (undo-tree-id1546 . -3) (undo-tree-id1547 . -3) (undo-tree-id1548 . -3) (undo-tree-id1549 . -3) (undo-tree-id1550 . -3) (undo-tree-id1551 . -2) (undo-tree-id1552 . -6) (undo-tree-id1553 . -4) (undo-tree-id1554 . -3) (undo-tree-id1555 . -2) (undo-tree-id1556 . -3) (undo-tree-id1557 . -6) (undo-tree-id1558 . -7) (undo-tree-id1559 . -4) (undo-tree-id1560 . -4) (undo-tree-id1561 . -4) (undo-tree-id1562 . -4) (undo-tree-id1563 . -4) (undo-tree-id1564 . -4) (undo-tree-id1565 . -2) (undo-tree-id1566 . -6) (undo-tree-id1567 . -5) (undo-tree-id1568 . -4) (undo-tree-id1569 . -2) (undo-tree-id1570 . -3) (undo-tree-id1571 . -6) (undo-tree-id1572 . -7) (undo-tree-id1573 . -5) (undo-tree-id1574 . -5) (undo-tree-id1575 . -5) (undo-tree-id1576 . -5) (undo-tree-id1577 . -5) (undo-tree-id1578 . -5) (undo-tree-id1579 . -5) (undo-tree-id1580 . -5) (undo-tree-id1581 . -5) (undo-tree-id1582 . -5) (undo-tree-id1583 . -5) (undo-tree-id1584 . -4) (undo-tree-id1585 . -4) (undo-tree-id1586 . -4) (undo-tree-id1587 . -4) (undo-tree-id1588 . -4) (undo-tree-id1589 . -4) (undo-tree-id1590 . -4) (undo-tree-id1591 . -4) (undo-tree-id1592 . -4) (undo-tree-id1593 . -4) (undo-tree-id1594 . -4) (undo-tree-id1595 . -4) (undo-tree-id1596 . -4) (undo-tree-id1597 . -4) (undo-tree-id1598 . -4) (undo-tree-id1599 . -4) (undo-tree-id1600 . -4) (undo-tree-id1601 . -4) (undo-tree-id1602 . -4) (undo-tree-id1603 . -4) (undo-tree-id1604 . -4) (undo-tree-id1605 . -10) (undo-tree-id1606 . -4) (undo-tree-id1607 . -10) (undo-tree-id1608 . -10) (undo-tree-id1609 . -10) (undo-tree-id1610 . -10) (undo-tree-id1611 . -10) (undo-tree-id1612 . -10) (undo-tree-id1613 . -10) (undo-tree-id1614 . -10) (undo-tree-id1615 . -10) (undo-tree-id1616 . -10) (undo-tree-id1617 . -10) (undo-tree-id1618 . -10) (undo-tree-id1619 . -10) (undo-tree-id1620 . -10) (undo-tree-id1621 . -10) (undo-tree-id1622 . -10) (undo-tree-id1623 . -10) (undo-tree-id1624 . -9) (undo-tree-id1625 . -9) (undo-tree-id1626 . -9) (undo-tree-id1627 . -9) (undo-tree-id1628 . -9) (undo-tree-id1629 . -9) (undo-tree-id1630 . -9) (undo-tree-id1631 . -9) (undo-tree-id1632 . -9) (undo-tree-id1633 . -9) (undo-tree-id1634 . -9) (undo-tree-id1635 . -9) (undo-tree-id1636 . -9) (undo-tree-id1637 . -9) (undo-tree-id1638 . -9) (undo-tree-id1639 . -9) (undo-tree-id1640 . -9) (undo-tree-id1641 . -9) (undo-tree-id1642 . -9) (undo-tree-id1643 . -9) (undo-tree-id1644 . -9) (undo-tree-id1645 . -10) (undo-tree-id1646 . -9) (undo-tree-id1647 . -10) (undo-tree-id1648 . -10) (undo-tree-id1649 . -10) (undo-tree-id1650 . -10) (undo-tree-id1651 . -10) (undo-tree-id1652 . -10) (undo-tree-id1653 . -10) (undo-tree-id1654 . -10) (undo-tree-id1655 . -10) (undo-tree-id1656 . -10) (undo-tree-id1657 . -10) (undo-tree-id1658 . -10) (undo-tree-id1659 . -10) (undo-tree-id1660 . -10) (undo-tree-id1661 . -10) (undo-tree-id1662 . -10) (undo-tree-id1663 . -10) (undo-tree-id1664 . -9) (undo-tree-id1665 . -9) (undo-tree-id1666 . -9) (undo-tree-id1667 . -9) (undo-tree-id1668 . -9) (undo-tree-id1669 . -9) (undo-tree-id1670 . -9) (undo-tree-id1671 . -9) (undo-tree-id1672 . -9) (undo-tree-id1673 . -9) (undo-tree-id1674 . -9) (undo-tree-id1675 . -9) (undo-tree-id1676 . -9) (undo-tree-id1677 . -9) (undo-tree-id1678 . -9) (undo-tree-id1679 . -9) (undo-tree-id1680 . -9) (undo-tree-id1681 . -9) (undo-tree-id1682 . -9) (undo-tree-id1683 . -9) (undo-tree-id1684 . -9) (undo-tree-id1685 . -9) (undo-tree-id1686 . -9) (undo-tree-id1687 . -9) (undo-tree-id1688 . -9) (undo-tree-id1689 . -9) (undo-tree-id1690 . -9) (undo-tree-id1691 . -9) (undo-tree-id1692 . -9) (undo-tree-id1693 . -9) (undo-tree-id1694 . -9) (undo-tree-id1695 . -9) (undo-tree-id1696 . -9) (undo-tree-id1697 . -9) (undo-tree-id1698 . -9) (undo-tree-id1699 . -9) (undo-tree-id1700 . -9) (undo-tree-id1701 . -9) (undo-tree-id1702 . -9) (undo-tree-id1703 . -9) (undo-tree-id1704 . -9) (undo-tree-id1705 . -9) (undo-tree-id1706 . -9) (undo-tree-id1707 . -9) (undo-tree-id1708 . -9) (undo-tree-id1709 . -9) (undo-tree-id1710 . -9) (undo-tree-id1711 . -9) (undo-tree-id1712 . -9) (undo-tree-id1713 . -9) (undo-tree-id1714 . -9) (undo-tree-id1715 . -9) (undo-tree-id1716 . -9) (undo-tree-id1717 . -9) (undo-tree-id1718 . -9) (undo-tree-id1719 . -9) (undo-tree-id1720 . -9) (undo-tree-id1721 . -9) (undo-tree-id1722 . -9) (undo-tree-id1723 . -9) (undo-tree-id1724 . -9) (undo-tree-id1725 . -9) (undo-tree-id1726 . -9) (undo-tree-id1727 . -9) (undo-tree-id1728 . -9) (undo-tree-id1729 . -9) (undo-tree-id1730 . -9) (undo-tree-id1731 . -9) (undo-tree-id1732 . -9) (undo-tree-id1733 . -9) (undo-tree-id1734 . -9) (undo-tree-id1735 . -9) (undo-tree-id1736 . -9) (undo-tree-id1737 . -9) (undo-tree-id1738 . -9) (undo-tree-id1739 . -9) (undo-tree-id1740 . -9) (undo-tree-id1741 . -9) (undo-tree-id1742 . -9) (undo-tree-id1743 . -9) (undo-tree-id1744 . -9) (undo-tree-id1745 . -9) (undo-tree-id1746 . -9) (undo-tree-id1747 . -9) (undo-tree-id1748 . -9) (undo-tree-id1749 . -9) (undo-tree-id1750 . -9) (undo-tree-id1751 . -9) (undo-tree-id1752 . -9) (undo-tree-id1753 . -9) (undo-tree-id1754 . -9) (undo-tree-id1755 . -9) (undo-tree-id1756 . -9) (undo-tree-id1757 . -9) (undo-tree-id1758 . -9) (undo-tree-id1759 . -9) (undo-tree-id1760 . -9) (undo-tree-id1761 . -9) (undo-tree-id1762 . -9) (undo-tree-id1763 . -9) (undo-tree-id1764 . -9) (undo-tree-id1765 . -9) (undo-tree-id1766 . -9) (undo-tree-id1767 . -9) (undo-tree-id1768 . -9) (undo-tree-id1769 . -9) (undo-tree-id1770 . -9) (undo-tree-id1771 . -9) (undo-tree-id1772 . -9) (undo-tree-id1773 . -9) (undo-tree-id1774 . -9) (undo-tree-id1775 . -11) (undo-tree-id1776 . -11) (undo-tree-id1777 . -11) 2240) ((2231 . 2242) (#("
" 0 1 (fontified nil)) . 2231) (undo-tree-id1841 . 1) (#("  " 0 2 (fontified nil)) . 2231) (undo-tree-id1842 . -1) (undo-tree-id1843 . -2) (undo-tree-id1844 . -2) (undo-tree-id1845 . -2) (undo-tree-id1846 . -2) (undo-tree-id1847 . -2) (undo-tree-id1848 . -2) (undo-tree-id1849 . -2) (undo-tree-id1850 . -2) (undo-tree-id1851 . -2) (undo-tree-id1852 . -2) (undo-tree-id1853 . -2) (undo-tree-id1854 . -2) (undo-tree-id1855 . -2) (undo-tree-id1856 . -2) (undo-tree-id1857 . -2) (undo-tree-id1858 . -2) (undo-tree-id1859 . -2) (undo-tree-id1860 . -2) (undo-tree-id1861 . -2) (undo-tree-id1862 . -2) (undo-tree-id1863 . -2) (undo-tree-id1864 . -2) (undo-tree-id1865 . -2) (undo-tree-id1866 . -2) (undo-tree-id1867 . -2) (undo-tree-id1868 . -2) (undo-tree-id1869 . -2) (undo-tree-id1870 . -2) (undo-tree-id1871 . -2) (undo-tree-id1872 . -2) (undo-tree-id1873 . -2) (undo-tree-id1874 . -2) (undo-tree-id1875 . -2) (undo-tree-id1876 . -2) (undo-tree-id1877 . -2) (undo-tree-id1878 . -2) (undo-tree-id1879 . -2) (undo-tree-id1880 . -2) (undo-tree-id1881 . -2) (undo-tree-id1882 . -2) (undo-tree-id1883 . -2) (undo-tree-id1884 . -2) (undo-tree-id1885 . -2) (undo-tree-id1886 . -2) (undo-tree-id1887 . -2) (undo-tree-id1888 . -2) (undo-tree-id1889 . -2) (undo-tree-id1890 . -2) (undo-tree-id1891 . -2) (undo-tree-id1892 . -2) (undo-tree-id1893 . -2) (undo-tree-id1894 . -2) (undo-tree-id1895 . -2) (undo-tree-id1896 . -2) (undo-tree-id1897 . -2) (undo-tree-id1898 . -2) (undo-tree-id1899 . -2) (undo-tree-id1900 . -2) (undo-tree-id1901 . -2) (undo-tree-id1902 . -2) (undo-tree-id1903 . -2) (undo-tree-id1904 . -2) (undo-tree-id1905 . -2) (undo-tree-id1906 . -2) (undo-tree-id1907 . -2) (undo-tree-id1908 . -2) (undo-tree-id1909 . -2) (undo-tree-id1910 . -2) (undo-tree-id1911 . -2) (undo-tree-id1912 . -2) (undo-tree-id1913 . -2) (undo-tree-id1914 . -2) (undo-tree-id1915 . -2) (undo-tree-id1916 . -2) (undo-tree-id1917 . -2) (undo-tree-id1918 . -2) (undo-tree-id1919 . -2) (undo-tree-id1920 . -2) (undo-tree-id1921 . -2) (undo-tree-id1922 . -2) (undo-tree-id1923 . -2) (undo-tree-id1924 . -2) (undo-tree-id1925 . -2) (undo-tree-id1926 . -2) (undo-tree-id1927 . -2) (undo-tree-id1928 . -2) (undo-tree-id1929 . -2) (undo-tree-id1930 . -2) (undo-tree-id1931 . -2) (undo-tree-id1932 . -2) (undo-tree-id1933 . -2) (undo-tree-id1934 . -2) (undo-tree-id1935 . -2) (undo-tree-id1936 . -2) (undo-tree-id1937 . -2) (undo-tree-id1938 . -2) (undo-tree-id1939 . -2) (undo-tree-id1940 . -2) (undo-tree-id1941 . -2) (undo-tree-id1942 . -2) (undo-tree-id1943 . -2) (undo-tree-id1944 . -2) (undo-tree-id1945 . -2) (undo-tree-id1946 . -2) (undo-tree-id1947 . -2) (undo-tree-id1948 . -2) (undo-tree-id1949 . -2) (undo-tree-id1950 . -2) (undo-tree-id1951 . -2) (undo-tree-id1952 . -2) (undo-tree-id1953 . -2) (undo-tree-id1954 . -2) (undo-tree-id1955 . -2) (undo-tree-id1956 . -2) (undo-tree-id1957 . -2) (undo-tree-id1958 . -2) (undo-tree-id1959 . -2) (undo-tree-id1960 . -2) (undo-tree-id1961 . -2) (undo-tree-id1962 . -2) (undo-tree-id1963 . -2) (undo-tree-id1964 . -2) (undo-tree-id1965 . -2) (undo-tree-id1966 . -2) (undo-tree-id1967 . -2) (undo-tree-id1968 . -2) (undo-tree-id1969 . -2) (undo-tree-id1970 . -2) (undo-tree-id1971 . -2) (undo-tree-id1972 . -2) (undo-tree-id1973 . -2) (undo-tree-id1974 . -2) (undo-tree-id1975 . -2) (undo-tree-id1976 . -2) (undo-tree-id1977 . -2) (undo-tree-id1978 . -2) (undo-tree-id1979 . -2) (undo-tree-id1980 . -2) (undo-tree-id1981 . -2) (undo-tree-id1982 . -2) (undo-tree-id1983 . -2) (undo-tree-id1984 . -2) (undo-tree-id1985 . -2) (undo-tree-id1986 . -2) (undo-tree-id1987 . -2) (undo-tree-id1988 . -2) (undo-tree-id1989 . -2) (undo-tree-id1990 . -2) (undo-tree-id1991 . -2) (undo-tree-id1992 . -2) (undo-tree-id1993 . -2) (undo-tree-id1994 . -2) (undo-tree-id1995 . -2) (undo-tree-id1996 . -2) (undo-tree-id1997 . -2) (undo-tree-id1998 . -2) (undo-tree-id1999 . -2) (undo-tree-id2000 . -2) (undo-tree-id2001 . -2) (undo-tree-id2002 . -2) (undo-tree-id2003 . -2) (undo-tree-id2004 . -2) (undo-tree-id2005 . -2) (undo-tree-id2006 . -2) (undo-tree-id2007 . -2) (undo-tree-id2008 . -2) (undo-tree-id2009 . -2) (undo-tree-id2010 . -2) (undo-tree-id2011 . -2) (undo-tree-id2012 . -2) (undo-tree-id2013 . -2) (undo-tree-id2014 . -2) (undo-tree-id2015 . -2) (undo-tree-id2016 . -2) (undo-tree-id2017 . -2) (undo-tree-id2018 . -2) (undo-tree-id2019 . -2) (undo-tree-id2020 . -2) (undo-tree-id2021 . -2) (undo-tree-id2022 . -2) (undo-tree-id2023 . -2) (undo-tree-id2024 . -2) (undo-tree-id2025 . -2) (undo-tree-id2026 . -2) (undo-tree-id2027 . -2) (undo-tree-id2028 . -2) (undo-tree-id2029 . -2) (undo-tree-id2030 . -2) (undo-tree-id2031 . -2) (undo-tree-id2032 . -2) (undo-tree-id2033 . -2) (undo-tree-id2034 . -2) (undo-tree-id2035 . -2) (undo-tree-id2036 . -2) (undo-tree-id2037 . -2) (undo-tree-id2038 . -2) (undo-tree-id2039 . -2) (undo-tree-id2040 . -2) (undo-tree-id2041 . -2) (undo-tree-id2042 . -2) (undo-tree-id2043 . -2) (undo-tree-id2044 . -2) (undo-tree-id2045 . -2) (undo-tree-id2046 . -2) (undo-tree-id2047 . -2) (undo-tree-id2048 . -2) (undo-tree-id2049 . -2) (undo-tree-id2050 . -2) (undo-tree-id2051 . -2) (undo-tree-id2052 . -2) (undo-tree-id2053 . -2) (undo-tree-id2054 . -2) (undo-tree-id2055 . -2) (undo-tree-id2056 . -2) (undo-tree-id2057 . -2) (undo-tree-id2058 . -2) (undo-tree-id2059 . -2) (undo-tree-id2060 . -2) (undo-tree-id2061 . -2) (undo-tree-id2062 . -2) (undo-tree-id2063 . -2) (undo-tree-id2064 . -2) (undo-tree-id2065 . -2) (undo-tree-id2066 . -2) (undo-tree-id2067 . -2) (undo-tree-id2068 . -2) (undo-tree-id2069 . -2) (undo-tree-id2070 . -2) (undo-tree-id2071 . -2) (undo-tree-id2072 . -2) (undo-tree-id2073 . -2) (undo-tree-id2074 . -2) (undo-tree-id2075 . -2) (undo-tree-id2076 . -2) (undo-tree-id2077 . -2) (undo-tree-id2078 . -2) (undo-tree-id2079 . -2) (undo-tree-id2080 . -2) (undo-tree-id2081 . -2) (undo-tree-id2082 . -2) (undo-tree-id2083 . -2) (undo-tree-id2084 . -2) (undo-tree-id2085 . -2) (undo-tree-id2086 . -2) (undo-tree-id2087 . -2) (undo-tree-id2088 . -2) (undo-tree-id2089 . -2) (undo-tree-id2090 . -2) (undo-tree-id2091 . -2) (undo-tree-id2092 . -2) (undo-tree-id2093 . -2) (undo-tree-id2094 . -2) (undo-tree-id2095 . -2) (undo-tree-id2096 . -2) (undo-tree-id2097 . -2) (undo-tree-id2098 . -2) (undo-tree-id2099 . -2) (undo-tree-id2100 . -2) (undo-tree-id2101 . -2) (undo-tree-id2102 . -2) (undo-tree-id2103 . -2) (undo-tree-id2104 . -2) (undo-tree-id2105 . -2) (undo-tree-id2106 . -2) (undo-tree-id2107 . -2) (undo-tree-id2108 . -2) (undo-tree-id2109 . -2) (undo-tree-id2110 . -2) (undo-tree-id2111 . -2) (undo-tree-id2112 . -2) (undo-tree-id2113 . -2) (undo-tree-id2114 . -2) (undo-tree-id2115 . -2) (undo-tree-id2116 . -2) (undo-tree-id2117 . -2) (undo-tree-id2118 . -2) (undo-tree-id2119 . -2) (undo-tree-id2120 . -2) (undo-tree-id2121 . -2) (undo-tree-id2122 . -2) (undo-tree-id2123 . -2) (undo-tree-id2124 . -2) (undo-tree-id2125 . -2) (undo-tree-id2126 . -2) (undo-tree-id2127 . -2) (undo-tree-id2128 . -2) (undo-tree-id2129 . -2) (undo-tree-id2130 . -2) (undo-tree-id2131 . -2) (undo-tree-id2132 . -2) (undo-tree-id2133 . -2) (undo-tree-id2134 . -2) (undo-tree-id2135 . -2) (undo-tree-id2136 . -2) (undo-tree-id2137 . -2) (undo-tree-id2138 . -2) (undo-tree-id2139 . -2) (undo-tree-id2140 . -2) (undo-tree-id2141 . -2) (undo-tree-id2142 . -2) (undo-tree-id2143 . -2) (undo-tree-id2144 . -2) (undo-tree-id2145 . -2) (undo-tree-id2146 . -2) (undo-tree-id2147 . -2) (undo-tree-id2148 . -2) (undo-tree-id2149 . -2) (undo-tree-id2150 . -2) (undo-tree-id2151 . -2) (undo-tree-id2152 . -2) (undo-tree-id2153 . -2) (undo-tree-id2154 . -2) (undo-tree-id2155 . -2) (undo-tree-id2156 . -2) (undo-tree-id2157 . -2) (undo-tree-id2158 . -2) (undo-tree-id2159 . -2) (undo-tree-id2160 . -2) (undo-tree-id2161 . -2) (undo-tree-id2162 . -2) (undo-tree-id2163 . -2) (undo-tree-id2164 . -2) (undo-tree-id2165 . -2) (undo-tree-id2166 . -2) (undo-tree-id2167 . -2) (undo-tree-id2168 . -2) (undo-tree-id2169 . -2) (undo-tree-id2170 . -2) (undo-tree-id2171 . -2) (undo-tree-id2172 . -2) (undo-tree-id2173 . -2) (undo-tree-id2174 . -2) (undo-tree-id2175 . -2) (undo-tree-id2176 . -2) (undo-tree-id2177 . -2) (undo-tree-id2178 . -2) (undo-tree-id2179 . -2) (undo-tree-id2180 . -2) (undo-tree-id2181 . -2) (undo-tree-id2182 . -2) (undo-tree-id2183 . -2) (undo-tree-id2184 . -2) (undo-tree-id2185 . -2) (undo-tree-id2186 . -2) (undo-tree-id2187 . -2) (undo-tree-id2188 . -2) (2231 . 2233)) (25585 12210 583498 55000) 0 nil])
([nil nil ((2245 . 2249)) nil (25585 12250 490084 564000) 0 nil])
nil
([nil nil ((2249 . 2253)) nil (25585 12250 490083 608000) 0 nil])
([nil nil ((2254 . 2255) (2253 . 2254)) nil (25585 12250 490082 449000) 0 nil])
([nil nil ((2254 . 2262)) nil (25585 12250 490081 41000) 0 nil])
([nil nil ((2262 . 2266)) nil (25585 12250 490079 889000) 0 nil])
([nil nil ((2269 . 2270) (2267 . 2269)) nil (25585 12250 490078 229000) 0 nil])
([nil nil ((2275 . 2277) (#("s" 0 1 (fontified t)) . -2275) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) 2276 (2269 . 2276)) nil (25585 12250 490074 59000) 0 nil])
([nil nil ((2277 . 2282)) nil (25585 12250 490045 743000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2285 . 2286) (#("
" 0 1 (fontified nil)) . -2336) (2283 . 2337) 2281 (t 25585 12250 616384 98000)) nil (25585 12296 230905 170000) 0 nil])
([nil nil ((#("Sub" 0 3 (face haskell-constructor-face fontified t)) . 2286) (undo-tree-id2341 . -2) (undo-tree-id2342 . -1) 2287) nil (25585 12296 230902 814000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2336 . 2337) (#("
" 0 1 (fontified nil)) . -2383) (2333 . 2384) 2285) nil (25585 12296 230899 506000) 0 nil])
([nil nil ((#("   exp exp' -> Sub (evalVars exp) (evalVars exp')
" 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t) 2 12 (fontified t) 12 13 (face haskell-operator-face syntax-table (1) fontified t) 13 14 (face haskell-operator-face syntax-table (1) fontified t) 14 15 (fontified t) 15 18 (face haskell-constructor-face fontified t) 18 19 (fontified t) 19 34 (fontified t) 34 49 (fontified t) 49 50 (fontified t)) . 2284) (undo-tree-id2337 . 48) (undo-tree-id2338 . -49) (undo-tree-id2339 . -13) (undo-tree-id2340 . -2) 2297) nil (25585 12296 230897 372000) 0 nil])
([nil nil ((#("   exp exp' -> Sub (evalVars exp) (evalVars exp')
" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t) 2 3 (rear-nonsticky t fontified t) 3 12 (fontified t) 12 13 (face haskell-operator-face syntax-table (1) fontified t) 13 14 (face haskell-operator-face syntax-table (1) fontified t) 14 15 (fontified t) 15 18 (face haskell-constructor-face fontified t) 18 19 (fontified t) 19 34 (fontified t) 34 49 (fontified t) 49 50 (fontified t)) . 2284) (undo-tree-id2326 . 50) (undo-tree-id2327 . -49) (undo-tree-id2328 . -49) (undo-tree-id2329 . -50) (undo-tree-id2330 . -50) (undo-tree-id2331 . -50) (undo-tree-id2332 . -50) (undo-tree-id2333 . -50) (undo-tree-id2334 . -50) (undo-tree-id2335 . -50) (undo-tree-id2336 . -13) 2297) nil (25585 12296 230891 440000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2285 . 2286) (#("
" 0 1 (fontified nil)) . -2336) (2283 . 2337) 2231) nil (25585 12296 230879 334000) 0 nil])
([nil nil ((2286 . 2289) (#("Sub" 0 3 (face haskell-constructor-face fontified t)) . 2286) (undo-tree-id2324 . -2) (undo-tree-id2325 . -2) 2288) nil (25585 12296 230877 18000) 0 nil])
([nil nil ((#("  Add exp exp' -> Sub (evalVars exp) (evalVars exp')
" 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t) 2 5 (face haskell-constructor-face fontified t) 5 15 (fontified t) 15 16 (face haskell-operator-face syntax-table (1) fontified t) 16 17 (face haskell-operator-face syntax-table (1) fontified t) 17 18 (fontified t) 18 21 (face haskell-constructor-face fontified t) 21 22 (fontified t) 22 37 (fontified t) 37 52 (fontified t) 52 53 (fontified t)) . 2284) (undo-tree-id2312 . 48) (undo-tree-id2313 . -52) (undo-tree-id2314 . -52) (undo-tree-id2315 . -53) (undo-tree-id2316 . -53) (undo-tree-id2317 . -53) (undo-tree-id2318 . -53) (undo-tree-id2319 . -53) (undo-tree-id2320 . -53) (undo-tree-id2321 . -53) (undo-tree-id2322 . -4) (undo-tree-id2323 . -53) 2288) nil (25585 12296 230871 475000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -2283) (2230 . 2284) 2197) nil (25585 12296 230839 405000) 0 nil])
([nil nil ((2249 . 2252) (#("Sub" 0 3 (face haskell-constructor-face fontified t)) . 2249) (undo-tree-id2275 . -2) (undo-tree-id2276 . -2) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -2) (undo-tree-id2285 . -1) (undo-tree-id2286 . -2) (undo-tree-id2287 . -2) (undo-tree-id2288 . -2) (undo-tree-id2289 . -2) (undo-tree-id2290 . -2) (undo-tree-id2291 . -2) (undo-tree-id2292 . -2) (undo-tree-id2293 . -2) (undo-tree-id2294 . -2) (undo-tree-id2295 . -2) (undo-tree-id2296 . -2) (undo-tree-id2297 . -2) (undo-tree-id2298 . -2) (undo-tree-id2299 . -2) (undo-tree-id2300 . -2) (undo-tree-id2301 . -2) (undo-tree-id2302 . -2) (undo-tree-id2303 . -2) (undo-tree-id2304 . -2) (undo-tree-id2305 . -2) (undo-tree-id2306 . -2) (undo-tree-id2307 . -2) (undo-tree-id2308 . -2) (undo-tree-id2309 . -2) (undo-tree-id2310 . -3) (undo-tree-id2311 . -3) 2251) nil (25585 12296 230830 803000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2338 . 2339) (#("
" 0 1 (fontified nil)) . -2389) (2336 . 2390) 2304 (t 25585 12296 363052 884000)) nil (25585 12312 497342 500000) 0 nil])
([nil nil ((2341 . 2343) (#("a" 0 1 (face haskell-constructor-face fontified t)) . -2341) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (#("u" 0 1 (face haskell-constructor-face fontified t)) . -2342) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (#("i" 0 1 (face haskell-constructor-face fontified t)) . -2343) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (#("l" 0 1 (face haskell-constructor-face fontified t)) . -2344) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) 2345 (2339 . 2345) (#("Sub" 0 3 (face haskell-constructor-face fontified t)) . 2339) (undo-tree-id2519 . -2) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -3) (undo-tree-id2608 . -3) 2340) nil (25585 12312 497322 326000) 0 nil])
([nil nil ((2356 . 2360) (#("Sub" 0 3 (face haskell-constructor-face fontified t)) . 2356) (undo-tree-id2343 . -2) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -3) (undo-tree-id2356 . -3)) nil (25585 12312 497059 62000) 0 nil])
([nil nil ((2299 . 2300) (t 25585 12312 629720 304000)) nil (25585 12318 334637 940000) 0 nil])
([nil nil ((2246 . 2248)) nil (25585 12318 334636 183000) 0 nil])
([nil nil ((2246 . 2247) (#("i" 0 1 (fontified t)) . 2246) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1)) nil (25585 12318 334631 528000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2246) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1)) nil (25585 12318 334586 385000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -2448) (2393 . 2449) 2354 (t 25585 12319 463053 953000)) nil (25585 12361 691608 752000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -2503) (2448 . 2504) 2396) nil (25585 12361 691606 725000) 0 nil])
([nil nil ((2396 . 2400) (#("EMul" 0 4 (face haskell-constructor-face fontified t)) . 2396) (undo-tree-id2703 . -3) (undo-tree-id2704 . -1) 2397) nil (25585 12361 691604 675000) 0 nil])
([nil nil ((#("  EMul exp exp' -> EMul (evalVars exp) (evalVars exp')
" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t) 2 6 (face haskell-constructor-face fontified t) 6 16 (fontified t) 16 17 (syntax-table (1) face haskell-operator-face fontified t) 17 18 (syntax-table (1) face haskell-operator-face fontified t) 18 19 (fontified t) 19 23 (face haskell-constructor-face fontified t) 23 24 (fontified t) 24 39 (fontified t) 39 54 (fontified t) 54 55 (fontified t)) . 2449) (undo-tree-id2693 . -54) (undo-tree-id2694 . -54) (undo-tree-id2695 . -55) (undo-tree-id2696 . -55) (undo-tree-id2697 . -55) (undo-tree-id2698 . -55) (undo-tree-id2699 . -55) (undo-tree-id2700 . -55) (undo-tree-id2701 . -55) (undo-tree-id2702 . -5) 2454) nil (25585 12361 691732 480000) 0 nil])
([nil nil ((2413 . 2417) (#("EMul" 0 4 (face haskell-constructor-face fontified t)) . 2413) (undo-tree-id2728 . -3) (undo-tree-id2729 . -2) (undo-tree-id2730 . -2) (undo-tree-id2731 . -2) (undo-tree-id2732 . -2) (undo-tree-id2733 . -2) (undo-tree-id2734 . -2) (undo-tree-id2735 . -2) (undo-tree-id2736 . -2) (undo-tree-id2737 . -2) (undo-tree-id2738 . -2) (undo-tree-id2739 . -2) (undo-tree-id2740 . -2) (undo-tree-id2741 . -2) (undo-tree-id2742 . -2) (undo-tree-id2743 . -2) (undo-tree-id2744 . -2) (undo-tree-id2745 . -2) (undo-tree-id2746 . -2) (undo-tree-id2747 . -2) (undo-tree-id2748 . -2) (undo-tree-id2749 . -2) (undo-tree-id2750 . -2) (undo-tree-id2751 . -2) (undo-tree-id2752 . -2) (undo-tree-id2753 . -2) (undo-tree-id2754 . -4) (undo-tree-id2755 . -4) 2415) nil (25585 12366 18796 516000) 0 nil] [nil nil ((#("EMul" 0 4 (face haskell-constructor-face fontified t)) . 2358) (undo-tree-id2651 . -3) (undo-tree-id2652 . -2) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -2) (undo-tree-id2666 . -1) (undo-tree-id2667 . -2) (undo-tree-id2668 . -2) (undo-tree-id2669 . -2) (undo-tree-id2670 . -2) (undo-tree-id2671 . -2) (undo-tree-id2672 . -2) (undo-tree-id2673 . -2) (undo-tree-id2674 . -2) (undo-tree-id2675 . -2) (undo-tree-id2676 . -2) (undo-tree-id2677 . -2) (undo-tree-id2678 . -2) (undo-tree-id2679 . -2) (undo-tree-id2680 . -2) (undo-tree-id2681 . -2) (undo-tree-id2682 . -2) (undo-tree-id2683 . -2) (undo-tree-id2684 . -2) (undo-tree-id2685 . -2) (undo-tree-id2686 . -2) (undo-tree-id2687 . -2) (undo-tree-id2688 . -2) (undo-tree-id2689 . -2) (undo-tree-id2690 . -2) (undo-tree-id2691 . -4) (undo-tree-id2692 . -4) 2360) ((2358 . 2362)) (25585 12361 691582 74000) 0 nil])
([nil nil ((2414 . 2415) (#("d" 0 1 (face haskell-constructor-face fontified t)) . 2414) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1)) nil (25585 12366 18755 547000) 0 nil])
nil
([nil nil ((2291 . 2292) (t 25585 12366 153056 120000)) nil (25585 12370 457455 373000) 0 nil])
([nil nil ((2237 . 2238)) nil (25585 12370 457448 636000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2246) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (t 25585 12370 499722 989000)) nil (25585 12376 451277 650000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2300) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1)) nil (25585 12376 451269 660000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -2503) (2448 . 2504) 2409 (t 25585 12376 556389 937000)) nil (25585 12446 635467 135000) 0 nil])
([nil nil ((2452 . 2455) (#("div" 0 3 (face haskell-constructor-face fontified t)) . 2452) (undo-tree-id2928 . -2)) nil (25585 12446 635465 105000) 0 nil])
([nil nil ((2456 . 2457) (#("exp" 0 3 (fontified t)) . 2456) (undo-tree-id2926 . -2) (undo-tree-id2927 . -1) 2457) nil (25585 12446 635462 574000) 0 nil])
([nil nil ((#(" exp" 0 4 (fontified t)) . 2457) (undo-tree-id2923 . 4) (undo-tree-id2924 . -3) (undo-tree-id2925 . -1) 2458) nil (25585 12446 635458 755000) 0 nil])
([nil nil ((2457 . 2458) (#("'" 0 1 (fontified t)) . -2457) (undo-tree-id2921 . 1) (undo-tree-id2922 . -1) 2458) nil (25585 12446 635454 380000) 0 nil])
([nil nil ((#("EDiv (evalVars exp) (evalVars exp')" 0 1 (face haskell-constructor-face fontified t) 1 2 (face haskell-constructor-face fontified t) 2 4 (face haskell-constructor-face fontified t) 4 5 (fontified t) 5 20 (fontified t) 20 35 (fontified t)) . 2462) (undo-tree-id2919 . -34) (undo-tree-id2920 . -35)) nil (25585 12446 635450 460000) 0 nil])
([nil nil ((2463 . 2466) (#("I" 0 1 (face haskell-constructor-face fontified t)) . -2463) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (#("n" 0 1 (face haskell-constructor-face fontified t)) . -2464) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) 2465 (2463 . 2465) (#("i" 0 1 (face haskell-constructor-face fontified t)) . -2463) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (#("n" 0 1 (face haskell-constructor-face fontified t)) . -2464) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (#("t" 0 1 (face haskell-constructor-face fontified t)) . -2465) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) 2466 (2462 . 2466)) nil (25585 12446 635427 191000) 0 nil])
([nil nil ((2463 . 2464) (#("i" 0 1 (face haskell-constructor-face fontified t)) . 2463) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1)) nil (25585 12446 635231 683000) 0 nil])
([nil nil ((2466 . 2468)) nil (25585 12446 635207 859000) 0 nil])
([nil nil ((2459 . 2465)) nil (25585 12446 635201 896000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -2500) (2474 . 2501) 2464 (t 25585 12446 679726 520000)) nil (25585 12524 192019 909000) 0 nil])
([nil nil ((#("EInt" 0 4 (face haskell-constructor-face fontified t)) . 2477) (undo-tree-id3032 . 3) (undo-tree-id3033 . -3)) nil (25585 12524 192017 795000) 0 nil])
([nil nil ((2478 . 2481) (#("a" 0 1 (face haskell-constructor-face fontified t)) . -2478) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) 2479 (2477 . 2479) (#(" " 0 1 (fontified t)) . -2477) (undo-tree-id2981 . 1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) 2478) nil (25585 12524 192009 844000) 0 nil])
([nil nil ((2481 . 2482)) nil (25585 12524 191916 647000) 0 nil])
([nil nil ((2482 . 2484) (#("n" 0 1 (fontified t)) . 2482) (undo-tree-id2961 . 1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1)) nil (25585 12524 191914 214000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2491) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) 2492) nil (25585 12580 446031 796000) 0 nil])
([nil nil ((2478 . 2479) (#("v" 0 1 (face haskell-constructor-face fontified t)) . 2478) (t 25585 12524 389730 123000)) nil (25585 12636 808166 713000) 0 nil] [nil nil ((#("  " 0 2 (fontified t)) . -2475) (undo-tree-id3034 . -1) (undo-tree-id3035 . -2) (undo-tree-id3036 . -2) (undo-tree-id3037 . -2) (undo-tree-id3038 . -2) (undo-tree-id3039 . -2) (undo-tree-id3040 . -2) (undo-tree-id3041 . -2) (undo-tree-id3042 . -2) (undo-tree-id3043 . -2) (undo-tree-id3044 . -2) (undo-tree-id3045 . -2) (undo-tree-id3046 . -2) (undo-tree-id3047 . -2) (undo-tree-id3048 . -2) (undo-tree-id3049 . -2) (undo-tree-id3050 . -2) (undo-tree-id3051 . -2) (undo-tree-id3052 . -2) (undo-tree-id3053 . -2) (undo-tree-id3054 . -2) (undo-tree-id3055 . -2) (undo-tree-id3056 . -2) (undo-tree-id3057 . -2) (undo-tree-id3058 . -2) (undo-tree-id3059 . -2) (undo-tree-id3060 . -2) (undo-tree-id3061 . -2) (undo-tree-id3062 . -2) (undo-tree-id3063 . -2) (undo-tree-id3064 . -2) (undo-tree-id3065 . -2) (undo-tree-id3066 . -2) (undo-tree-id3067 . -2) (undo-tree-id3068 . -2) (undo-tree-id3069 . -2) (undo-tree-id3070 . -2) (undo-tree-id3071 . -2) (undo-tree-id3072 . -2) (undo-tree-id3073 . -2) (undo-tree-id3074 . -2) (undo-tree-id3075 . -2) (undo-tree-id3076 . -2) (undo-tree-id3077 . -2) (undo-tree-id3078 . -2) (undo-tree-id3079 . -2) (undo-tree-id3080 . -2) (undo-tree-id3081 . -2) (undo-tree-id3082 . -2) (undo-tree-id3083 . -2) (undo-tree-id3084 . -2) (undo-tree-id3085 . -2) (undo-tree-id3086 . -2) (undo-tree-id3087 . -2) (undo-tree-id3088 . -2) (undo-tree-id3089 . -2) (undo-tree-id3090 . -2) (undo-tree-id3091 . -2) (undo-tree-id3092 . -2) (undo-tree-id3093 . -2) (undo-tree-id3094 . -2) (undo-tree-id3095 . -2) (undo-tree-id3096 . -2) (undo-tree-id3097 . -2) (undo-tree-id3098 . -2) (undo-tree-id3099 . -2) (undo-tree-id3100 . -2) (undo-tree-id3101 . -2) (undo-tree-id3102 . -2) (undo-tree-id3103 . -2) (undo-tree-id3104 . -2) (undo-tree-id3105 . -2) (undo-tree-id3106 . -2) (undo-tree-id3107 . -2) (undo-tree-id3108 . -2) (undo-tree-id3109 . -2) (undo-tree-id3110 . -2) (undo-tree-id3111 . -2) (undo-tree-id3112 . -2) (undo-tree-id3113 . -2) (undo-tree-id3114 . -2) (undo-tree-id3115 . -2) (undo-tree-id3116 . -2) (undo-tree-id3117 . -2) (undo-tree-id3118 . -2) (undo-tree-id3119 . -2) (undo-tree-id3120 . -2) (undo-tree-id3121 . -2) (undo-tree-id3122 . -2) (undo-tree-id3123 . -2) (undo-tree-id3124 . -2) (undo-tree-id3125 . -2) (undo-tree-id3126 . -2) (undo-tree-id3127 . -2) (undo-tree-id3128 . -2) (undo-tree-id3129 . -2) (undo-tree-id3130 . -2) (undo-tree-id3131 . -2) (undo-tree-id3132 . -2) (undo-tree-id3133 . -2) (undo-tree-id3134 . -2) (undo-tree-id3135 . -2) (undo-tree-id3136 . -2) (undo-tree-id3137 . -2) (undo-tree-id3138 . -2) (undo-tree-id3139 . -2) (undo-tree-id3140 . -2) (undo-tree-id3141 . -2) (undo-tree-id3142 . -2) (undo-tree-id3143 . -2) (undo-tree-id3144 . -2) (undo-tree-id3145 . -2) (undo-tree-id3146 . -2) (undo-tree-id3147 . -2) (undo-tree-id3148 . -2) (undo-tree-id3149 . -2) (undo-tree-id3150 . -2) (undo-tree-id3151 . -2) (undo-tree-id3152 . -2) (undo-tree-id3153 . -2) (undo-tree-id3154 . -2) (undo-tree-id3155 . -2) (undo-tree-id3156 . -2) (undo-tree-id3157 . -2) (undo-tree-id3158 . -2) (undo-tree-id3159 . -2) (undo-tree-id3160 . -2) (undo-tree-id3161 . -2) (undo-tree-id3162 . -2) (undo-tree-id3163 . -2) (undo-tree-id3164 . -2) (undo-tree-id3165 . -2) (undo-tree-id3166 . -2) (undo-tree-id3167 . -2) (undo-tree-id3168 . -2) (undo-tree-id3169 . -2) (undo-tree-id3170 . -2) (undo-tree-id3171 . -2) (undo-tree-id3172 . -2) (undo-tree-id3173 . -2) (undo-tree-id3174 . -2) (undo-tree-id3175 . -2) (undo-tree-id3176 . -2) (undo-tree-id3177 . -2) (undo-tree-id3178 . -2) (undo-tree-id3179 . -2) (undo-tree-id3180 . -2) (undo-tree-id3181 . -2) (undo-tree-id3182 . -2) (undo-tree-id3183 . -2) (undo-tree-id3184 . -2) (undo-tree-id3185 . -2) (undo-tree-id3186 . -2) (undo-tree-id3187 . -2) (undo-tree-id3188 . -2) (undo-tree-id3189 . -2) (undo-tree-id3190 . -2) (undo-tree-id3191 . -2) (undo-tree-id3192 . -2) (undo-tree-id3193 . -2) (undo-tree-id3194 . -2) (undo-tree-id3195 . -2) (undo-tree-id3196 . -2) (undo-tree-id3197 . -2) (undo-tree-id3198 . -2) (undo-tree-id3199 . -2) (undo-tree-id3200 . -2) (undo-tree-id3201 . -2) (undo-tree-id3202 . -2) (undo-tree-id3203 . -2) (undo-tree-id3204 . -2) (undo-tree-id3205 . -2) (undo-tree-id3206 . -2) (undo-tree-id3207 . -2) (undo-tree-id3208 . -2) (undo-tree-id3209 . -2) (undo-tree-id3210 . -2) (undo-tree-id3211 . -2) (undo-tree-id3212 . -2) (undo-tree-id3213 . -2) (undo-tree-id3214 . -2) (undo-tree-id3215 . -2) (undo-tree-id3216 . -2) (undo-tree-id3217 . -2) (undo-tree-id3218 . -2) (undo-tree-id3219 . -2) (undo-tree-id3220 . -2) (undo-tree-id3221 . -2) (undo-tree-id3222 . -2) (undo-tree-id3223 . -2) (undo-tree-id3224 . -2) (undo-tree-id3225 . -2) (undo-tree-id3226 . -2) (undo-tree-id3227 . -2) (undo-tree-id3228 . -2) (undo-tree-id3229 . -2) (undo-tree-id3230 . -2) (undo-tree-id3231 . -2) (undo-tree-id3232 . -2) (undo-tree-id3233 . -2) (undo-tree-id3234 . -2) (undo-tree-id3235 . -2) (undo-tree-id3236 . -2) (undo-tree-id3237 . -2) (undo-tree-id3238 . -2) (undo-tree-id3239 . -2) (undo-tree-id3240 . -2) (undo-tree-id3241 . -2) (undo-tree-id3242 . -2) (undo-tree-id3243 . -2) (undo-tree-id3244 . -2) (undo-tree-id3245 . -2) (undo-tree-id3246 . -2) (undo-tree-id3247 . -2) (undo-tree-id3248 . -2) (undo-tree-id3249 . -2) (undo-tree-id3250 . -2) (undo-tree-id3251 . -2) (undo-tree-id3252 . -2) (undo-tree-id3253 . -2) (undo-tree-id3254 . -2) (undo-tree-id3255 . -2) (undo-tree-id3256 . -2) (undo-tree-id3257 . -2) (undo-tree-id3258 . -2) (undo-tree-id3259 . -2) (undo-tree-id3260 . -2) (undo-tree-id3261 . -2) (undo-tree-id3262 . -2) (undo-tree-id3263 . -2) (undo-tree-id3264 . -2) (undo-tree-id3265 . -2) (undo-tree-id3266 . -2) (undo-tree-id3267 . -2) (undo-tree-id3268 . -2) (undo-tree-id3269 . -2) (undo-tree-id3270 . -2) (undo-tree-id3271 . -2) (undo-tree-id3272 . -2) (undo-tree-id3273 . -2) (undo-tree-id3274 . -2) (undo-tree-id3275 . -2) (undo-tree-id3276 . -2) (undo-tree-id3277 . -2) (undo-tree-id3278 . -2) (undo-tree-id3279 . -2) (undo-tree-id3280 . -2) (undo-tree-id3281 . -2) (undo-tree-id3282 . -2) (undo-tree-id3283 . -2) (undo-tree-id3284 . -2) (undo-tree-id3285 . -2) (undo-tree-id3286 . -2) (undo-tree-id3287 . -2) (undo-tree-id3288 . -2) (undo-tree-id3289 . -2) (undo-tree-id3290 . -2) (undo-tree-id3291 . -2) (undo-tree-id3292 . -2) (undo-tree-id3293 . -2) (undo-tree-id3294 . -2) (undo-tree-id3295 . -2) (undo-tree-id3296 . -2) (undo-tree-id3297 . -2) (undo-tree-id3298 . -2) (undo-tree-id3299 . -2) (undo-tree-id3300 . -2) (undo-tree-id3301 . -2) (undo-tree-id3302 . -2) (undo-tree-id3303 . -2) (undo-tree-id3304 . -2) (undo-tree-id3305 . -2) (undo-tree-id3306 . -2) (undo-tree-id3307 . -2) (undo-tree-id3308 . -2) (undo-tree-id3309 . -2) (undo-tree-id3310 . -2) (undo-tree-id3311 . -2) (undo-tree-id3312 . -2) (undo-tree-id3313 . -2) (undo-tree-id3314 . -2) (undo-tree-id3315 . -2) (undo-tree-id3316 . -2) (undo-tree-id3317 . -2) (undo-tree-id3318 . -2) (undo-tree-id3319 . -2) (undo-tree-id3320 . -2) (undo-tree-id3321 . -2) (undo-tree-id3322 . -2) (undo-tree-id3323 . -2) (undo-tree-id3324 . -2) (undo-tree-id3325 . -2) (undo-tree-id3326 . -2) (undo-tree-id3327 . -2) (undo-tree-id3328 . -2) (undo-tree-id3329 . -2) (undo-tree-id3330 . -2) (undo-tree-id3331 . -2) (undo-tree-id3332 . -2) (undo-tree-id3333 . -2) (undo-tree-id3334 . -2) (undo-tree-id3335 . -2) (undo-tree-id3336 . -2) (undo-tree-id3337 . -2) (undo-tree-id3338 . -2) (undo-tree-id3339 . -2) (undo-tree-id3340 . -2) (undo-tree-id3341 . -2) (undo-tree-id3342 . -2) (undo-tree-id3343 . -2) (undo-tree-id3344 . -2) (undo-tree-id3345 . -2) (undo-tree-id3346 . -2) (undo-tree-id3347 . -2) (undo-tree-id3348 . -2) (undo-tree-id3349 . -2) (undo-tree-id3350 . -2) (undo-tree-id3351 . -2) (undo-tree-id3352 . -2) (undo-tree-id3353 . -2) (undo-tree-id3354 . -2) (undo-tree-id3355 . -2) (undo-tree-id3356 . -2) (undo-tree-id3357 . -2) (undo-tree-id3358 . -2) (undo-tree-id3359 . -2) (undo-tree-id3360 . -2) (undo-tree-id3361 . -2) (undo-tree-id3362 . -2) (undo-tree-id3363 . -2) (undo-tree-id3364 . -2) (undo-tree-id3365 . -2) (undo-tree-id3366 . -2) (undo-tree-id3367 . -2) (undo-tree-id3368 . -2) (undo-tree-id3369 . -2) (undo-tree-id3370 . -2) (undo-tree-id3371 . -2) (undo-tree-id3372 . -2) 2477 (2475 . 2477) (2475 . 2476) (#("  Evar id       -> EInt n
" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t) 2 6 (face haskell-constructor-face fontified t) 6 9 (fontified t) 9 16 (fontified t) 16 17 (face haskell-operator-face syntax-table (1) fontified t) 17 18 (face haskell-operator-face syntax-table (1) fontified t) 18 19 (fontified t) 19 20 (face haskell-constructor-face fontified t) 20 21 (face haskell-constructor-face fontified t) 21 23 (face haskell-constructor-face fontified t) 23 25 (fontified t) 25 26 (fontified t)) . 2475) (undo-tree-id3373 . 10) (undo-tree-id3374 . -25) (undo-tree-id3375 . -25) (undo-tree-id3376 . -26) (undo-tree-id3377 . -26) (undo-tree-id3378 . -26) (undo-tree-id3379 . -26) (undo-tree-id3380 . -26) (undo-tree-id3381 . -26) (undo-tree-id3382 . -2) (undo-tree-id3383 . -15) (undo-tree-id3384 . -19) (undo-tree-id3385 . -2) (undo-tree-id3386 . -2) (undo-tree-id3387 . -2) (undo-tree-id3388 . -2) (undo-tree-id3389 . -2) (undo-tree-id3390 . -2) (undo-tree-id3391 . -2) (undo-tree-id3392 . -2) (undo-tree-id3393 . -2) (undo-tree-id3394 . -2) (undo-tree-id3395 . -2) (undo-tree-id3396 . -2) (undo-tree-id3397 . -2) (undo-tree-id3398 . -2) (undo-tree-id3399 . -2) (undo-tree-id3400 . -2) (undo-tree-id3401 . -2) (undo-tree-id3402 . -2) (undo-tree-id3403 . -2) (undo-tree-id3404 . -2) (undo-tree-id3405 . -2) (undo-tree-id3406 . -2) (undo-tree-id3407 . -2) (undo-tree-id3408 . -2) (undo-tree-id3409 . -2) (undo-tree-id3410 . -2) (undo-tree-id3411 . -2) (undo-tree-id3412 . -2) (undo-tree-id3413 . -2) (undo-tree-id3414 . -2) (undo-tree-id3415 . -2) (undo-tree-id3416 . -2) (undo-tree-id3417 . -2) (undo-tree-id3418 . -2) (undo-tree-id3419 . -2) (undo-tree-id3420 . -2) (undo-tree-id3421 . -2) (undo-tree-id3422 . -2) (undo-tree-id3423 . -2) (undo-tree-id3424 . -2) (undo-tree-id3425 . -2) (undo-tree-id3426 . -2) (undo-tree-id3427 . -2) (undo-tree-id3428 . -2) (undo-tree-id3429 . -2) (undo-tree-id3430 . -2) (undo-tree-id3431 . -2) (undo-tree-id3432 . -2) (undo-tree-id3433 . -7) (undo-tree-id3434 . -3) (undo-tree-id3435 . -3) (undo-tree-id3436 . -3) (undo-tree-id3437 . -3) (undo-tree-id3438 . -3) (undo-tree-id3439 . -3) (undo-tree-id3440 . -3) (undo-tree-id3441 . -3) (undo-tree-id3442 . -3) (undo-tree-id3443 . -3) (undo-tree-id3444 . -3) (undo-tree-id3445 . -3) (undo-tree-id3446 . -3) (undo-tree-id3447 . -7) (undo-tree-id3448 . -16) (undo-tree-id3449 . -16) (undo-tree-id3450 . -16) (undo-tree-id3451 . -16) (undo-tree-id3452 . -16) (undo-tree-id3453 . -16) (undo-tree-id3454 . -16) (undo-tree-id3455 . -16) (undo-tree-id3456 . -16) (undo-tree-id3457 . -16) (undo-tree-id3458 . -16) (undo-tree-id3459 . -16) (undo-tree-id3460 . -16) (undo-tree-id3461 . -16) (undo-tree-id3462 . -16) (undo-tree-id3463 . -16) (undo-tree-id3464 . -16) (undo-tree-id3465 . -16) (undo-tree-id3466 . -16) (undo-tree-id3467 . -16) (undo-tree-id3468 . -16) (undo-tree-id3469 . -16) (undo-tree-id3470 . -16) (undo-tree-id3471 . -16) (undo-tree-id3472 . -16) (undo-tree-id3473 . -16) (undo-tree-id3474 . -16) (undo-tree-id3475 . -16) (undo-tree-id3476 . -16) (undo-tree-id3477 . -16) (undo-tree-id3478 . -15) (undo-tree-id3479 . -15) (undo-tree-id3480 . -15) (undo-tree-id3481 . -15) (undo-tree-id3482 . -15) (undo-tree-id3483 . -15) (undo-tree-id3484 . -15) (undo-tree-id3485 . -15) (undo-tree-id3486 . -15) (undo-tree-id3487 . -15) (undo-tree-id3488 . -15) (undo-tree-id3489 . -15) (undo-tree-id3490 . -15) (undo-tree-id3491 . -15) (undo-tree-id3492 . -15) (undo-tree-id3493 . -15) (undo-tree-id3494 . -15) (undo-tree-id3495 . -15) (undo-tree-id3496 . -15) (undo-tree-id3497 . -15) (undo-tree-id3498 . -15) (undo-tree-id3499 . -15) (undo-tree-id3500 . -15) (undo-tree-id3501 . -15) (undo-tree-id3502 . -15) (undo-tree-id3503 . -15) (undo-tree-id3504 . -15) (undo-tree-id3505 . -15) (undo-tree-id3506 . -15) (undo-tree-id3507 . -15) (undo-tree-id3508 . -15) (undo-tree-id3509 . -15) (undo-tree-id3510 . -16) (undo-tree-id3511 . -15) (undo-tree-id3512 . -16) (undo-tree-id3513 . -16) (undo-tree-id3514 . -16) (undo-tree-id3515 . -16) (undo-tree-id3516 . -16) (undo-tree-id3517 . -16) (undo-tree-id3518 . -16) (undo-tree-id3519 . -16) (undo-tree-id3520 . -16) (undo-tree-id3521 . -16) (undo-tree-id3522 . -16) (undo-tree-id3523 . -16) (undo-tree-id3524 . -16) (undo-tree-id3525 . -16) (undo-tree-id3526 . -16) (undo-tree-id3527 . -16) (undo-tree-id3528 . -17) (undo-tree-id3529 . -16) (undo-tree-id3530 . -17) (undo-tree-id3531 . -17) (undo-tree-id3532 . -17) (undo-tree-id3533 . -17) (undo-tree-id3534 . -17) (undo-tree-id3535 . -17) (undo-tree-id3536 . -18) (undo-tree-id3537 . -17) (undo-tree-id3538 . -18) (undo-tree-id3539 . -18) (undo-tree-id3540 . -18) (undo-tree-id3541 . -18) (undo-tree-id3542 . -18) (undo-tree-id3543 . -18) (undo-tree-id3544 . -19) (undo-tree-id3545 . -18) (undo-tree-id3546 . -19) (undo-tree-id3547 . -19) (undo-tree-id3548 . -19) (undo-tree-id3549 . -19) (undo-tree-id3550 . -19) (undo-tree-id3551 . -19) (undo-tree-id3552 . -19) (undo-tree-id3553 . -19) (undo-tree-id3554 . -19) (undo-tree-id3555 . -19) (undo-tree-id3556 . -19) (undo-tree-id3557 . -19) (undo-tree-id3558 . -19) (undo-tree-id3559 . -19) (undo-tree-id3560 . -19) (undo-tree-id3561 . -19) (undo-tree-id3562 . -19) (undo-tree-id3563 . -19) (undo-tree-id3564 . -19) (undo-tree-id3565 . -19) (undo-tree-id3566 . -19) (undo-tree-id3567 . -19) (undo-tree-id3568 . -19) (undo-tree-id3569 . -19) (undo-tree-id3570 . -19) (undo-tree-id3571 . -19) (undo-tree-id3572 . -19) (undo-tree-id3573 . -19) (undo-tree-id3574 . -19) (undo-tree-id3575 . -19) (undo-tree-id3576 . -19) (undo-tree-id3577 . -19) (undo-tree-id3578 . -19) (undo-tree-id3579 . -19) (undo-tree-id3580 . -19) (undo-tree-id3581 . -19) (undo-tree-id3582 . -19) (undo-tree-id3583 . -19) (undo-tree-id3584 . -19) (undo-tree-id3585 . -19) (undo-tree-id3586 . -19) (undo-tree-id3587 . -19) (undo-tree-id3588 . -19) (undo-tree-id3589 . -19) (undo-tree-id3590 . -19) (undo-tree-id3591 . -19) (undo-tree-id3592 . -19) (undo-tree-id3593 . -19) (undo-tree-id3594 . -19) (undo-tree-id3595 . -19) (undo-tree-id3596 . -19) (undo-tree-id3597 . -19) (undo-tree-id3598 . -19) (undo-tree-id3599 . -19) (undo-tree-id3600 . -19) (undo-tree-id3601 . -19) (undo-tree-id3602 . -19) (undo-tree-id3603 . -19) (undo-tree-id3604 . -19) (undo-tree-id3605 . -19) (undo-tree-id3606 . -19) (undo-tree-id3607 . -19) (undo-tree-id3608 . -19) (undo-tree-id3609 . -19) (undo-tree-id3610 . -19) (undo-tree-id3611 . -19) (undo-tree-id3612 . -19) (undo-tree-id3613 . -19) (undo-tree-id3614 . -19) (undo-tree-id3615 . -19) (undo-tree-id3616 . -19) (undo-tree-id3617 . -19) (undo-tree-id3618 . -19) (undo-tree-id3619 . -19) (undo-tree-id3620 . -19) (undo-tree-id3621 . -19) (undo-tree-id3622 . -19) (undo-tree-id3623 . -19) (undo-tree-id3624 . -19) (undo-tree-id3625 . -19) (undo-tree-id3626 . -19) (undo-tree-id3627 . -19) (undo-tree-id3628 . -19) (undo-tree-id3629 . -19) (undo-tree-id3630 . -19) (undo-tree-id3631 . -19) (undo-tree-id3632 . -19) (undo-tree-id3633 . -19) (undo-tree-id3634 . -19) (undo-tree-id3635 . -19) (undo-tree-id3636 . -19) (undo-tree-id3637 . -19) (undo-tree-id3638 . -19) (undo-tree-id3639 . -19) (undo-tree-id3640 . -19) (undo-tree-id3641 . -19) (undo-tree-id3642 . -19) (undo-tree-id3643 . -19) (undo-tree-id3644 . -19) (undo-tree-id3645 . -19) (undo-tree-id3646 . -19) (undo-tree-id3647 . -19) (undo-tree-id3648 . -19) (undo-tree-id3649 . -19) (undo-tree-id3650 . -19) (undo-tree-id3651 . -19) (undo-tree-id3652 . -19) (undo-tree-id3653 . -19) (undo-tree-id3654 . -19) (undo-tree-id3655 . -19) (undo-tree-id3656 . -19) (undo-tree-id3657 . -19) (undo-tree-id3658 . -19) (undo-tree-id3659 . -19) (undo-tree-id3660 . -19) (undo-tree-id3661 . -19) (undo-tree-id3662 . -19) (undo-tree-id3663 . -19) (undo-tree-id3664 . -19) (undo-tree-id3665 . -19) (undo-tree-id3666 . -19) (undo-tree-id3667 . -19) (undo-tree-id3668 . -19) (undo-tree-id3669 . -19) (undo-tree-id3670 . -19) (undo-tree-id3671 . -19) (undo-tree-id3672 . -19) (undo-tree-id3673 . -19) (undo-tree-id3674 . -19) (undo-tree-id3675 . -19) (undo-tree-id3676 . -19) (undo-tree-id3677 . -19) (undo-tree-id3678 . -19) (undo-tree-id3679 . -19) (undo-tree-id3680 . -19) (undo-tree-id3681 . -19) (undo-tree-id3682 . -19) (undo-tree-id3683 . -19) (undo-tree-id3684 . -19) (undo-tree-id3685 . -19) (undo-tree-id3686 . -19) (undo-tree-id3687 . -26) (undo-tree-id3688 . -26) (undo-tree-id3689 . -26) 2494 (t 25585 12524 389730 123000)) ((2475 . 2501) (#("
" 0 1 (fontified nil)) . 2475) (undo-tree-id3690 . 1) (#("  " 0 2 (fontified nil)) . 2475) (undo-tree-id3691 . -1) (undo-tree-id3692 . -2) (undo-tree-id3693 . -2) (undo-tree-id3694 . -2) (undo-tree-id3695 . -2) (undo-tree-id3696 . -2) (undo-tree-id3697 . -2) (undo-tree-id3698 . -2) (undo-tree-id3699 . -2) (undo-tree-id3700 . -2) (undo-tree-id3701 . -2) (undo-tree-id3702 . -2) (undo-tree-id3703 . -2) (undo-tree-id3704 . -2) (undo-tree-id3705 . -2) (undo-tree-id3706 . -2) (undo-tree-id3707 . -2) (undo-tree-id3708 . -2) (undo-tree-id3709 . -2) (undo-tree-id3710 . -2) (undo-tree-id3711 . -2) (undo-tree-id3712 . -2) (undo-tree-id3713 . -2) (undo-tree-id3714 . -2) (undo-tree-id3715 . -2) (undo-tree-id3716 . -2) (undo-tree-id3717 . -2) (undo-tree-id3718 . -2) (undo-tree-id3719 . -2) (undo-tree-id3720 . -2) (undo-tree-id3721 . -2) (undo-tree-id3722 . -2) (undo-tree-id3723 . -2) (undo-tree-id3724 . -2) (undo-tree-id3725 . -2) (undo-tree-id3726 . -2) (undo-tree-id3727 . -2) (undo-tree-id3728 . -2) (undo-tree-id3729 . -2) (undo-tree-id3730 . -2) (undo-tree-id3731 . -2) (undo-tree-id3732 . -2) (undo-tree-id3733 . -2) (undo-tree-id3734 . -2) (undo-tree-id3735 . -2) (undo-tree-id3736 . -2) (undo-tree-id3737 . -2) (undo-tree-id3738 . -2) (undo-tree-id3739 . -2) (undo-tree-id3740 . -2) (undo-tree-id3741 . -2) (undo-tree-id3742 . -2) (undo-tree-id3743 . -2) (undo-tree-id3744 . -2) (undo-tree-id3745 . -2) (undo-tree-id3746 . -2) (undo-tree-id3747 . -2) (undo-tree-id3748 . -2) (undo-tree-id3749 . -2) (undo-tree-id3750 . -2) (undo-tree-id3751 . -2) (undo-tree-id3752 . -2) (undo-tree-id3753 . -2) (undo-tree-id3754 . -2) (undo-tree-id3755 . -2) (undo-tree-id3756 . -2) (undo-tree-id3757 . -2) (undo-tree-id3758 . -2) (undo-tree-id3759 . -2) (undo-tree-id3760 . -2) (undo-tree-id3761 . -2) (undo-tree-id3762 . -2) (undo-tree-id3763 . -2) (undo-tree-id3764 . -2) (undo-tree-id3765 . -2) (undo-tree-id3766 . -2) (undo-tree-id3767 . -2) (undo-tree-id3768 . -2) (undo-tree-id3769 . -2) (undo-tree-id3770 . -2) (undo-tree-id3771 . -2) (undo-tree-id3772 . -2) (undo-tree-id3773 . -2) (undo-tree-id3774 . -2) (undo-tree-id3775 . -2) (undo-tree-id3776 . -2) (undo-tree-id3777 . -2) (undo-tree-id3778 . -2) (undo-tree-id3779 . -2) (undo-tree-id3780 . -2) (undo-tree-id3781 . -2) (undo-tree-id3782 . -2) (undo-tree-id3783 . -2) (undo-tree-id3784 . -2) (undo-tree-id3785 . -2) (undo-tree-id3786 . -2) (undo-tree-id3787 . -2) (undo-tree-id3788 . -2) (undo-tree-id3789 . -2) (undo-tree-id3790 . -2) (undo-tree-id3791 . -2) (undo-tree-id3792 . -2) (undo-tree-id3793 . -2) (undo-tree-id3794 . -2) (undo-tree-id3795 . -2) (undo-tree-id3796 . -2) (undo-tree-id3797 . -2) (undo-tree-id3798 . -2) (undo-tree-id3799 . -2) (undo-tree-id3800 . -2) (undo-tree-id3801 . -2) (undo-tree-id3802 . -2) (undo-tree-id3803 . -2) (undo-tree-id3804 . -2) (undo-tree-id3805 . -2) (undo-tree-id3806 . -2) (undo-tree-id3807 . -2) (undo-tree-id3808 . -2) (undo-tree-id3809 . -2) (undo-tree-id3810 . -2) (undo-tree-id3811 . -2) (undo-tree-id3812 . -2) (undo-tree-id3813 . -2) (undo-tree-id3814 . -2) (undo-tree-id3815 . -2) (undo-tree-id3816 . -2) (undo-tree-id3817 . -2) (undo-tree-id3818 . -2) (undo-tree-id3819 . -2) (undo-tree-id3820 . -2) (undo-tree-id3821 . -2) (undo-tree-id3822 . -2) (undo-tree-id3823 . -2) (undo-tree-id3824 . -2) (undo-tree-id3825 . -2) (undo-tree-id3826 . -2) (undo-tree-id3827 . -2) (undo-tree-id3828 . -2) (undo-tree-id3829 . -2) (undo-tree-id3830 . -2) (undo-tree-id3831 . -2) (undo-tree-id3832 . -2) (undo-tree-id3833 . -2) (undo-tree-id3834 . -2) (undo-tree-id3835 . -2) (undo-tree-id3836 . -2) (undo-tree-id3837 . -2) (undo-tree-id3838 . -2) (undo-tree-id3839 . -2) (undo-tree-id3840 . -2) (undo-tree-id3841 . -2) (undo-tree-id3842 . -2) (undo-tree-id3843 . -2) (undo-tree-id3844 . -2) (undo-tree-id3845 . -2) (undo-tree-id3846 . -2) (undo-tree-id3847 . -2) (undo-tree-id3848 . -2) (undo-tree-id3849 . -2) (undo-tree-id3850 . -2) (undo-tree-id3851 . -2) (undo-tree-id3852 . -2) (undo-tree-id3853 . -2) (undo-tree-id3854 . -2) (undo-tree-id3855 . -2) (undo-tree-id3856 . -2) (undo-tree-id3857 . -2) (undo-tree-id3858 . -2) (undo-tree-id3859 . -2) (undo-tree-id3860 . -2) (undo-tree-id3861 . -2) (undo-tree-id3862 . -2) (undo-tree-id3863 . -2) (undo-tree-id3864 . -2) (undo-tree-id3865 . -2) (undo-tree-id3866 . -2) (undo-tree-id3867 . -2) (undo-tree-id3868 . -2) (undo-tree-id3869 . -2) (undo-tree-id3870 . -2) (undo-tree-id3871 . -2) (undo-tree-id3872 . -2) (undo-tree-id3873 . -2) (undo-tree-id3874 . -2) (undo-tree-id3875 . -2) (undo-tree-id3876 . -2) (undo-tree-id3877 . -2) (undo-tree-id3878 . -2) (undo-tree-id3879 . -2) (undo-tree-id3880 . -2) (undo-tree-id3881 . -2) (undo-tree-id3882 . -2) (undo-tree-id3883 . -2) (undo-tree-id3884 . -2) (undo-tree-id3885 . -2) (undo-tree-id3886 . -2) (undo-tree-id3887 . -2) (undo-tree-id3888 . -2) (undo-tree-id3889 . -2) (undo-tree-id3890 . -2) (undo-tree-id3891 . -2) (undo-tree-id3892 . -2) (undo-tree-id3893 . -2) (undo-tree-id3894 . -2) (undo-tree-id3895 . -2) (undo-tree-id3896 . -2) (undo-tree-id3897 . -2) (undo-tree-id3898 . -2) (undo-tree-id3899 . -2) (undo-tree-id3900 . -2) (undo-tree-id3901 . -2) (undo-tree-id3902 . -2) (undo-tree-id3903 . -2) (undo-tree-id3904 . -2) (undo-tree-id3905 . -2) (undo-tree-id3906 . -2) (undo-tree-id3907 . -2) (undo-tree-id3908 . -2) (undo-tree-id3909 . -2) (undo-tree-id3910 . -2) (undo-tree-id3911 . -2) (undo-tree-id3912 . -2) (undo-tree-id3913 . -2) (undo-tree-id3914 . -2) (undo-tree-id3915 . -2) (undo-tree-id3916 . -2) (undo-tree-id3917 . -2) (undo-tree-id3918 . -2) (undo-tree-id3919 . -2) (undo-tree-id3920 . -2) (undo-tree-id3921 . -2) (undo-tree-id3922 . -2) (undo-tree-id3923 . -2) (undo-tree-id3924 . -2) (undo-tree-id3925 . -2) (undo-tree-id3926 . -2) (undo-tree-id3927 . -2) (undo-tree-id3928 . -2) (undo-tree-id3929 . -2) (undo-tree-id3930 . -2) (undo-tree-id3931 . -2) (undo-tree-id3932 . -2) (undo-tree-id3933 . -2) (undo-tree-id3934 . -2) (undo-tree-id3935 . -2) (undo-tree-id3936 . -2) (undo-tree-id3937 . -2) (undo-tree-id3938 . -2) (undo-tree-id3939 . -2) (undo-tree-id3940 . -2) (undo-tree-id3941 . -2) (undo-tree-id3942 . -2) (undo-tree-id3943 . -2) (undo-tree-id3944 . -2) (undo-tree-id3945 . -2) (undo-tree-id3946 . -2) (undo-tree-id3947 . -2) (undo-tree-id3948 . -2) (undo-tree-id3949 . -2) (undo-tree-id3950 . -2) (undo-tree-id3951 . -2) (undo-tree-id3952 . -2) (undo-tree-id3953 . -2) (undo-tree-id3954 . -2) (undo-tree-id3955 . -2) (undo-tree-id3956 . -2) (undo-tree-id3957 . -2) (undo-tree-id3958 . -2) (undo-tree-id3959 . -2) (undo-tree-id3960 . -2) (undo-tree-id3961 . -2) (undo-tree-id3962 . -2) (undo-tree-id3963 . -2) (undo-tree-id3964 . -2) (undo-tree-id3965 . -2) (undo-tree-id3966 . -2) (undo-tree-id3967 . -2) (undo-tree-id3968 . -2) (undo-tree-id3969 . -2) (undo-tree-id3970 . -2) (undo-tree-id3971 . -2) (undo-tree-id3972 . -2) (undo-tree-id3973 . -2) (undo-tree-id3974 . -2) (undo-tree-id3975 . -2) (undo-tree-id3976 . -2) (undo-tree-id3977 . -2) (undo-tree-id3978 . -2) (undo-tree-id3979 . -2) (undo-tree-id3980 . -2) (undo-tree-id3981 . -2) (undo-tree-id3982 . -2) (undo-tree-id3983 . -2) (undo-tree-id3984 . -2) (undo-tree-id3985 . -2) (undo-tree-id3986 . -2) (undo-tree-id3987 . -2) (undo-tree-id3988 . -2) (undo-tree-id3989 . -2) (undo-tree-id3990 . -2) (undo-tree-id3991 . -2) (undo-tree-id3992 . -2) (undo-tree-id3993 . -2) (undo-tree-id3994 . -2) (undo-tree-id3995 . -2) (undo-tree-id3996 . -2) (undo-tree-id3997 . -2) (undo-tree-id3998 . -2) (undo-tree-id3999 . -2) (undo-tree-id4000 . -2) (undo-tree-id4001 . -2) (undo-tree-id4002 . -2) (undo-tree-id4003 . -2) (undo-tree-id4004 . -2) (undo-tree-id4005 . -2) (undo-tree-id4006 . -2) (undo-tree-id4007 . -2) (undo-tree-id4008 . -2) (undo-tree-id4009 . -2) (undo-tree-id4010 . -2) (undo-tree-id4011 . -2) (undo-tree-id4012 . -2) (undo-tree-id4013 . -2) (undo-tree-id4014 . -2) (undo-tree-id4015 . -2) (undo-tree-id4016 . -2) (undo-tree-id4017 . -2) (undo-tree-id4018 . -2) (undo-tree-id4019 . -2) (undo-tree-id4020 . -2) (undo-tree-id4021 . -2) (undo-tree-id4022 . -2) (undo-tree-id4023 . -2) (undo-tree-id4024 . -2) (undo-tree-id4025 . -2) (undo-tree-id4026 . -2) (undo-tree-id4027 . -2) (undo-tree-id4028 . -2) (2475 . 2477)) (25585 12580 444429 919000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 2499) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1)) nil (25585 12636 808164 619000) 0 nil])
nil
([nil nil ((2495 . 2498) (#("Int" 0 1 (face haskell-constructor-face fontified t) 1 3 (face haskell-constructor-face fontified t)) . 2495) (undo-tree-id4251 . -2) (undo-tree-id4252 . -3) (undo-tree-id4253 . -3) (undo-tree-id4254 . -3) (undo-tree-id4255 . -3) (undo-tree-id4256 . -3) (undo-tree-id4257 . -3) (undo-tree-id4258 . -3) (undo-tree-id4259 . -3) (undo-tree-id4260 . -3) (undo-tree-id4261 . -3) (undo-tree-id4262 . -3) (undo-tree-id4263 . -3) (undo-tree-id4264 . -3) (undo-tree-id4265 . -3) (undo-tree-id4266 . -3) (undo-tree-id4267 . -3) (undo-tree-id4268 . -2) (undo-tree-id4269 . -3) (undo-tree-id4270 . -2) (undo-tree-id4271 . -2) (undo-tree-id4272 . -2) (undo-tree-id4273 . -2) (undo-tree-id4274 . -2) (undo-tree-id4275 . -2) (undo-tree-id4276 . -2) (undo-tree-id4277 . -2) (undo-tree-id4278 . -2) (undo-tree-id4279 . -2) (undo-tree-id4280 . -2) (undo-tree-id4281 . -1) (undo-tree-id4282 . -2) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -3) (undo-tree-id4291 . -3)) nil (25585 12636 808157 623000) 0 nil])
([nil nil ((2494 . 2503) (#("f" 0 1 (fontified t)) . -2494) (undo-tree-id4047 . -1) (#("r" 0 1 (fontified t)) . -2495) (undo-tree-id4048 . -1) (#("o" 0 1 (fontified t)) . -2496) (undo-tree-id4049 . -1) (#("n" 0 1 (fontified t)) . -2497) (undo-tree-id4050 . -1) 2498 (2494 . 2498) (#("EVar" 0 4 (face haskell-constructor-face fontified t)) . 2494) (undo-tree-id4051 . -3) (undo-tree-id4052 . -3) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -2) (undo-tree-id4139 . -1) (undo-tree-id4140 . -2) (undo-tree-id4141 . -1) (undo-tree-id4142 . -2) (undo-tree-id4143 . -2) (undo-tree-id4144 . -2) (undo-tree-id4145 . -2) (undo-tree-id4146 . -2) (undo-tree-id4147 . -2) (undo-tree-id4148 . -2) (undo-tree-id4149 . -2) (undo-tree-id4150 . -2) (undo-tree-id4151 . -2) (undo-tree-id4152 . -2) (undo-tree-id4153 . -3) (undo-tree-id4154 . -2) (undo-tree-id4155 . -3) (undo-tree-id4156 . -1) (undo-tree-id4157 . -3) (undo-tree-id4158 . -3) (undo-tree-id4159 . -3) (undo-tree-id4160 . -3) (undo-tree-id4161 . -3) (undo-tree-id4162 . -3) (undo-tree-id4163 . -3) (undo-tree-id4164 . -3) (undo-tree-id4165 . -3) (undo-tree-id4166 . -3) (undo-tree-id4167 . -3) (undo-tree-id4168 . -4) (undo-tree-id4169 . -3) (undo-tree-id4170 . -4) (undo-tree-id4171 . -1) (undo-tree-id4172 . -4) (undo-tree-id4173 . -4) (undo-tree-id4174 . -4) (undo-tree-id4175 . -4) (undo-tree-id4176 . -4) (undo-tree-id4177 . -4) (undo-tree-id4178 . -4) (undo-tree-id4179 . -4) (undo-tree-id4180 . -4) (undo-tree-id4181 . -4) (undo-tree-id4182 . -4) (undo-tree-id4183 . -4) (undo-tree-id4184 . -4) (undo-tree-id4185 . -4) (undo-tree-id4186 . -4) (undo-tree-id4187 . -4) (undo-tree-id4188 . -4) (undo-tree-id4189 . -4) (undo-tree-id4190 . -4) (undo-tree-id4191 . -4) (undo-tree-id4192 . -4) (undo-tree-id4193 . -4) (undo-tree-id4194 . -4) (undo-tree-id4195 . -4) (undo-tree-id4196 . -4) (undo-tree-id4197 . -4) (undo-tree-id4198 . -4) (undo-tree-id4199 . -4) (undo-tree-id4200 . -4) (undo-tree-id4201 . -4) (undo-tree-id4202 . -4) (undo-tree-id4203 . -4) (undo-tree-id4204 . -4) (undo-tree-id4205 . -3) (undo-tree-id4206 . -3) (undo-tree-id4207 . -3) (undo-tree-id4208 . -3) (undo-tree-id4209 . -3) (undo-tree-id4210 . -3) (undo-tree-id4211 . -3) (undo-tree-id4212 . -3) (undo-tree-id4213 . -3) (undo-tree-id4214 . -3) (undo-tree-id4215 . -3) (undo-tree-id4216 . -3) (undo-tree-id4217 . -3) (undo-tree-id4218 . -3) (undo-tree-id4219 . -3) (undo-tree-id4220 . -3) (undo-tree-id4221 . -3) (undo-tree-id4222 . -3) (undo-tree-id4223 . -3) (undo-tree-id4224 . -3) (undo-tree-id4225 . -3) (undo-tree-id4226 . -3) (undo-tree-id4227 . -3) (undo-tree-id4228 . -3) (undo-tree-id4229 . -3) (undo-tree-id4230 . -3) (undo-tree-id4231 . -3) (undo-tree-id4232 . -3) (undo-tree-id4233 . -3) (undo-tree-id4234 . -3) (undo-tree-id4235 . -3) (undo-tree-id4236 . -3) (undo-tree-id4237 . -3) (undo-tree-id4238 . -3) (undo-tree-id4239 . -3) (undo-tree-id4240 . -3) (undo-tree-id4241 . -3) (undo-tree-id4242 . -3) (undo-tree-id4243 . -3) (undo-tree-id4244 . -3) (undo-tree-id4245 . -3) (undo-tree-id4246 . -3) (undo-tree-id4247 . -3) (undo-tree-id4248 . -3) (undo-tree-id4249 . -4) (undo-tree-id4250 . -4) 2497) nil (25585 12636 808261 926000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2498) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1)) nil (25585 12650 808270 468000) 0 nil] [nil nil ((#("J" 0 1 (face haskell-constructor-face fontified t)) . 2499) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1)) ((2499 . 2500)) (25585 12636 807879 889000) 0 nil])
([nil nil ((2504 . 2505) (2503 . 2504)) nil (25585 12650 808239 315000) 0 nil])
nil
([nil nil ((2504 . 2514)) nil (25585 12650 808235 590000) 0 nil])
([nil nil ((2514 . 2526)) nil (25585 12650 808229 385000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -2580) (2527 . 2581) 2525 (t 25585 12650 849735 983000)) nil (25585 12669 699126 517000) 0 nil])
([nil nil ((2531 . 2533) (#("Var" 0 1 (face haskell-constructor-face fontified t) 1 3 (face haskell-constructor-face fontified t)) . 2531) (undo-tree-id4311 . -2) (undo-tree-id4312 . -3) (undo-tree-id4313 . -3)) nil (25585 12669 699122 515000) 0 nil])
([nil nil ((2534 . 2535)) nil (25585 12669 699106 484000) 0 nil])
([nil nil ((#("fromJust (lookupMemo id contextV)" 0 4 (fontified t) 4 5 (fontified t) 5 8 (fontified t) 8 9 (fontified t) 9 33 (fontified t)) . 2547) (undo-tree-id4449 . -32) (undo-tree-id4450 . -33) (undo-tree-id4451 . -33) (undo-tree-id4452 . -33) (undo-tree-id4453 . -33) (undo-tree-id4454 . -33) (t 25585 12670 69736 875000)) nil (25585 12719 55168 418000) 0 nil])
([nil nil ((2535 . 2543) (#("id" 0 2 (fontified t)) . 2535) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -2) (undo-tree-id4400 . -1) (undo-tree-id4401 . -2) (undo-tree-id4402 . -2) (undo-tree-id4403 . -2) (undo-tree-id4404 . -2) (undo-tree-id4405 . -2) (undo-tree-id4406 . -2) (undo-tree-id4407 . -2) (undo-tree-id4408 . -1) (undo-tree-id4409 . -2) (undo-tree-id4410 . -2) (undo-tree-id4411 . -2) (undo-tree-id4412 . -2) (undo-tree-id4413 . -2) (undo-tree-id4414 . -2) (undo-tree-id4415 . -2) (undo-tree-id4416 . -1) (undo-tree-id4417 . -2) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -2) (undo-tree-id4448 . -2) 2536) nil (25585 12719 55157 624000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2544) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1)) nil (25585 12719 55102 108000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2544) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1)) nil (25585 12719 55099 61000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2544) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1)) nil (25585 12719 55096 9000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2544) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1)) nil (25585 12719 55093 28000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2544) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1)) nil (25585 12719 55089 380000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2544) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1)) nil (25585 12719 55084 383000) 0 nil])
([nil nil ((2547 . 2551)) nil (25585 12719 55057 382000) 0 nil])
([nil nil ((2548 . 2549) (#("i" 0 1 (face haskell-constructor-face fontified t)) . 2548) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1)) nil (25585 12719 55054 351000) 0 nil])
([nil nil ((2552 . 2553) (2551 . 2552) (#(" " 0 1 (fontified t)) . -2551) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) 2552 (2551 . 2552)) nil (25585 12719 55028 968000) 0 nil])
([nil nil ((2552 . 2563)) nil (25585 12719 55005 214000) 0 nil])
([nil nil ((2566 . 2567) (2564 . 2566)) nil (25585 12719 55004 96000) 0 nil])
([nil nil ((2566 . 2577)) nil (25585 12719 55002 353000) 0 nil])
([nil nil ((2580 . 2581) (2578 . 2580)) nil (25585 12719 55000 214000) 0 nil])
([nil nil ((2580 . 2591)) nil (25585 12719 54994 5000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -2657) (2592 . 2658) 2590 (t 25585 12719 196405 821000)) nil (25585 12820 290455 383000) 0 nil])
([nil nil ((2600 . 2602) (2595 . 2600) (#("EIf" 0 3 (face haskell-constructor-face fontified t)) . 2595) (undo-tree-id4465 . -2) (undo-tree-id4466 . -1) 2596) nil (25585 12820 290537 579000) 0 nil])
([nil nil ((2604 . 2605) (#("e1 e2 e3 " 0 8 (fontified t) 8 9 (fontified t)) . 2604) (undo-tree-id4510 . -8) (undo-tree-id4511 . -3) (undo-tree-id4512 . -6) (undo-tree-id4513 . -9) (undo-tree-id4514 . -1) (undo-tree-id4515 . -3) (undo-tree-id4516 . -4) (undo-tree-id4517 . -6) (undo-tree-id4518 . -7) (undo-tree-id4519 . -9) (undo-tree-id4520 . -9) (undo-tree-id4521 . -9)) nil (25585 12843 975417 636000) 0 nil] [nil nil ((#("id" 0 2 (fontified t)) . 2600) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -2) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -2) (undo-tree-id4464 . -2) 2601) ((2600 . 2602)) (25585 12820 290442 601000) 0 nil])
([nil nil ((2604 . 2608)) nil (25585 12843 975390 181000) 0 nil])
nil
([nil nil ((2617 . 2623) (2612 . 2617) (#("EIf (evalVars e1) (evalVars e2) (evalVars e3)" 0 1 (face haskell-constructor-face fontified t) 1 2 (face haskell-constructor-face fontified t) 2 3 (face haskell-constructor-face fontified t) 3 4 (fontified t) 4 18 (fontified t) 18 32 (fontified t) 32 45 (fontified t)) . 2612) (undo-tree-id4467 . -44) (undo-tree-id4468 . -45) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -45) (undo-tree-id4507 . -45) (undo-tree-id4508 . -45) (undo-tree-id4509 . -45)) nil (25585 12843 975384 431000) 0 nil])
([nil nil ((2623 . 2624)) nil (25585 12843 975300 238000) 0 nil])
([nil nil ((#("E" 0 1 (face haskell-constructor-face fontified t)) . -2624) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) 2625 (2624 . 2625) (t 25585 12844 109744 945000)) nil (25585 12867 995416 43000) 0 nil])
([nil nil ((2623 . 2625) (#(" " 0 1 (fontified t)) . -2623) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) 2624) nil (25585 12867 995409 81000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -2627) (undo-tree-id4523 . -1) 2628 (2625 . 2628)) nil (25585 12867 995394 913000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2626) (undo-tree-id4522 . -1) 2627) nil (25585 12867 995474 281000) 0 nil])
([nil nil ((2264 . 2272) (#("x" 0 1 (fontified t)) . -2264) (undo-tree-id4597 . -1) (#("c" 0 1 (fontified t)) . -2265) (undo-tree-id4598 . -1) (#("o" 0 1 (fontified t)) . -2266) (undo-tree-id4599 . -1) 2267 (2263 . 2267)) nil (25585 12937 255059 257000) 0 nil] [nil nil ((2255 . 2256)) ((#("c" 0 1 (fontified t)) . 2255)) (25585 12867 995375 979000) 0 nil])
([nil nil ((2295 . 2296) (#(" " 0 1 (fontified t)) . -2295) (undo-tree-id4596 . -1) 2296 (2292 . 2296) (2287 . 2292)) nil (25585 12937 255053 652000) 0 nil])
nil
([nil nil ((#("evalVars" 0 8 (fontified nil)) . 2670) (2678 . 2695) (#("evalVars" 0 8 (fontified nil)) . 2647) (2655 . 2672) (#("evalVars" 0 8 (fontified t)) . 2624) (2632 . 2649) (#("evalVars" 0 8 (fontified nil)) . 2497) (2505 . 2522) (#("evalVars" 0 8 (fontified t)) . 2473) (2481 . 2498) (#("evalVars" 0 8 (fontified nil)) . 2424) (2432 . 2449) (#("evalVars" 0 8 (fontified t)) . 2400) (2408 . 2425) (#("evalVars" 0 8 (fontified nil)) . 2351) (2359 . 2376) (#("evalVars" 0 8 (fontified t)) . 2327) (2335 . 2352)) nil (25585 12937 255048 936000) 0 nil])
([nil nil ((2724 . 2725) (2723 . 2724) (#("$" 0 1 (face haskell-operator-face syntax-table (1) fontified t)) . -2723) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (#(" " 0 1 (fontified t)) . -2724) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) 2725) nil (25585 12937 255038 864000) 0 nil])
([nil nil ((#("evalV" 0 5 (fontified t)) . -2724) (2729 . 2737) 2729 (2724 . 2729)) nil (25585 12937 254965 901000) 0 nil])
([nil nil ((2732 . 2741)) nil (25585 12937 254963 110000) 0 nil])
([nil nil ((2743 . 2747) (2742 . 2743)) nil (25585 12937 254957 308000) 0 nil])
([nil nil ((2233 . 2234) (t 25585 12937 393082 603000)) nil (25585 12976 404837 31000) 0 nil])
([nil nil ((2306 . 2307)) nil (25585 12976 404828 692000) 0 nil])
([nil nil ((2453 . 2454) (#("d" 0 1 (face haskell-constructor-face fontified t)) . 2453) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (t 25585 12976 466417 748000)) nil (25585 12985 512426 369000) 0 nil])
([nil nil ((2251 . 2252) (t 25585 12985 679751 508000)) nil (25585 13008 279059 104000) 0 nil])
([nil nil ((2251 . 2252) (#("e" 0 1 (fontified t)) . 2251) (undo-tree-id4602 . -1)) nil (25585 13008 279057 181000) 0 nil])
([nil nil ((2325 . 2326)) nil (25585 13008 279047 794000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2321)) nil (25585 13008 279046 410000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2247)) nil (25585 13008 279043 849000) 0 nil])
([nil nil ((2717 . 2718) (2624 . 2625) (2570 . 2571) (2543 . 2544) (2469 . 2470) (2395 . 2396) (2321 . 2322) (2247 . 2248)) nil (25585 13008 279037 406000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2238) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (t 25585 13008 326419 224000)) nil (25585 13021 637117 465000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2311) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1)) nil (25585 13021 637101 847000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2392) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1)) nil (25585 13021 637097 781000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2465) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1)) nil (25585 13021 637094 568000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2538) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1)) nil (25585 13021 637091 481000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2564) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1)) nil (25585 13021 637088 138000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2617) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1)) nil (25585 13021 637083 853000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2709) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1)) nil (25585 13021 637076 223000) 0 nil])
([nil nil ((1997 . 1998) (#(")" 0 1 (fontified t)) . -1997) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . 1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) 1998 (1997 . 1998) (t 25585 13021 779753 180000)) nil (25585 13129 905588 629000) 0 nil])
([nil nil ((2035 . 2036)) nil (25585 13129 905543 843000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1996) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (t 25585 13130 46424 872000)) nil (25585 13136 766705 193000) 0 nil])
([nil nil ((1996 . 1997)) nil (25585 13136 766699 294000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1989) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1)) nil (25585 13347 859510 281000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -2000) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) 2001 (t 25585 13136 896425 189000)) nil (25585 13356 298481 804000) 0 nil] [nil nil ((#("(" 0 1 (fontified t)) . 2000) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . 1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (t 25585 13136 896425 189000)) ((2000 . 2001)) (25585 13347 859127 537000) 0 nil])
([nil nil ((2000 . 2001)) nil (25585 13356 298344 542000) 0 nil])
nil
([nil nil ((#(")" 0 1 (fontified t)) . 2034) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . 1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1)) nil (25585 13356 298659 930000) 0 nil])
([nil nil ((2224 . 2225) (#("exp" 0 3 (fontified t)) . 2224) (undo-tree-id5001 . -2) (undo-tree-id5002 . -1) (undo-tree-id5003 . -3) (undo-tree-id5004 . -3) (t 25585 13358 233102 115000)) nil (25585 13401 587916 247000) 0 nil] [nil nil ((#(")" 0 1 (fontified t)) . 2033) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . 1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1)) ((2033 . 2034)) (25585 13356 298304 704000) 0 nil])
([nil nil ((2719 . 2720) (t 25585 13401 713104 132000)) nil (25585 13422 741506 806000) 0 nil])
nil
([nil nil ((2748 . 2749)) nil (25585 13454 999648 291000) 0 nil])
([nil nil ((3063 . 3064) (#("1" 0 1 (syntax-table (2) fontified t)) . -3063) (undo-tree-id5068 . 1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) 3064 (t 25585 13422 783105 109000)) nil (25585 13458 363566 607000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -3062) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) 3063 (t 25585 13422 783105 109000)) ((3062 . 3063)) (25585 13454 999306 480000) 0 nil])
([nil nil ((1808 . 1817) (#(" f_name ++\":\"++(show lexp)++(show exp)" 0 8 (fontified t) 8 10 (face haskell-operator-face syntax-table (1) fontified t) 10 13 (face font-lock-string-face fontified t) 13 15 (face haskell-operator-face syntax-table (1) fontified t) 15 26 (fontified t) 26 28 (face haskell-operator-face syntax-table (1) fontified t) 28 38 (fontified t)) . 1808) (undo-tree-id5104 . -37) (undo-tree-id5105 . -3) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -2) (undo-tree-id5114 . -1) (undo-tree-id5115 . -2) (undo-tree-id5116 . -2) (undo-tree-id5117 . -2) (undo-tree-id5118 . -2) (undo-tree-id5119 . -2) (undo-tree-id5120 . -2) (undo-tree-id5121 . -3) (undo-tree-id5122 . -2) (undo-tree-id5123 . -3) (undo-tree-id5124 . -3) (undo-tree-id5125 . -3) (undo-tree-id5126 . -3) (undo-tree-id5127 . -3) (undo-tree-id5128 . -3) (undo-tree-id5129 . -3) (undo-tree-id5130 . -3) (undo-tree-id5131 . -3) (undo-tree-id5132 . -3) (undo-tree-id5133 . -3) (undo-tree-id5134 . -3) (undo-tree-id5135 . -3) (undo-tree-id5136 . -3) (undo-tree-id5137 . -3) (undo-tree-id5138 . -3) (undo-tree-id5139 . -3) (undo-tree-id5140 . -3) (undo-tree-id5141 . -3) (undo-tree-id5142 . -3) (undo-tree-id5143 . -3) (undo-tree-id5144 . -3) (undo-tree-id5145 . -3) (undo-tree-id5146 . -3) (undo-tree-id5147 . -3) (undo-tree-id5148 . -3) (undo-tree-id5149 . -3) (undo-tree-id5150 . -3) (undo-tree-id5151 . -3) (undo-tree-id5152 . -3) (undo-tree-id5153 . -3) (undo-tree-id5154 . -3) (undo-tree-id5155 . -3) (undo-tree-id5156 . -3) (undo-tree-id5157 . -3) (undo-tree-id5158 . -3) (undo-tree-id5159 . -3) (undo-tree-id5160 . -3) (undo-tree-id5161 . -3) (undo-tree-id5162 . -3) (undo-tree-id5163 . -3) (undo-tree-id5164 . -3) (undo-tree-id5165 . -3) (undo-tree-id5166 . -3) (undo-tree-id5167 . -3) (undo-tree-id5168 . -3) (undo-tree-id5169 . -3) (undo-tree-id5170 . -3) (undo-tree-id5171 . -3) (undo-tree-id5172 . -3) (undo-tree-id5173 . -3) (undo-tree-id5174 . -3) (undo-tree-id5175 . -3) (undo-tree-id5176 . -3) (undo-tree-id5177 . -3) (undo-tree-id5178 . -3) (undo-tree-id5179 . -3) (undo-tree-id5180 . -3) (undo-tree-id5181 . -3) (undo-tree-id5182 . -3) (undo-tree-id5183 . -3) (undo-tree-id5184 . -3) (undo-tree-id5185 . -3) (undo-tree-id5186 . -3) (undo-tree-id5187 . -3) (undo-tree-id5188 . -3) (undo-tree-id5189 . -3) (undo-tree-id5190 . -3) (undo-tree-id5191 . -3) (undo-tree-id5192 . -3) (undo-tree-id5193 . -3) (undo-tree-id5194 . -3) (undo-tree-id5195 . -3) (undo-tree-id5196 . -3) (undo-tree-id5197 . -3) (undo-tree-id5198 . -3) (undo-tree-id5199 . -3) (undo-tree-id5200 . -3) (undo-tree-id5201 . -3) (undo-tree-id5202 . -3) (undo-tree-id5203 . -3) (undo-tree-id5204 . -3) (undo-tree-id5205 . -3) (undo-tree-id5206 . -3) (undo-tree-id5207 . -3) (undo-tree-id5208 . -3) (undo-tree-id5209 . -3) (undo-tree-id5210 . -3) (undo-tree-id5211 . -3) (undo-tree-id5212 . -3) (undo-tree-id5213 . -3) (undo-tree-id5214 . -3) (undo-tree-id5215 . -3) (undo-tree-id5216 . -3) (undo-tree-id5217 . -3) (undo-tree-id5218 . -3) (undo-tree-id5219 . -3) (undo-tree-id5220 . -3) (undo-tree-id5221 . -3) (undo-tree-id5222 . -3) (undo-tree-id5223 . -3) (undo-tree-id5224 . -3) (undo-tree-id5225 . -3) (undo-tree-id5226 . -3) (undo-tree-id5227 . -3) (undo-tree-id5228 . -3) (undo-tree-id5229 . -3) (undo-tree-id5230 . -3) (undo-tree-id5231 . -3) (undo-tree-id5232 . -3) (undo-tree-id5233 . -3) (undo-tree-id5234 . -3) (undo-tree-id5235 . -3) (undo-tree-id5236 . -3) (undo-tree-id5237 . -3) (undo-tree-id5238 . -3) (undo-tree-id5239 . -3) (undo-tree-id5240 . -3) (undo-tree-id5241 . -3) (undo-tree-id5242 . -3) (undo-tree-id5243 . -3) (undo-tree-id5244 . -3) (undo-tree-id5245 . -3) (undo-tree-id5246 . -3) (undo-tree-id5247 . -3) (undo-tree-id5248 . -3) (undo-tree-id5249 . -3) (undo-tree-id5250 . -3) (undo-tree-id5251 . -3) (undo-tree-id5252 . -3) (undo-tree-id5253 . -3) (undo-tree-id5254 . -3) (undo-tree-id5255 . -3) (undo-tree-id5256 . -3) (undo-tree-id5257 . -38) (undo-tree-id5258 . -38) 1811 (t 25585 13458 499773 434000)) nil (25585 13626 918950 640000) 0 nil])
nil
([nil nil ((1808 . 1809)) nil (25585 13626 918795 544000) 0 nil])
([nil nil ((1824 . 1825) (1823 . 1824) (1819 . 1823)) nil (25585 13626 918794 154000) 0 nil])
([nil nil ((1825 . 1826)) nil (25585 13626 918791 445000) 0 nil])
([nil nil ((#("paramB" 0 6 (fontified t)) . -1829) (1835 . 1848) 1835 (1824 . 1835)) nil (25585 13626 918784 794000) 0 nil])
([nil nil ((#(" `debug` \"executou then\"" 0 1 (fontified t) 1 2 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 2 7 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 7 8 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 8 9 (fontified t) 9 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t)) . 1551) (undo-tree-id5307 . -23) (undo-tree-id5308 . -13) (undo-tree-id5309 . -2) (undo-tree-id5310 . -2) (undo-tree-id5311 . -2) (undo-tree-id5312 . -2) (undo-tree-id5313 . -2) (undo-tree-id5314 . -2) (undo-tree-id5315 . -2) (undo-tree-id5316 . -2) (undo-tree-id5317 . -2) (undo-tree-id5318 . -2) (undo-tree-id5319 . -2) (undo-tree-id5320 . -1) (undo-tree-id5321 . -2) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -24) (undo-tree-id5335 . -24) (t 25585 13627 63114 583000)) nil (25585 13783 286530 846000) 0 nil])
([nil nil ((#(" `debug` \"executou else\"" 0 1 (fontified t) 1 2 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 2 7 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 7 8 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 8 9 (fontified t) 9 24 (face font-lock-string-face fontified t)) . 1598) (undo-tree-id5262 . -23) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -2) (undo-tree-id5271 . -1) (undo-tree-id5272 . -2) (undo-tree-id5273 . -2) (undo-tree-id5274 . -2) (undo-tree-id5275 . -2) (undo-tree-id5276 . -2) (undo-tree-id5277 . -2) (undo-tree-id5278 . -2) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -2) (undo-tree-id5282 . -2) (undo-tree-id5283 . -1) (undo-tree-id5284 . -2) (undo-tree-id5285 . -7) (undo-tree-id5286 . -7) (undo-tree-id5287 . -8) (undo-tree-id5288 . -9) (undo-tree-id5289 . -1) (undo-tree-id5290 . -2) (undo-tree-id5291 . -1) (undo-tree-id5292 . -2) (undo-tree-id5293 . -1) (undo-tree-id5294 . -8) (undo-tree-id5295 . -1) (undo-tree-id5296 . -2) (undo-tree-id5297 . -2) (undo-tree-id5298 . -7) (undo-tree-id5299 . -2) (undo-tree-id5300 . -7) (undo-tree-id5301 . -7) (undo-tree-id5302 . -8) (undo-tree-id5303 . -2) (undo-tree-id5304 . -3) (undo-tree-id5305 . -24) (undo-tree-id5306 . -24)) nil (25585 13783 286496 744000) 0 nil])
([nil nil ((#(" `debug` \"avalia condicao\"" 0 1 (fontified t) 1 2 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 2 7 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 7 8 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 8 9 (fontified t font-lock-fontified t) 9 10 (face font-lock-string-face fontified t font-lock-fontified t) 10 26 (face font-lock-string-face fontified t font-lock-fontified t)) . 1478) (undo-tree-id5259 . -25) (undo-tree-id5260 . -26) (undo-tree-id5261 . -26)) nil (25585 13783 286386 333000) 0 nil])
([nil nil ((#("`debug` ((show lexp) ++ (show paramBindings))" 0 1 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 1 6 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 6 7 (font-lock-multiline t face haskell-operator-face fontified t font-lock-fontified t) 7 8 (fontified t) 8 19 (fontified t) 19 21 (fontified t) 21 22 (face haskell-operator-face fontified t syntax-table (1)) 22 23 (face haskell-operator-face fontified t syntax-table (1)) 23 24 (fontified t) 24 30 (fontified t) 30 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t)) . 1725) (undo-tree-id5356 . 2) (undo-tree-id5357 . -44) (undo-tree-id5358 . -43) (t 25585 13783 469788 504000)) nil (25585 13791 816289 155000) 0 nil])
([nil nil ((#(" -- debug` (\"avaliou a variável \" ++ (show id))" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 9 (face font-lock-comment-face fontified t font-lock-fontified t) 9 10 (face font-lock-comment-face fontified t font-lock-fontified t) 10 12 (face font-lock-comment-face fontified t font-lock-fontified t) 12 13 (face font-lock-comment-face fontified t font-lock-fontified t) 13 33 (face font-lock-comment-face fontified t font-lock-fontified t) 33 34 (face font-lock-comment-face fontified t font-lock-fontified t) 34 35 (face font-lock-comment-face fontified t font-lock-fontified t) 35 36 (face font-lock-comment-face fontified t font-lock-fontified t) 36 47 (face font-lock-comment-face fontified t font-lock-fontified t)) . 1381) (undo-tree-id5336 . -46) (undo-tree-id5337 . -2) (undo-tree-id5338 . -3) (undo-tree-id5339 . -2) (undo-tree-id5340 . -1) (undo-tree-id5341 . -2) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -47) (undo-tree-id5355 . -47)) nil (25585 13791 816278 873000) 0 nil])
([nil nil ((#("import Debug.Trace 
" 0 6 (fontified t face haskell-keyword-face) 6 7 (fontified t) 7 18 (fontified t face haskell-constructor-face) 18 20 (fontified t)) . 602) (undo-tree-id62 . -7) (undo-tree-id63 . -19) (undo-tree-id64 . -1) (undo-tree-id65 . -7) (undo-tree-id66 . -8) (undo-tree-id67 . -20) (undo-tree-id68 . -19) (t 25585 13791 943122 229000)) nil (25586 25549 683341 893000) 0 nil])
([nil nil ((604 . 606) (601 . 604) 590) nil (25586 25549 683312 23000) 0 nil])
([nil nil ((#("  im
" 0 4 (fontified t) 4 5 (fontified t)) . 602) (undo-tree-id0 . -3) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (undo-tree-id3 . -5) (undo-tree-id4 . -5) (undo-tree-id5 . -5) (undo-tree-id6 . -4) (undo-tree-id7 . -5) (undo-tree-id8 . -5) (undo-tree-id9 . -3) (undo-tree-id10 . -2) (undo-tree-id11 . -4) (undo-tree-id12 . -3) (undo-tree-id13 . -2) (undo-tree-id14 . -3) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . 1) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -5) 605) nil (25586 25549 683295 157000) 0 nil])
([nil nil ((554 . 563) (543 . 554) (542 . 543) 542) nil (25586 25549 683144 269000) 0 nil])
([nil nil ((apply -27 2029 2610 undo--wrap-and-run-primitive-undo 2029 2610 ((2548 . 2551) (2453 . 2456) (2397 . 2400) (2368 . 2371) (2292 . 2295) (2216 . 2219) (2140 . 2143) (2064 . 2067) (2029 . 2032) 2582)) (t 25586 25550 438047 468000)) nil (25586 25624 264828 668000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t font-lock-multiline t haskell-type t)) . -2029) (undo-tree-id377 . -2) (undo-tree-id378 . -2) 2031 (2028 . 2031) (t 25586 25624 401382 638000) 2016) nil (25586 25677 455665 358000) 0 nil])
([nil nil ((2031 . 2033) (#("c" 0 1 (fontified t)) . -2031) (undo-tree-id375 . -1) (#("a" 0 1 (fontified t)) . -2032) (undo-tree-id376 . -1) 2033 (2030 . 2033) (2029 . 2030)) nil (25586 25677 455660 678000) 0 nil])
([nil nil ((2033 . 2046) (#("C" 0 1 (fontified t)) . -2033) (undo-tree-id373 . -1) 2034 (2033 . 2034) (#(" " 0 1 (fontified t)) . -2033) (undo-tree-id374 . -1) 2034 (2033 . 2034)) nil (25586 25677 455655 468000) 0 nil])
([nil nil ((2039 . 2040) (#("c" 0 1 (fontified t face haskell-constructor-face)) . 2039)) nil (25586 25677 455650 475000) 0 nil])
([nil nil ((2046 . 2059)) nil (25586 25677 455648 118000) 0 nil])
([nil nil ((2038 . 2045) (#("VContext" 0 1 (fontified t face haskell-constructor-face) 1 2 (fontified t face haskell-constructor-face) 2 8 (fontified t face haskell-constructor-face)) . 2038) (undo-tree-id276 . -7) (undo-tree-id277 . -2) (undo-tree-id278 . -8) (undo-tree-id279 . -8) (undo-tree-id280 . -8) (undo-tree-id281 . -8) (undo-tree-id282 . -8) (undo-tree-id283 . -8) (undo-tree-id284 . -8) (undo-tree-id285 . -7) (undo-tree-id286 . -8) (undo-tree-id287 . -7) (undo-tree-id288 . -7) (undo-tree-id289 . -7) (undo-tree-id290 . -7) (undo-tree-id291 . -7) (undo-tree-id292 . -7) (undo-tree-id293 . -6) (undo-tree-id294 . -7) (undo-tree-id295 . -6) (undo-tree-id296 . -6) (undo-tree-id297 . -6) (undo-tree-id298 . -6) (undo-tree-id299 . -6) (undo-tree-id300 . -6) (undo-tree-id301 . -5) (undo-tree-id302 . -6) (undo-tree-id303 . -5) (undo-tree-id304 . -5) (undo-tree-id305 . -5) (undo-tree-id306 . -5) (undo-tree-id307 . -5) (undo-tree-id308 . -5) (undo-tree-id309 . -5) (undo-tree-id310 . -5) (undo-tree-id311 . -5) (undo-tree-id312 . -5) (undo-tree-id313 . -5) (undo-tree-id314 . -5) (undo-tree-id315 . -5) (undo-tree-id316 . -5) (undo-tree-id317 . -5) (undo-tree-id318 . -5) (undo-tree-id319 . -4) (undo-tree-id320 . -5) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -3) (undo-tree-id333 . -4) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) (undo-tree-id338 . -3) (undo-tree-id339 . -3) (undo-tree-id340 . -2) (undo-tree-id341 . -3) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -2) (undo-tree-id349 . -2) (undo-tree-id350 . -2) (undo-tree-id351 . -2) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (undo-tree-id359 . -2) (undo-tree-id360 . -2) (undo-tree-id361 . -2) (undo-tree-id362 . -2) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -2) (undo-tree-id370 . -2) (undo-tree-id371 . -8) (undo-tree-id372 . -8) 2040) nil (25586 25677 455639 826000) 0 nil])
([nil nil ((2039 . 2046) (#("x" 0 1 (fontified t)) . -2039) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("o" 0 1 (fontified t)) . -2040) (undo-tree-id83 . -1) (#("n" 0 1 (fontified t)) . -2041) (undo-tree-id84 . -1) 2042 (2038 . 2042) (#("xontext" 0 7 (fontified t)) . 2038) (undo-tree-id85 . -6) (undo-tree-id86 . -4) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -2) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -3) (undo-tree-id115 . -2) (undo-tree-id116 . -1) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -4) (undo-tree-id134 . -3) (undo-tree-id135 . -1) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -5) (undo-tree-id153 . -4) (undo-tree-id154 . -1) (undo-tree-id155 . -5) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -5) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (undo-tree-id165 . -5) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) (undo-tree-id171 . -6) (undo-tree-id172 . -5) (undo-tree-id173 . -1) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -6) (undo-tree-id187 . -6) (undo-tree-id188 . -6) (undo-tree-id189 . -6) (undo-tree-id190 . -7) (undo-tree-id191 . -6) (undo-tree-id192 . -1) (undo-tree-id193 . -7) (undo-tree-id194 . -7) (undo-tree-id195 . -7) (undo-tree-id196 . -7) (undo-tree-id197 . -7) (undo-tree-id198 . -7) (undo-tree-id199 . -7) (undo-tree-id200 . -7) (undo-tree-id201 . -7) (undo-tree-id202 . -7) (undo-tree-id203 . -7) (undo-tree-id204 . -7) (undo-tree-id205 . -7) (undo-tree-id206 . -7) (undo-tree-id207 . -7) (undo-tree-id208 . -7) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -6) (undo-tree-id215 . -6) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) (undo-tree-id220 . -6) (undo-tree-id221 . -6) (undo-tree-id222 . -6) (undo-tree-id223 . -6) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (undo-tree-id226 . -6) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -5) (undo-tree-id231 . -6) (undo-tree-id232 . -5) (undo-tree-id233 . -5) (undo-tree-id234 . -5) (undo-tree-id235 . -5) (undo-tree-id236 . -5) (undo-tree-id237 . -5) (undo-tree-id238 . -5) (undo-tree-id239 . -5) (undo-tree-id240 . -5) (undo-tree-id241 . -5) (undo-tree-id242 . -5) (undo-tree-id243 . -4) (undo-tree-id244 . -5) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -7) (undo-tree-id275 . -7) 2042) nil (25586 25677 455522 16000) 0 nil])
([nil nil ((2059 . 2063) (t 25586 25678 151383 975000)) nil (25586 25841 851924 89000) 0 nil])
([nil nil ((#("-> " 0 1 (fontified t syntax-table (1) face haskell-operator-face) 1 2 (fontified t syntax-table (1) face haskell-operator-face) 2 3 (fontified t)) . 2060) (undo-tree-id398 . -2)) nil (25586 25841 851922 475000) 0 nil])
([nil nil ((2061 . 2062) (2060 . 2061)) nil (25586 25841 851920 339000) 0 nil])
([nil nil ((2061 . 2064)) nil (25586 25841 851918 869000) 0 nil])
([nil nil ((2064 . 2066)) nil (25586 25841 851917 808000) 0 nil])
([nil nil ((2066 . 2067)) nil (25586 25841 851916 839000) 0 nil])
([nil nil ((2001 . 2004) (#(" " 0 1 (fontified t)) . -2001) (undo-tree-id395 . -1) 2002 (1994 . 2002) (#(" " 0 1 (fontified t)) . -1994) (undo-tree-id396 . -1) (#(" " 0 1 (fontified t)) . -1995) (undo-tree-id397 . -1) 1996 (1993 . 1996) 1993) nil (25586 25841 851914 855000) 0 nil])
([nil nil ((2005 . 2009) (#("e" 0 1 (fontified t font-lock-multiline t haskell-type t)) . -2005) (undo-tree-id394 . -1) 2006 (2005 . 2006) (2004 . 2005)) nil (25586 25841 851908 542000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t font-lock-multiline t haskell-type t face haskell-type-face)) . 2008)) nil (25586 25841 851905 433000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2008 . 2009) (#("
" 0 1 (font-lock-multiline t haskell-type t fontified nil)) . -2043) (2008 . 2044) 2005) nil (25586 25841 851903 987000) 0 nil])
([nil nil ((#("evalVar :: Exp
" 0 7 (fontified t face haskell-definition-face) 7 8 (fontified t) 8 9 (fontified t syntax-table (1) face haskell-operator-face) 9 10 (fontified t syntax-table (1) face haskell-operator-face) 10 11 (fontified t font-lock-multiline t haskell-type t) 11 14 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 14 15 (fontified t rear-nonsticky t font-lock-multiline t haskell-type t)) . 1994) (undo-tree-id392 . -14) (undo-tree-id393 . 4)) nil (25586 25841 851901 679000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t font-lock-multiline t haskell-type t)) . -2029) (undo-tree-id391 . -2) 2031 (2028 . 2031) 1995) nil (25586 25841 851898 211000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face haskell-definition-face)) . 2001)) nil (25586 25841 851895 147000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2027 . 2028) (#("
" 0 1 (font-lock-multiline t haskell-type t fontified nil)) . -2061) (2027 . 2062) 2001) nil (25586 25841 851893 755000) 0 nil])
([nil nil ((#(" :: VContext -> Exp -> Exp" 0 1 (fontified t) 1 3 (fontified t syntax-table (1) face haskell-operator-face) 3 4 (fontified t font-lock-multiline t haskell-type t) 4 12 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 12 13 (fontified t font-lock-multiline t haskell-type t) 13 15 (fontified t syntax-table (1) font-lock-multiline t haskell-type t face haskell-operator-face) 15 16 (fontified t font-lock-multiline t haskell-type t) 16 19 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 19 20 (fontified t font-lock-multiline t haskell-type t) 20 22 (fontified t syntax-table (1) font-lock-multiline t haskell-type t face haskell-operator-face) 22 23 (fontified t font-lock-multiline t haskell-type t) 23 26 (fontified t font-lock-multiline t haskell-type t face haskell-type-face)) . 2035) (undo-tree-id389 . -25) (undo-tree-id390 . -26)) nil (25586 25841 851891 711000) 0 nil])
([nil nil ((2035 . 2044)) nil (25586 25841 851888 763000) 0 nil])
([nil nil ((2036 . 2044) (#("vcontext" 0 8 (fontified t)) . 2036) (undo-tree-id387 . -7) (undo-tree-id388 . -7) 2043) nil (25586 25841 851887 206000) 0 nil])
([nil nil ((2044 . 2047)) nil (25586 25841 851883 183000) 0 nil])
([nil nil ((2036 . 2044) (#("x" 0 1 (fontified t)) . -2036) (undo-tree-id381 . -1) (#("o" 0 1 (fontified t)) . -2037) (undo-tree-id382 . -1) (#("n" 0 1 (fontified t)) . -2038) (undo-tree-id383 . -1) (#("t" 0 1 (fontified t)) . -2039) (undo-tree-id384 . -1) 2040 (2036 . 2040) (#("contextV" 0 8 (fontified t)) . 2036) (undo-tree-id385 . -7) (undo-tree-id386 . -6) 2042) nil (25586 25841 851880 478000) 0 nil])
([nil nil ((2050 . 2051) (#("t" 0 1 (fontified t face haskell-constructor-face)) . -2050) (undo-tree-id380 . -1) 2051 (2046 . 2051) (2045 . 2046)) nil (25586 25841 851869 801000) 0 nil])
([nil nil ((2047 . 2048) (#("v" 0 1 (fontified t face haskell-constructor-face)) . 2047)) nil (25586 25841 851865 620000) 0 nil])
([nil nil ((2051 . 2053)) nil (25586 25841 851864 313000) 0 nil])
([nil nil ((2053 . 2054)) nil (25586 25841 851863 167000) 0 nil])
([nil nil ((2066 . 2067) (2061 . 2066) (#("s" 0 1 (fontified t)) . -2061) (undo-tree-id379 . -1) 2062 (2056 . 2062)) nil (25586 25841 853279 38000) 0 nil])
([nil nil ((#("lookup" 0 6 (fontified t)) . -2066) (2072 . 2082) 2072 (2066 . 2072)) nil (25586 25854 77587 996000) 0 nil] [nil nil ((2182 . 2183) (2181 . 2182) (2180 . 2181) (2179 . 2180) (2178 . 2179) (2177 . 2178) (2176 . 2177) (2175 . 2176) (2174 . 2175) (2173 . 2174) (2172 . 2173) (2171 . 2172) (2170 . 2171) (2169 . 2170) (2168 . 2169) (2167 . 2168) (2166 . 2167) (2165 . 2166) (2164 . 2165) (2163 . 2164) (2162 . 2163) (2161 . 2162) (2160 . 2161) (2159 . 2160) (2158 . 2159) (2157 . 2158) (2156 . 2157) (2155 . 2156) (2154 . 2155) (2153 . 2154) (2152 . 2153) (2151 . 2152) (2150 . 2151) (2149 . 2150) (2148 . 2149) (2147 . 2148) (2146 . 2147) (2145 . 2146) (2144 . 2145) (2143 . 2144) (2142 . 2143) (2141 . 2142) (2140 . 2141) (2139 . 2140) (2138 . 2139) (2137 . 2138) (2136 . 2137) (2135 . 2136) (2134 . 2135) (2133 . 2134) (2132 . 2133) (2131 . 2132) (2130 . 2131) (2129 . 2130) (2128 . 2129) (2127 . 2128) (2126 . 2127) (2125 . 2126) (2124 . 2125) (2123 . 2124) (2122 . 2123) (2121 . 2122) (2120 . 2121) (2119 . 2120) (2118 . 2119) (2117 . 2118) (2116 . 2117) (2115 . 2116) (2114 . 2115) (2113 . 2114) (2112 . 2113) (2111 . 2112) (2110 . 2111) (2109 . 2110) (2108 . 2109) (2107 . 2108) (2106 . 2107) (2105 . 2106) (2104 . 2105) (2103 . 2104) (2102 . 2103) (2101 . 2102) (2100 . 2101) (2099 . 2100) (2098 . 2099) (2097 . 2098) (2096 . 2097) (2095 . 2096) (2094 . 2095) (2093 . 2094) (2092 . 2093) (2091 . 2092) (2090 . 2091) (2089 . 2090) (2088 . 2089) (2087 . 2088) (2086 . 2087) (2085 . 2086) (2084 . 2085) (2083 . 2084) (2082 . 2083) (2081 . 2082) (2080 . 2081) (2079 . 2080) (2066 . 2079)) ((#("lookupMemo id" 0 13 (fontified nil)) . 2066) (undo-tree-id399 . -13) (undo-tree-id400 . -13) (undo-tree-id401 . -13) (undo-tree-id402 . -13) (#("l" 0 1 (fontified nil)) . 2079) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (#("o" 0 1 (fontified nil)) . 2080) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("o" 0 1 (fontified nil)) . 2081) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#("k" 0 1 (fontified nil)) . 2082) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("u" 0 1 (fontified nil)) . 2083) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#("p" 0 1 (fontified nil)) . 2084) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (#("M" 0 1 (fontified nil)) . 2085) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (#("e" 0 1 (fontified nil)) . 2086) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (#("m" 0 1 (fontified nil)) . 2087) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (#("o" 0 1 (fontified nil)) . 2088) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (#(" " 0 1 (fontified nil)) . 2089) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (#("i" 0 1 (fontified nil)) . 2090) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (#("d" 0 1 (fontified nil)) . 2091) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (#("l" 0 1 (fontified nil)) . 2092) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (#("o" 0 1 (fontified nil)) . 2093) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (#("o" 0 1 (fontified nil)) . 2094) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (#("k" 0 1 (fontified nil)) . 2095) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (#("u" 0 1 (fontified nil)) . 2096) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("p" 0 1 (fontified nil)) . 2097) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (#("M" 0 1 (fontified nil)) . 2098) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#("e" 0 1 (fontified nil)) . 2099) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("m" 0 1 (fontified nil)) . 2100) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (#("o" 0 1 (fontified nil)) . 2101) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (#(" " 0 1 (fontified nil)) . 2102) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (#("i" 0 1 (fontified nil)) . 2103) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (#("d" 0 1 (fontified nil)) . 2104) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (#("l" 0 1 (fontified nil)) . 2105) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (#("o" 0 1 (fontified nil)) . 2106) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (#("o" 0 1 (fontified nil)) . 2107) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("k" 0 1 (fontified nil)) . 2108) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (#("u" 0 1 (fontified nil)) . 2109) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (#("p" 0 1 (fontified nil)) . 2110) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (#("M" 0 1 (fontified nil)) . 2111) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (#("e" 0 1 (fontified nil)) . 2112) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#("m" 0 1 (fontified nil)) . 2113) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (#("o" 0 1 (fontified nil)) . 2114) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#(" " 0 1 (fontified nil)) . 2115) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (#("i" 0 1 (fontified nil)) . 2116) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (#("d" 0 1 (fontified nil)) . 2117) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (#("l" 0 1 (fontified nil)) . 2118) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (#("o" 0 1 (fontified nil)) . 2119) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (#("o" 0 1 (fontified nil)) . 2120) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (#("k" 0 1 (fontified nil)) . 2121) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (#("u" 0 1 (fontified nil)) . 2122) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (#("p" 0 1 (fontified nil)) . 2123) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (#("M" 0 1 (fontified nil)) . 2124) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (#("e" 0 1 (fontified nil)) . 2125) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (#("m" 0 1 (fontified nil)) . 2126) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (#("o" 0 1 (fontified nil)) . 2127) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#(" " 0 1 (fontified nil)) . 2128) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (#("i" 0 1 (fontified nil)) . 2129) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (#("d" 0 1 (fontified nil)) . 2130) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (#("l" 0 1 (fontified nil)) . 2131) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (#("o" 0 1 (fontified nil)) . 2132) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (#("o" 0 1 (fontified nil)) . 2133) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (#("k" 0 1 (fontified nil)) . 2134) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (#("u" 0 1 (fontified nil)) . 2135) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (#("p" 0 1 (fontified nil)) . 2136) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (#("M" 0 1 (fontified nil)) . 2137) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (#("e" 0 1 (fontified nil)) . 2138) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (#("m" 0 1 (fontified nil)) . 2139) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (#("o" 0 1 (fontified nil)) . 2140) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (#(" " 0 1 (fontified nil)) . 2141) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (#("i" 0 1 (fontified nil)) . 2142) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (#("d" 0 1 (fontified nil)) . 2143) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (#("l" 0 1 (fontified nil)) . 2144) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (#("o" 0 1 (fontified nil)) . 2145) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (#("o" 0 1 (fontified nil)) . 2146) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (#("k" 0 1 (fontified nil)) . 2147) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (#("u" 0 1 (fontified nil)) . 2148) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#("p" 0 1 (fontified nil)) . 2149) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (#("M" 0 1 (fontified nil)) . 2150) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (#("e" 0 1 (fontified nil)) . 2151) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (#("m" 0 1 (fontified nil)) . 2152) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (#("o" 0 1 (fontified nil)) . 2153) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (#(" " 0 1 (fontified nil)) . 2154) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (#("i" 0 1 (fontified nil)) . 2155) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (#("d" 0 1 (fontified nil)) . 2156) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (#("l" 0 1 (fontified nil)) . 2157) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (#("o" 0 1 (fontified nil)) . 2158) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (#("o" 0 1 (fontified nil)) . 2159) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (#("k" 0 1 (fontified nil)) . 2160) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (#("u" 0 1 (fontified nil)) . 2161) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (#("p" 0 1 (fontified nil)) . 2162) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (#("M" 0 1 (fontified nil)) . 2163) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (#("e" 0 1 (fontified nil)) . 2164) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (#("m" 0 1 (fontified nil)) . 2165) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (#("o" 0 1 (fontified nil)) . 2166) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (#(" " 0 1 (fontified nil)) . 2167) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (#("i" 0 1 (fontified nil)) . 2168) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (#("d" 0 1 (fontified nil)) . 2169) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (#("l" 0 1 (fontified nil)) . 2170) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (#("o" 0 1 (fontified nil)) . 2171) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (#("o" 0 1 (fontified nil)) . 2172) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (#("k" 0 1 (fontified nil)) . 2173) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (#("u" 0 1 (fontified nil)) . 2174) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (#("p" 0 1 (fontified nil)) . 2175) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (#("M" 0 1 (fontified nil)) . 2176) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#("e" 0 1 (fontified nil)) . 2177) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (#("m" 0 1 (fontified nil)) . 2178) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (#("o" 0 1 (fontified nil)) . 2179) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (#(" " 0 1 (fontified nil)) . 2180) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (#("i" 0 1 (fontified nil)) . 2181) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (#("d" 0 1 (fontified t)) . 2182)) (25586 25841 851838 907000) 0 nil])
([nil nil ((2076 . 2079)) nil (25586 25854 77585 148000) 0 nil])
nil
([nil nil ((2083 . 2088) (2080 . 2083) (#("C" 0 1 (fontified t face haskell-constructor-face)) . -2080) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (#("o" 0 1 (fontified t face haskell-constructor-face)) . -2081) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (#("n" 0 1 (fontified t face haskell-constructor-face)) . -2082) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (#("t" 0 1 (fontified t face haskell-constructor-face)) . -2083) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (#("e" 0 1 (fontified t face haskell-constructor-face)) . -2084) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) 2085 (2079 . 2085)) nil (25586 25854 77546 472000) 0 nil])
([nil nil ((2164 . 2171) (t 25586 25854 208055 14000)) nil (25586 25862 455728 926000) 0 nil])
([nil nil ((2179 . 2180) (2171 . 2179) (t 25586 25862 588055 222000)) nil (25586 26130 204867 216000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . 2182) (2181 . 2184)) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 2181) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (2182 . 2184)) (25586 26132 642570 813000) 0 nil])
([nil nil ((#("debug = flip trace
" 0 5 (fontified t face haskell-definition-face) 5 6 (fontified t) 6 7 (fontified t syntax-table (1) face haskell-operator-face) 7 17 (fontified t) 17 19 (fontified t)) . 795) (undo-tree-id1418 . -17)) ((795 . 814)) (25586 26132 786550 617000) 0 nil])
([nil nil ((2027 . 2028)) ((#("(" 0 1 (fontified t)) . 2027) (undo-tree-id1409 . -1) (undo-tree-id1411 . -1) (undo-tree-id1413 . -1) (undo-tree-id1415 . -1)) (25586 26132 949112 779000) 0 nil])
([nil nil ((2035 . 2036)) ((#(")" 0 1 (fontified t)) . 2035) (undo-tree-id1407 . -1)) (25586 26133 90572 739000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2026) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1)) ((2026 . 2027) (t 25586 26022 118059 193000)) (25586 26133 239129 480000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -623) (undo-tree-id1445 . -2) (undo-tree-id1446 . -2) (undo-tree-id1447 . -2) (undo-tree-id1448 . -2) (undo-tree-id1449 . -2) (undo-tree-id1450 . -2) (undo-tree-id1451 . -2) (undo-tree-id1452 . -2) (undo-tree-id1453 . -2) (undo-tree-id1454 . -2) (undo-tree-id1455 . -2) (undo-tree-id1456 . -2) (undo-tree-id1457 . -2) (undo-tree-id1458 . -2) (undo-tree-id1459 . -2) (undo-tree-id1460 . -2) (undo-tree-id1461 . -2) (undo-tree-id1462 . -2) (undo-tree-id1463 . -2) (undo-tree-id1464 . -2) (undo-tree-id1465 . -2) (undo-tree-id1466 . -2) (undo-tree-id1467 . -2) (undo-tree-id1468 . -2) (undo-tree-id1469 . -2) (undo-tree-id1470 . -2) (undo-tree-id1471 . -2) (undo-tree-id1472 . -2) (undo-tree-id1473 . -2) (undo-tree-id1474 . -2) (undo-tree-id1475 . -2) (undo-tree-id1476 . -2) 625 (622 . 625) (t 25586 26022 118059 193000) 621) nil (25586 26171 29790 12000) 0 nil])
([nil nil ((633 . 641) (#("b" 0 1 (fontified t face haskell-constructor-face)) . -633) (undo-tree-id1439 . -1) (#("u" 0 1 (fontified t face haskell-constructor-face)) . -634) (undo-tree-id1440 . -1) 635 (633 . 635) (#("u" 0 1 (fontified t face haskell-constructor-face)) . -633) (undo-tree-id1441 . -1) 634 (631 . 634) (#("E" 0 1 (fontified t face haskell-constructor-face)) . -631) (undo-tree-id1442 . -1) (#("b" 0 1 (fontified t face haskell-constructor-face)) . -632) (undo-tree-id1443 . -1) (#("n" 0 1 (fontified t face haskell-constructor-face)) . -633) (undo-tree-id1444 . -1) 634 (623 . 634)) nil (25586 26171 29705 10000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 642) (undo-tree-id1509 . -1) (t 25586 26171 204729 566000)) nil (25586 26180 788415 855000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t font-lock-multiline t haskell-type t)) . -814) (undo-tree-id1477 . -2) (undo-tree-id1478 . -2) (undo-tree-id1479 . -2) (undo-tree-id1480 . -2) (undo-tree-id1481 . -2) (undo-tree-id1482 . -2) (undo-tree-id1483 . -2) (undo-tree-id1484 . -2) (undo-tree-id1485 . -2) (undo-tree-id1486 . -2) (undo-tree-id1487 . -2) (undo-tree-id1488 . -2) (undo-tree-id1489 . -2) (undo-tree-id1490 . -2) (undo-tree-id1491 . -2) (undo-tree-id1492 . -2) (undo-tree-id1493 . -2) (undo-tree-id1494 . -2) (undo-tree-id1495 . -2) (undo-tree-id1496 . -2) (undo-tree-id1497 . -2) (undo-tree-id1498 . -2) (undo-tree-id1499 . -2) (undo-tree-id1500 . -2) (undo-tree-id1501 . -2) (undo-tree-id1502 . -2) (undo-tree-id1503 . -2) (undo-tree-id1504 . -2) (undo-tree-id1505 . -2) (undo-tree-id1506 . -2) (undo-tree-id1507 . -2) (undo-tree-id1508 . -2) 816 (813 . 816) 813) nil (25586 26180 788409 231000) 0 nil])
([nil nil ((814 . 832)) nil (25586 26180 788363 965000) 0 nil])
([nil nil ((1884 . 1901) (t 25586 26180 941396 476000)) nil (25586 26232 539303 393000) 0 nil])
([nil nil ((1885 . 1886) (t 25586 26232 671397 761000)) nil (25586 26237 948062 306000) 0 nil])
([nil nil ((1891 . 1892)) nil (25586 26237 948056 223000) 0 nil])
([nil nil ((2219 . 2222) (t 25586 26238 91397 894000)) nil (25586 26304 506702 682000) 0 nil])
([nil nil ((2221 . 2226)) nil (25586 26304 506696 684000) 0 nil])
([nil nil ((2229 . 2230) (2227 . 2229)) nil (25586 26304 506691 979000) 0 nil])
([nil nil ((2234 . 2242) (2229 . 2234)) nil (25586 26304 506682 202000) 0 nil])
([nil nil ((1893 . 1894) (t 25586 26304 548066 217000)) nil (25586 26359 850971 524000) 0 nil])
([nil nil ((1915 . 1916) (1908 . 1915) (#("i" 0 1 (fontified t)) . -1908) (undo-tree-id1510 . -1) (#("d" 0 1 (fontified t)) . -1909) (undo-tree-id1511 . -1) 1910 (1908 . 1910) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-warning-face)) . -1908) (undo-tree-id1512 . -1) 1909 (1904 . 1909)) nil (25586 26359 850964 948000) 0 nil])
([nil nil ((1903 . 1904) (t 25586 26359 898067 592000)) nil (25586 26375 487875 813000) 0 nil])
([nil nil ((#("`debug` (\"executei \" ++ show id)" 0 1 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t) 1 6 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t) 6 7 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t) 7 9 (fontified t) 9 10 (fontified t face font-lock-string-face) 10 20 (fontified t face font-lock-string-face) 20 21 (fontified t) 21 22 (fontified t syntax-table (1) face haskell-operator-face) 22 23 (fontified t syntax-table (1) face haskell-operator-face) 23 32 (fontified t)) . 1885) (undo-tree-id1513 . -31) (undo-tree-id1514 . 13) (undo-tree-id1515 . -19) (undo-tree-id1516 . -18) (undo-tree-id1517 . -18) (undo-tree-id1518 . -18) (undo-tree-id1519 . -18) (undo-tree-id1520 . -18) (undo-tree-id1521 . -18) (undo-tree-id1522 . -18) (undo-tree-id1523 . -18) (undo-tree-id1524 . -18) (undo-tree-id1525 . -18) (undo-tree-id1526 . -18) (undo-tree-id1527 . -18) (undo-tree-id1528 . -18) (undo-tree-id1529 . -18) (undo-tree-id1530 . -18) (undo-tree-id1531 . -18) (undo-tree-id1532 . -18) (undo-tree-id1533 . -18) (undo-tree-id1534 . -18) (undo-tree-id1535 . -18) (undo-tree-id1536 . -18) (undo-tree-id1537 . -18) (undo-tree-id1538 . -18) (undo-tree-id1539 . -18) (undo-tree-id1540 . -18) (undo-tree-id1541 . -18) (undo-tree-id1542 . -18) (undo-tree-id1543 . -18) (undo-tree-id1544 . -18) (undo-tree-id1545 . -18) (undo-tree-id1546 . -18) (undo-tree-id1547 . -18) (undo-tree-id1548 . -18) (undo-tree-id1549 . -18) (undo-tree-id1550 . -18) (undo-tree-id1551 . -18) (undo-tree-id1552 . -18) (undo-tree-id1553 . -18) (undo-tree-id1554 . -18) (undo-tree-id1555 . -18) (undo-tree-id1556 . -18) (undo-tree-id1557 . -18) (undo-tree-id1558 . -18) (undo-tree-id1559 . -18) (undo-tree-id1560 . -18) (undo-tree-id1561 . -18) (undo-tree-id1562 . -18) (undo-tree-id1563 . -18) (undo-tree-id1564 . -18) (undo-tree-id1565 . -18) (undo-tree-id1566 . -18) (undo-tree-id1567 . -18) (undo-tree-id1568 . -18) (undo-tree-id1569 . -17) (undo-tree-id1570 . -18) (undo-tree-id1571 . -17) (undo-tree-id1572 . -17) (undo-tree-id1573 . -17) (undo-tree-id1574 . -17) (undo-tree-id1575 . -17) (undo-tree-id1576 . -17) (undo-tree-id1577 . -17) (undo-tree-id1578 . -17) (undo-tree-id1579 . -17) (undo-tree-id1580 . -17) (undo-tree-id1581 . -17) (undo-tree-id1582 . -17) (undo-tree-id1583 . -17) (undo-tree-id1584 . -17) (undo-tree-id1585 . -17) (undo-tree-id1586 . -17) (undo-tree-id1587 . -16) (undo-tree-id1588 . -17) (undo-tree-id1589 . -16) (undo-tree-id1590 . -16) (undo-tree-id1591 . -16) (undo-tree-id1592 . -16) (undo-tree-id1593 . -16) (undo-tree-id1594 . -16) (undo-tree-id1595 . -15) (undo-tree-id1596 . -16) (undo-tree-id1597 . -15) (undo-tree-id1598 . -15) (undo-tree-id1599 . -15) (undo-tree-id1600 . -15) (undo-tree-id1601 . -15) (undo-tree-id1602 . -15) (undo-tree-id1603 . -14) (undo-tree-id1604 . -15) (undo-tree-id1605 . -14) (undo-tree-id1606 . -14) (undo-tree-id1607 . -14) (undo-tree-id1608 . -14) (undo-tree-id1609 . -14) (undo-tree-id1610 . -14) (undo-tree-id1611 . -13) (undo-tree-id1612 . -14) (undo-tree-id1613 . -13) (undo-tree-id1614 . -13) (undo-tree-id1615 . -13) (undo-tree-id1616 . -13) (undo-tree-id1617 . -13) (undo-tree-id1618 . -13) (undo-tree-id1619 . -12) (undo-tree-id1620 . -13) (undo-tree-id1621 . -12) (undo-tree-id1622 . -12) (undo-tree-id1623 . -12) (undo-tree-id1624 . -12) (undo-tree-id1625 . -12) (undo-tree-id1626 . -12) (undo-tree-id1627 . -11) (undo-tree-id1628 . -12) (undo-tree-id1629 . -11) (undo-tree-id1630 . -11) (undo-tree-id1631 . -11) (undo-tree-id1632 . -11) (undo-tree-id1633 . -11) (undo-tree-id1634 . -11) (undo-tree-id1635 . -10) (undo-tree-id1636 . -11) (undo-tree-id1637 . -10) (undo-tree-id1638 . -10) (undo-tree-id1639 . -10) (undo-tree-id1640 . -10) (undo-tree-id1641 . -10) (undo-tree-id1642 . -10) (undo-tree-id1643 . -9) (undo-tree-id1644 . -10) (undo-tree-id1645 . -9) (undo-tree-id1646 . -9) (undo-tree-id1647 . -9) (undo-tree-id1648 . -9) (undo-tree-id1649 . -9) (undo-tree-id1650 . -9) (undo-tree-id1651 . -8) (undo-tree-id1652 . -9) (undo-tree-id1653 . -8) (undo-tree-id1654 . -8) (undo-tree-id1655 . -8) (undo-tree-id1656 . -8) (undo-tree-id1657 . -8) (undo-tree-id1658 . -8) (undo-tree-id1659 . -7) (undo-tree-id1660 . -8) (undo-tree-id1661 . -7) (undo-tree-id1662 . -7) (undo-tree-id1663 . -7) (undo-tree-id1664 . -7) (undo-tree-id1665 . -7) (undo-tree-id1666 . -7) (undo-tree-id1667 . -6) (undo-tree-id1668 . -7) (undo-tree-id1669 . -6) (undo-tree-id1670 . -6) (undo-tree-id1671 . -6) (undo-tree-id1672 . -6) (undo-tree-id1673 . -6) (undo-tree-id1674 . -6) (undo-tree-id1675 . -5) (undo-tree-id1676 . -6) (undo-tree-id1677 . -5) (undo-tree-id1678 . -5) (undo-tree-id1679 . -5) (undo-tree-id1680 . -5) (undo-tree-id1681 . -5) (undo-tree-id1682 . -5) (undo-tree-id1683 . -4) (undo-tree-id1684 . -5) (undo-tree-id1685 . -4) (undo-tree-id1686 . -4) (undo-tree-id1687 . -4) (undo-tree-id1688 . -4) (undo-tree-id1689 . -4) (undo-tree-id1690 . -4) (undo-tree-id1691 . -3) (undo-tree-id1692 . -4) (undo-tree-id1693 . -3) (undo-tree-id1694 . -3) (undo-tree-id1695 . -3) (undo-tree-id1696 . -3) (undo-tree-id1697 . -3) (undo-tree-id1698 . -3) (undo-tree-id1699 . -2) (undo-tree-id1700 . -3) (undo-tree-id1701 . -2) (undo-tree-id1702 . -2) (undo-tree-id1703 . -2) (undo-tree-id1704 . -2) (undo-tree-id1705 . -2) (undo-tree-id1706 . -2) (undo-tree-id1707 . -1) (undo-tree-id1708 . -2) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -32) (undo-tree-id1717 . -32) (t 25586 26375 561401 316000)) nil (25586 26385 819391 311000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1728 . 1729) (nil fontified nil 1697 . 1729) (1697 . 1729) 1696) nil (25586 26385 819176 1000) 0 nil])
([nil nil ((1728 . 1736) (t 25586 26385 954734 906000)) nil (25586 26451 311840 525000) 0 nil])
([nil nil ((1721 . 1723)) nil (25586 26451 311839 173000) 0 nil])
([nil nil ((1738 . 1743)) nil (25586 26451 311838 37000) 0 nil])
([nil nil ((1734 . 1736)) nil (25586 26451 311835 992000) 0 nil])
([nil nil ((1742 . 1745) (#("w" 0 1 (fontified t)) . -1742) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (#("x" 0 1 (fontified t)) . -1743) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (#("z" 0 1 (fontified t)) . -1744) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) 1745 (1741 . 1745) (#("para" 0 4 (fontified t)) . 1741) (undo-tree-id1850 . -3) (undo-tree-id1851 . -1) (undo-tree-id1852 . -4) (undo-tree-id1853 . -4) (undo-tree-id1854 . -4) (undo-tree-id1855 . -1) (undo-tree-id1856 . -4) (undo-tree-id1857 . -4) (undo-tree-id1858 . -4) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -4) (undo-tree-id1896 . -4) 1742) nil (25586 26451 311819 485000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t syntax-table (1) face haskell-operator-face)) . 1734) (t 25586 26451 498069 869000)) nil (25586 26469 787187 597000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t syntax-table (1) face haskell-operator-face)) . 1721) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1)) nil (25586 26469 787184 980000) 0 nil])
([nil nil ((1722 . 1723)) nil (25586 26469 787173 369000) 0 nil])
([nil nil ((1730 . 1731)) nil (25586 26469 787171 539000) 0 nil])
([nil nil ((1736 . 1737)) nil (25586 26469 787169 172000) 0 nil])
([nil nil ((1747 . 1748)) nil (25586 26629 471928 305000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2182 . 2183) (nil fontified nil 2160 . 2183) (2160 . 2183) 2159 (t 25586 26469 921403 660000)) nil (25586 26671 612690 788000) 0 nil] [nil nil ((2215 . 2219) (t 25586 26469 921403 660000)) ((#("exp " 0 4 (fontified t)) . 2215) (undo-tree-id1900 . -1)) (25586 26629 471679 305000) 0 nil])
([nil nil ((2160 . 2161)) nil (25586 26671 612688 405000) 0 nil])
nil
([nil nil ((2170 . 2178) (#("show contextV" 0 13 (fontified t)) . 2170) (undo-tree-id1901 . -12) (undo-tree-id1902 . -1) (undo-tree-id1903 . -13) (undo-tree-id1904 . -5) (undo-tree-id1905 . -13) (undo-tree-id1906 . -13) (undo-tree-id1907 . -13) (undo-tree-id1908 . -1) (undo-tree-id1909 . -5) (undo-tree-id1910 . -6) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -13) (undo-tree-id1957 . -13) 2171) nil (25586 26671 612682 109000) 0 nil])
([nil nil ((2178 . 2179)) nil (25586 26671 612612 923000) 0 nil])
([nil nil ((#("evalVar :: VContext -> Exp -> Exp
" 0 7 (fontified t face haskell-definition-face) 7 8 (fontified t) 8 10 (syntax-table (1) fontified t face haskell-operator-face) 10 11 (fontified t font-lock-multiline t haskell-type t) 11 19 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 19 20 (fontified t font-lock-multiline t haskell-type t) 20 22 (syntax-table (1) fontified t font-lock-multiline t haskell-type t face haskell-operator-face) 22 23 (fontified t font-lock-multiline t haskell-type t) 23 26 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 26 27 (fontified t font-lock-multiline t haskell-type t) 27 29 (syntax-table (1) fontified t font-lock-multiline t haskell-type t face haskell-operator-face) 29 30 (fontified t font-lock-multiline t haskell-type t) 30 33 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 33 34 (rear-nonsticky t fontified t font-lock-multiline t haskell-type t)) . 2064) (undo-tree-id1972 . -33) (undo-tree-id1973 . -32) (undo-tree-id1974 . -32) (undo-tree-id1975 . -32) (undo-tree-id1976 . -32) (undo-tree-id1977 . -32) (undo-tree-id1978 . -32) (undo-tree-id1979 . -32) (undo-tree-id1980 . -32) (undo-tree-id1981 . -32) (undo-tree-id1982 . -32) (undo-tree-id1983 . -32) (undo-tree-id1984 . -17) 2081 (t 25586 26671 661408 670000)) nil (25586 26961 900449 649000) 0 nil])
([nil nil ((2283 . 2287) (#("e" 0 1 (fontified t)) . -2283) (undo-tree-id1963 . -1) 2284 (2283 . 2284) (#("x" 0 1 (fontified t)) . -2283) (undo-tree-id1964 . -1) 2284 (2283 . 2284) (#("j" 0 1 (fontified t)) . -2283) (undo-tree-id1965 . -1) (#("u" 0 1 (fontified t)) . -2284) (undo-tree-id1966 . -1) (#("i" 0 1 (fontified t)) . -2285) (undo-tree-id1967 . -1) 2286 (2283 . 2286) (2279 . 2283) (#("c" 0 1 (fontified t)) . -2279) (undo-tree-id1968 . -1) (#(" " 0 1 (fontified t)) . -2280) (undo-tree-id1969 . -1) (#("=" 0 1 (fontified t syntax-table (1) face haskell-operator-face)) . -2281) (undo-tree-id1970 . -1) (#(" " 0 1 (fontified t)) . -2282) (undo-tree-id1971 . -1) 2283 (2279 . 2283) (2265 . 2279) (2262 . 2265) 2201) nil (25586 26961 900431 368000) 0 nil])
([nil nil ((2283 . 2284)) nil (25586 26961 900417 348000) 0 nil])
([nil nil ((2291 . 2292) (2288 . 2291)) nil (25586 26961 900416 228000) 0 nil])
([nil nil ((2292 . 2295)) nil (25586 26961 900414 792000) 0 nil])
([nil nil ((2305 . 2306) (2299 . 2305) (#(" " 0 1 (fontified t)) . -2299) (undo-tree-id1962 . -1) 2300 (2295 . 2300)) nil (25586 26961 900413 76000) 0 nil])
([nil nil ((2315 . 2319) (#("lookupM" 0 7 (fontified t)) . -2305) (2312 . 2322) 2312 (2308 . 2312) (#("j" 0 1 (fontified t)) . -2308) (undo-tree-id1958 . -1) (#("k" 0 1 (fontified t)) . -2309) (undo-tree-id1959 . -1) 2310 (2306 . 2310) (#("i" 0 1 (fontified t)) . -2306) (undo-tree-id1960 . -1) (#("i" 0 1 (fontified t)) . -2307) (undo-tree-id1961 . -1) 2308 (2305 . 2308)) nil (25586 26961 900406 660000) 0 nil])
([nil nil ((2316 . 2319)) nil (25586 26961 900368 95000) 0 nil])
([nil nil ((#("evalVar contextV (EVar id) = fromJust (lookupMemo id contextV) `debug` (\"cheguei\")
" 0 7 (fontified t face haskell-definition-face) 7 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t face haskell-constructor-face) 19 20 (fontified t face haskell-constructor-face) 20 22 (fontified t face haskell-constructor-face) 22 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t syntax-table (1) face haskell-operator-face) 28 38 (fontified t) 38 39 (fontified t) 39 61 (fontified t) 61 63 (fontified t) 63 64 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t) 64 69 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t) 69 70 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t face font-lock-string-face) 73 81 (fontified t face font-lock-string-face) 81 82 (fontified t rear-nonsticky t) 82 83 (fontified t)) . 2064) (undo-tree-id1985 . -82) (undo-tree-id1986 . -17) (undo-tree-id1987 . -80) (undo-tree-id1988 . -7) (undo-tree-id1989 . -17) (undo-tree-id1990 . -17) (undo-tree-id1991 . -17) (undo-tree-id1992 . -17) (undo-tree-id1993 . -80) (undo-tree-id1994 . -80) (undo-tree-id1995 . -62) (undo-tree-id1996 . -80) (undo-tree-id1997 . -80) (undo-tree-id1998 . -80) (undo-tree-id1999 . -80) (undo-tree-id2000 . -80) (undo-tree-id2001 . -66) (undo-tree-id2002 . -17) (undo-tree-id2003 . -83) (undo-tree-id2004 . -83) (undo-tree-id2005 . -83) (undo-tree-id2006 . -83) (undo-tree-id2007 . -83) (undo-tree-id2008 . -83) (undo-tree-id2009 . -83) (undo-tree-id2010 . -83) (undo-tree-id2011 . -83) (undo-tree-id2012 . -83) (undo-tree-id2013 . -83) (undo-tree-id2014 . -83) (undo-tree-id2015 . -66) (undo-tree-id2016 . -83) (undo-tree-id2017 . -66) (undo-tree-id2018 . -66) (undo-tree-id2019 . -66) (undo-tree-id2020 . -66) (undo-tree-id2021 . -66) (undo-tree-id2022 . -66) (undo-tree-id2023 . -66) (undo-tree-id2024 . -66) (undo-tree-id2025 . -66) (undo-tree-id2026 . -66) (undo-tree-id2027 . -66) (undo-tree-id2028 . -66) (undo-tree-id2029 . -66) (undo-tree-id2030 . -66) (undo-tree-id2031 . -66) (undo-tree-id2032 . -66) (undo-tree-id2033 . -66) (undo-tree-id2034 . -66) (undo-tree-id2035 . -66) (undo-tree-id2036 . -66) (undo-tree-id2037 . -66) (undo-tree-id2038 . -66) (undo-tree-id2039 . -66) (undo-tree-id2040 . -66) (undo-tree-id2041 . -83) 2130 (t 25586 26962 48082 562000)) nil (25586 26974 823284 364000) 0 nil])
([nil nil ((2240 . 2241) (t 25586 26974 948082 882000)) nil (25586 27045 820353 199000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2243 . 2244) (#("
" 0 1 (fontified nil)) . -2303) (2241 . 2304) 2240) nil (25586 27045 820351 597000) 0 nil])
([nil nil ((2258 . 2259) (#("ctx (EVar id)" 0 5 (fontified t) 5 9 (fontified t face haskell-constructor-face) 9 13 (fontified t)) . 2258) (undo-tree-id2294 . -12) (undo-tree-id2295 . -12) (undo-tree-id2296 . -12) (undo-tree-id2297 . -12) (undo-tree-id2298 . -12) (undo-tree-id2299 . 1) (undo-tree-id2300 . -13) (undo-tree-id2301 . 9) (undo-tree-id2302 . -5) 2270) nil (25586 27045 820349 76000) 0 nil])
([nil nil ((2262 . 2264) (#("fromJust (lookupMemo id ctx) " 0 9 (fontified t) 9 10 (fontified t) 10 27 (fontified t) 27 29 (fontified t)) . 2262) (undo-tree-id2293 . -28)) nil (25586 27045 820338 713000) 0 nil])
([nil nil ((2258 . 2261) (#("_" 0 1 (fontified t face haskell-keyword-face)) . -2258) (undo-tree-id2292 . -1) 2259) nil (25586 27045 820336 106000) 0 nil])
([nil nil ((2262 . 2267)) nil (25586 27045 820332 852000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2262)) nil (25586 27045 820331 400000) 0 nil])
([nil nil ((2258 . 2259) (#("c" 0 1 (fontified t)) . -2258) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (#("t" 0 1 (fontified t)) . -2259) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (#("x" 0 1 (fontified t)) . -2260) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) 2261) nil (25586 27045 820317 741000) 0 nil])
([nil nil ((2266 . 2269) (#("id" 0 2 (fontified t)) . 2266) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -2) (undo-tree-id2049 . -2) (undo-tree-id2050 . -2) (undo-tree-id2051 . -2) (undo-tree-id2052 . -2) (undo-tree-id2053 . -2) (undo-tree-id2054 . -2) (undo-tree-id2055 . -2) (undo-tree-id2056 . -2) (undo-tree-id2057 . -2) (undo-tree-id2058 . -2) (undo-tree-id2059 . -2) (undo-tree-id2060 . -2) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -2) (undo-tree-id2106 . -2) 2267) nil (25586 27045 820077 484000) 0 nil])
([nil nil ((#("where " 0 5 (fontified t face haskell-keyword-face) 5 6 (fontified t)) . 2244) (undo-tree-id2303 . -5) (undo-tree-id2304 . -3) (undo-tree-id2305 . -6) (undo-tree-id2306 . -6) (undo-tree-id2307 . -6) (undo-tree-id2308 . -6) (undo-tree-id2309 . -6) (undo-tree-id2310 . -6) (undo-tree-id2311 . -6) (undo-tree-id2312 . -5) (undo-tree-id2313 . -6) (undo-tree-id2314 . -5) (undo-tree-id2315 . -5) (undo-tree-id2316 . -5) (undo-tree-id2317 . -5) (undo-tree-id2318 . -5) (undo-tree-id2319 . -5) (undo-tree-id2320 . -4) (undo-tree-id2321 . -5) (undo-tree-id2322 . -4) (undo-tree-id2323 . -4) (undo-tree-id2324 . -4) (undo-tree-id2325 . -4) (undo-tree-id2326 . -4) (undo-tree-id2327 . -4) (undo-tree-id2328 . -3) (undo-tree-id2329 . -4) (undo-tree-id2330 . -3) (undo-tree-id2331 . -3) (undo-tree-id2332 . -3) (undo-tree-id2333 . -3) (undo-tree-id2334 . -3) (undo-tree-id2335 . -3) (undo-tree-id2336 . -3) (undo-tree-id2337 . -3) (undo-tree-id2338 . -3) (undo-tree-id2339 . -3) (undo-tree-id2340 . -3) (undo-tree-id2341 . -3) (undo-tree-id2342 . -3) (undo-tree-id2343 . -3) (undo-tree-id2344 . -3) (undo-tree-id2345 . -3) (undo-tree-id2346 . -3) (undo-tree-id2347 . -3) (undo-tree-id2348 . -3) (undo-tree-id2349 . -3) (undo-tree-id2350 . -3) (undo-tree-id2351 . -3) (undo-tree-id2352 . -3) (undo-tree-id2353 . -3) (undo-tree-id2354 . -6) 2247 (t 25586 27045 958084 648000)) nil (25586 27062 82714 81000) 0 nil])
([nil nil ((2244 . 2250)) nil (25586 27150 332625 849000) 0 nil])
([nil nil ((#(" `debug` (show contextV)" 0 1 (fontified t) 1 2 (font-lock-fontified t fontified t face haskell-operator-face font-lock-multiline t) 2 7 (font-lock-fontified t fontified t face haskell-operator-face font-lock-multiline t) 7 8 (font-lock-fontified t fontified t face haskell-operator-face font-lock-multiline t) 8 9 (font-lock-fontified t fontified t) 9 24 (font-lock-fontified t fontified t)) . 2155) (undo-tree-id2602 . -23) (undo-tree-id2603 . -23) (undo-tree-id2604 . -24) (undo-tree-id2605 . -24) (undo-tree-id2606 . -24) (undo-tree-id2607 . -24) (undo-tree-id2608 . -24) (undo-tree-id2609 . -24) (undo-tree-id2610 . -24) (undo-tree-id2611 . -24) (undo-tree-id2612 . -24) (undo-tree-id2613 . -24) (undo-tree-id2614 . -24) (undo-tree-id2615 . -24) (undo-tree-id2616 . -24) (undo-tree-id2617 . -23) (undo-tree-id2618 . -23) (undo-tree-id2619 . -23) (undo-tree-id2620 . -23) (undo-tree-id2621 . -23) (undo-tree-id2622 . -23) (undo-tree-id2623 . -23) (undo-tree-id2624 . -23) (undo-tree-id2625 . -23) (undo-tree-id2626 . -23) (undo-tree-id2627 . -23) (undo-tree-id2628 . -23) (undo-tree-id2629 . -23) (undo-tree-id2630 . -23) (undo-tree-id2631 . -23) (undo-tree-id2632 . -23) (undo-tree-id2633 . -23) (undo-tree-id2634 . -23) (undo-tree-id2635 . -23) (undo-tree-id2636 . -23) (undo-tree-id2637 . -23) (undo-tree-id2638 . -22) (undo-tree-id2639 . -23) (undo-tree-id2640 . -22) (undo-tree-id2641 . -22) (undo-tree-id2642 . -22) (undo-tree-id2643 . -22) (undo-tree-id2644 . -22) (undo-tree-id2645 . -22) (undo-tree-id2646 . -22) (undo-tree-id2647 . -22) (undo-tree-id2648 . -22) (undo-tree-id2649 . -22) (undo-tree-id2650 . -22) (undo-tree-id2651 . -22) (undo-tree-id2652 . -22) (undo-tree-id2653 . -22) (undo-tree-id2654 . -22) (undo-tree-id2655 . -22) (undo-tree-id2656 . -21) (undo-tree-id2657 . -22) (undo-tree-id2658 . -21) (undo-tree-id2659 . -21) (undo-tree-id2660 . -21) (undo-tree-id2661 . -21) (undo-tree-id2662 . -21) (undo-tree-id2663 . -21) (undo-tree-id2664 . -20) (undo-tree-id2665 . -21) (undo-tree-id2666 . -20) (undo-tree-id2667 . -20) (undo-tree-id2668 . -20) (undo-tree-id2669 . -20) (undo-tree-id2670 . -20) (undo-tree-id2671 . -20) (undo-tree-id2672 . -19) (undo-tree-id2673 . -20) (undo-tree-id2674 . -19) (undo-tree-id2675 . -19) (undo-tree-id2676 . -19) (undo-tree-id2677 . -19) (undo-tree-id2678 . -19) (undo-tree-id2679 . -19) (undo-tree-id2680 . -18) (undo-tree-id2681 . -19) (undo-tree-id2682 . -18) (undo-tree-id2683 . -18) (undo-tree-id2684 . -18) (undo-tree-id2685 . -18) (undo-tree-id2686 . -18) (undo-tree-id2687 . -18) (undo-tree-id2688 . -17) (undo-tree-id2689 . -18) (undo-tree-id2690 . -17) (undo-tree-id2691 . -17) (undo-tree-id2692 . -17) (undo-tree-id2693 . -17) (undo-tree-id2694 . -17) (undo-tree-id2695 . -17) (undo-tree-id2696 . -16) (undo-tree-id2697 . -17) (undo-tree-id2698 . -16) (undo-tree-id2699 . -16) (undo-tree-id2700 . -16) (undo-tree-id2701 . -16) (undo-tree-id2702 . -16) (undo-tree-id2703 . -16) (undo-tree-id2704 . -15) (undo-tree-id2705 . -16) (undo-tree-id2706 . -15) (undo-tree-id2707 . -15) (undo-tree-id2708 . -15) (undo-tree-id2709 . -15) (undo-tree-id2710 . -15) (undo-tree-id2711 . -15) (undo-tree-id2712 . -14) (undo-tree-id2713 . -15) (undo-tree-id2714 . -14) (undo-tree-id2715 . -14) (undo-tree-id2716 . -14) (undo-tree-id2717 . -14) (undo-tree-id2718 . -14) (undo-tree-id2719 . -14) (undo-tree-id2720 . -13) (undo-tree-id2721 . -14) (undo-tree-id2722 . -13) (undo-tree-id2723 . -13) (undo-tree-id2724 . -13) (undo-tree-id2725 . -13) (undo-tree-id2726 . -13) (undo-tree-id2727 . -13) (undo-tree-id2728 . -12) (undo-tree-id2729 . -13) (undo-tree-id2730 . -12) (undo-tree-id2731 . -12) (undo-tree-id2732 . -12) (undo-tree-id2733 . -12) (undo-tree-id2734 . -12) (undo-tree-id2735 . -12) (undo-tree-id2736 . -11) (undo-tree-id2737 . -12) (undo-tree-id2738 . -11) (undo-tree-id2739 . -11) (undo-tree-id2740 . -11) (undo-tree-id2741 . -11) (undo-tree-id2742 . -11) (undo-tree-id2743 . -11) (undo-tree-id2744 . -10) (undo-tree-id2745 . -11) (undo-tree-id2746 . -10) (undo-tree-id2747 . -10) (undo-tree-id2748 . -10) (undo-tree-id2749 . -10) (undo-tree-id2750 . -10) (undo-tree-id2751 . -10) (undo-tree-id2752 . -9) (undo-tree-id2753 . -10) (undo-tree-id2754 . -9) (undo-tree-id2755 . -9) (undo-tree-id2756 . -9) (undo-tree-id2757 . -9) (undo-tree-id2758 . -9) (undo-tree-id2759 . -9) (undo-tree-id2760 . -8) (undo-tree-id2761 . -9) (undo-tree-id2762 . -8) (undo-tree-id2763 . -8) (undo-tree-id2764 . -8) (undo-tree-id2765 . -8) (undo-tree-id2766 . -8) (undo-tree-id2767 . -8) (undo-tree-id2768 . -7) (undo-tree-id2769 . -8) (undo-tree-id2770 . -7) (undo-tree-id2771 . -7) (undo-tree-id2772 . -7) (undo-tree-id2773 . -7) (undo-tree-id2774 . -7) (undo-tree-id2775 . -7) (undo-tree-id2776 . -7) (undo-tree-id2777 . -7) (undo-tree-id2778 . -7) (undo-tree-id2779 . -7) (undo-tree-id2780 . -7) (undo-tree-id2781 . -7) (undo-tree-id2782 . -7) (undo-tree-id2783 . -7) (undo-tree-id2784 . -7) (undo-tree-id2785 . -7) (undo-tree-id2786 . -7) (undo-tree-id2787 . -7) (undo-tree-id2788 . -7) (undo-tree-id2789 . -7) (undo-tree-id2790 . -7) (undo-tree-id2791 . -6) (undo-tree-id2792 . -7) (undo-tree-id2793 . -6) (undo-tree-id2794 . -6) (undo-tree-id2795 . -6) (undo-tree-id2796 . -6) (undo-tree-id2797 . -6) (undo-tree-id2798 . -6) (undo-tree-id2799 . -6) (undo-tree-id2800 . -6) (undo-tree-id2801 . -6) (undo-tree-id2802 . -6) (undo-tree-id2803 . -6) (undo-tree-id2804 . -5) (undo-tree-id2805 . -6) (undo-tree-id2806 . -5) (undo-tree-id2807 . -5) (undo-tree-id2808 . -5) (undo-tree-id2809 . -5) (undo-tree-id2810 . -5) (undo-tree-id2811 . -5) (undo-tree-id2812 . -5) (undo-tree-id2813 . -5) (undo-tree-id2814 . -5) (undo-tree-id2815 . -5) (undo-tree-id2816 . -5) (undo-tree-id2817 . -4) (undo-tree-id2818 . -5) (undo-tree-id2819 . -4) (undo-tree-id2820 . -4) (undo-tree-id2821 . -4) (undo-tree-id2822 . -4) (undo-tree-id2823 . -4) (undo-tree-id2824 . -4) (undo-tree-id2825 . -4) (undo-tree-id2826 . -4) (undo-tree-id2827 . -4) (undo-tree-id2828 . -4) (undo-tree-id2829 . -4) (undo-tree-id2830 . -3) (undo-tree-id2831 . -4) (undo-tree-id2832 . -3) (undo-tree-id2833 . -3) (undo-tree-id2834 . -3) (undo-tree-id2835 . -3) (undo-tree-id2836 . -3) (undo-tree-id2837 . -3) (undo-tree-id2838 . -3) (undo-tree-id2839 . -3) (undo-tree-id2840 . -3) (undo-tree-id2841 . -3) (undo-tree-id2842 . -3) (undo-tree-id2843 . -2) (undo-tree-id2844 . -3) (undo-tree-id2845 . -2) (undo-tree-id2846 . -2) (undo-tree-id2847 . -2) (undo-tree-id2848 . -2) (undo-tree-id2849 . -2) (undo-tree-id2850 . -2) (undo-tree-id2851 . -1) (undo-tree-id2852 . -2) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -24) (undo-tree-id2861 . -24) (t 25586 27151 581420 610000)) nil (25586 27214 23740 80000) 0 nil] [nil nil ((#("_ exp = exp" 0 1 (fontified t face haskell-keyword-face) 1 6 (fontified t) 6 7 (fontified t syntax-table (1) face haskell-operator-face) 7 11 (fontified t)) . 2258) (undo-tree-id2355 . -10) (undo-tree-id2356 . 10) (undo-tree-id2358 . -11) (undo-tree-id2360 . -11) (t 25586 27062 124751 718000)) ((2258 . 2269)) (25586 27150 192659 821000) 0 nil])
([nil nil ((#("`debug` (\"executei \" ++  (show id) ++  (show lexp))" 0 1 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t) 1 6 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t) 6 7 (fontified t font-lock-fontified t face haskell-operator-face font-lock-multiline t) 7 9 (fontified t) 9 20 (fontified t face font-lock-string-face) 20 21 (fontified t) 21 23 (fontified t syntax-table (1) face haskell-operator-face) 23 24 (fontified t) 24 26 (fontified t) 26 35 (fontified t) 35 36 (fontified t syntax-table (1) face haskell-operator-face) 36 37 (fontified t syntax-table (1) face haskell-operator-face) 37 38 (fontified t) 38 40 (fontified t) 40 49 (fontified t) 49 50 (fontified t rear-nonsticky t) 50 51 (fontified t)) . 1697) (undo-tree-id2862 . -50) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -51) (undo-tree-id2893 . -51) (t 25586 27214 791422 185000)) nil (25586 27221 549740 897000) 0 nil])
([nil nil ((2257 . 2260)) ((#(" _ " 0 1 (fontified t) 1 2 (fontified t face haskell-keyword-face) 2 3 (fontified t)) . 2257) (undo-tree-id2591 . -3) (undo-tree-id2592 . -3) (undo-tree-id2593 . -3) (undo-tree-id2594 . -3) (undo-tree-id2595 . -3) (undo-tree-id2596 . -3) (undo-tree-id2597 . -3) (undo-tree-id2598 . -3) (undo-tree-id2599 . -3) (undo-tree-id2600 . -3) (undo-tree-id2601 . -3)) (25586 27150 57911 385000) 0 nil])
([nil nil ((#("import Debug.Trace
" 0 6 (fontified t face haskell-keyword-face) 6 7 (fontified t) 7 18 (fontified t face haskell-constructor-face) 18 19 (fontified t)) . 623) (undo-tree-id2907 . -18) (undo-tree-id2908 . -7) (undo-tree-id2909 . -7) (undo-tree-id2910 . -7) (undo-tree-id2911 . -7) (undo-tree-id2912 . -7) (undo-tree-id2913 . -7) (undo-tree-id2914 . -7) (undo-tree-id2915 . -7) (undo-tree-id2916 . -7) (undo-tree-id2917 . -7) (undo-tree-id2918 . -7) (undo-tree-id2919 . -7) (undo-tree-id2920 . -7) (undo-tree-id2921 . -7) (undo-tree-id2922 . -7) (undo-tree-id2923 . -7) (undo-tree-id2924 . -7) (undo-tree-id2925 . -7) (undo-tree-id2926 . -7) (undo-tree-id2927 . -7) (undo-tree-id2928 . -7) (undo-tree-id2929 . -7) (undo-tree-id2930 . -7) (undo-tree-id2931 . -7) (undo-tree-id2932 . -7) (undo-tree-id2933 . -7) (undo-tree-id2934 . -7) (undo-tree-id2935 . -7) (undo-tree-id2936 . -7) (undo-tree-id2937 . -7) (undo-tree-id2938 . -7) (undo-tree-id2939 . -7) (undo-tree-id2940 . -7) (undo-tree-id2941 . -7) (undo-tree-id2942 . -7) (undo-tree-id2943 . -7) (undo-tree-id2944 . -7) (undo-tree-id2945 . -7) (undo-tree-id2946 . -7) (undo-tree-id2947 . -7) (undo-tree-id2948 . -7) (undo-tree-id2949 . -7) (undo-tree-id2950 . -7) (undo-tree-id2951 . -7) (undo-tree-id2952 . -7) (undo-tree-id2953 . -7) (undo-tree-id2954 . -7) (undo-tree-id2955 . -7) (undo-tree-id2956 . -7) (undo-tree-id2957 . -19) 630 (t 25586 27221 741422 357000)) nil (25586 27226 455876 135000) 0 nil])
([nil nil ((2261 . 2265)) ((#("= id" 0 1 (fontified t syntax-table (1) face haskell-operator-face) 1 4 (fontified t)) . 2261) (undo-tree-id2474 . -3) (undo-tree-id2475 . -3) (undo-tree-id2476 . -3) (undo-tree-id2477 . -3) (undo-tree-id2478 . -3) (undo-tree-id2479 . -3) (undo-tree-id2480 . -3) (undo-tree-id2481 . -3) (undo-tree-id2482 . -3) (undo-tree-id2483 . -3) (undo-tree-id2484 . -3) (undo-tree-id2485 . -3) (undo-tree-id2486 . -3) (undo-tree-id2487 . -3) (undo-tree-id2488 . -3) (undo-tree-id2489 . -3) (undo-tree-id2490 . -3) (undo-tree-id2491 . -3) (undo-tree-id2492 . -3) (undo-tree-id2493 . -3) (undo-tree-id2494 . -3) (undo-tree-id2495 . -3) (undo-tree-id2496 . -3) (undo-tree-id2497 . -3) (undo-tree-id2498 . -3) (undo-tree-id2499 . -3) (undo-tree-id2500 . -3) (undo-tree-id2501 . -3) (undo-tree-id2502 . -3) (undo-tree-id2503 . -3) (undo-tree-id2504 . -3) (undo-tree-id2505 . -3) (undo-tree-id2506 . -3) (undo-tree-id2507 . -3) (undo-tree-id2508 . -3) (undo-tree-id2509 . -3) (undo-tree-id2510 . -3) (undo-tree-id2511 . -3) (undo-tree-id2512 . -3) (undo-tree-id2513 . -3) (undo-tree-id2514 . -3) (undo-tree-id2515 . -3) (undo-tree-id2516 . -3) (undo-tree-id2517 . -3) (undo-tree-id2518 . -3) (undo-tree-id2519 . -3) (undo-tree-id2520 . -3) (undo-tree-id2521 . -3) (undo-tree-id2522 . -3) (undo-tree-id2523 . -3) (undo-tree-id2524 . -3) (undo-tree-id2525 . -3) (undo-tree-id2526 . -3) (undo-tree-id2527 . -3) (undo-tree-id2528 . -3) (undo-tree-id2529 . -3) (undo-tree-id2530 . -3) (undo-tree-id2531 . -3) (undo-tree-id2532 . -3) (undo-tree-id2533 . -3) (undo-tree-id2534 . -3) (undo-tree-id2535 . -3) (undo-tree-id2536 . -3) (undo-tree-id2537 . -3) (undo-tree-id2538 . -3) (undo-tree-id2539 . -3) (undo-tree-id2540 . -3) (undo-tree-id2541 . -3) (undo-tree-id2542 . -3) (undo-tree-id2543 . -3) (undo-tree-id2544 . -3) (undo-tree-id2545 . -3) (undo-tree-id2546 . -3) (undo-tree-id2547 . -3) (undo-tree-id2548 . -3) (undo-tree-id2549 . -3) (undo-tree-id2550 . -3) (undo-tree-id2551 . -3) (undo-tree-id2552 . -3) (undo-tree-id2553 . -3) (undo-tree-id2554 . -3) (undo-tree-id2555 . -3) (undo-tree-id2556 . -3) (undo-tree-id2557 . -3) (undo-tree-id2558 . -3) (undo-tree-id2559 . -3) (undo-tree-id2560 . -2) (undo-tree-id2561 . -3) (undo-tree-id2562 . -2) (undo-tree-id2563 . -2) (undo-tree-id2564 . -2) (undo-tree-id2565 . -2) (undo-tree-id2566 . -2) (undo-tree-id2567 . -2) (undo-tree-id2568 . -2) (undo-tree-id2569 . -2) (undo-tree-id2570 . -2) (undo-tree-id2571 . -2) (undo-tree-id2572 . -2) (undo-tree-id2573 . -1) (undo-tree-id2574 . -2) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -2) (undo-tree-id2588 . -1) (undo-tree-id2589 . -2) (undo-tree-id2590 . -3) (t 25586 27132 261420 128000)) (25586 27149 62794 971000) 0 nil])
([nil nil ((#("debug = flip trace
" 0 5 (fontified t face haskell-definition-face) 5 6 (fontified t) 6 7 (syntax-table (1) fontified t face haskell-operator-face) 7 18 (fontified t) 18 19 (fontified t)) . 795) (undo-tree-id2894 . -18) (undo-tree-id2895 . -6) (undo-tree-id2896 . -8) (undo-tree-id2897 . -13) (undo-tree-id2898 . -5) (undo-tree-id2899 . -1) (undo-tree-id2900 . -6) (undo-tree-id2901 . -7) (undo-tree-id2902 . -8) (undo-tree-id2903 . -9) (undo-tree-id2904 . -13) (undo-tree-id2905 . -14) (undo-tree-id2906 . -19)) nil (25586 27226 455814 22000) 0 nil])
nil
([nil nil ((2 . 4) (#("- Programacao Funcional - Trabalho 2 - 
   Prazo de entrega: 19/02/2023 por Tarefa no Aprender 3
   O trabalho deve ser feito individualmente

  ** ENUNCIADO DO TRABALHO:   
 Evolua o interpretador abaixo para prover avaliacao preguicosa (lazy evaluation).
 Ao fim do codigo abaixo, ha alguns casos de testes. 
 Sugere-se observar as dicas neste arquivo e no AbsLI.hs.
 
 Criterios de avaliacao: 
   1) testCaseSuiteResults deve ser computavel e ser True 
   2) para nota maior ou igual a 9, deve-se usar SYB.

-" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 511 (fontified t face font-lock-comment-face) 511 512 (fontified t face font-lock-comment-delimiter-face)) . 2) (undo-tree-id2959 . -511) (undo-tree-id2960 . -2) (undo-tree-id2961 . -257) (undo-tree-id2962 . -40) (undo-tree-id2963 . -40) (undo-tree-id2964 . -40) (undo-tree-id2965 . -40) (undo-tree-id2966 . -40) (undo-tree-id2967 . -40) (undo-tree-id2968 . -40) (undo-tree-id2969 . -40) (undo-tree-id2970 . -40) (undo-tree-id2971 . -40) (undo-tree-id2972 . -40) (undo-tree-id2973 . -40) (undo-tree-id2974 . -40) (undo-tree-id2975 . -40) (undo-tree-id2976 . -40) (undo-tree-id2977 . -40) (undo-tree-id2978 . -40) (undo-tree-id2979 . -40) (undo-tree-id2980 . -40) (undo-tree-id2981 . -40) (undo-tree-id2982 . -40) (undo-tree-id2983 . -40) (undo-tree-id2984 . -40) (undo-tree-id2985 . -40) (undo-tree-id2986 . -40) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -2) (undo-tree-id3000 . -1) (undo-tree-id3001 . -2) (undo-tree-id3002 . -2) (undo-tree-id3003 . -2) (undo-tree-id3004 . -2) (undo-tree-id3005 . -2) (undo-tree-id3006 . -2) (undo-tree-id3007 . -2) (undo-tree-id3008 . -2) (undo-tree-id3009 . -2) (undo-tree-id3010 . -2) (undo-tree-id3011 . -2) (undo-tree-id3012 . -2) (undo-tree-id3013 . -2) (undo-tree-id3014 . -2) (undo-tree-id3015 . -2) (undo-tree-id3016 . -2) (undo-tree-id3017 . -2) (undo-tree-id3018 . -2) (undo-tree-id3019 . -2) (undo-tree-id3020 . -2) (undo-tree-id3021 . -2) (undo-tree-id3022 . -2) (undo-tree-id3023 . -2) (undo-tree-id3024 . -2) (undo-tree-id3025 . -2) (undo-tree-id3026 . -2) (undo-tree-id3027 . -2) (undo-tree-id3028 . -2) (undo-tree-id3029 . -2) (undo-tree-id3030 . -2) (undo-tree-id3031 . -2) (undo-tree-id3032 . -2) (undo-tree-id3033 . -2) (undo-tree-id3034 . -2) (undo-tree-id3035 . -2) (undo-tree-id3036 . -2) (undo-tree-id3037 . -2) (undo-tree-id3038 . -2) (undo-tree-id3039 . -2) (undo-tree-id3040 . -2) (undo-tree-id3041 . -2) (undo-tree-id3042 . -2) (undo-tree-id3043 . -2) (undo-tree-id3044 . -2) (undo-tree-id3045 . -2) (undo-tree-id3046 . -2) (undo-tree-id3047 . -2) (undo-tree-id3048 . -2) (undo-tree-id3049 . -2) (undo-tree-id3050 . -2) (undo-tree-id3051 . -2) (undo-tree-id3052 . -2) (undo-tree-id3053 . -2) (undo-tree-id3054 . -2) (undo-tree-id3055 . -2) (undo-tree-id3056 . -2) (undo-tree-id3057 . -2) (undo-tree-id3058 . -2) (undo-tree-id3059 . -2) (undo-tree-id3060 . -2) (undo-tree-id3061 . -2) (undo-tree-id3062 . -2) (undo-tree-id3063 . -2) (undo-tree-id3064 . -2) (undo-tree-id3065 . -512) (undo-tree-id3066 . -512) 4 (t 25586 27226 581422 478000)) nil (25586 27301 827538 271000) 0 nil])
([nil nil ((3 . 4)) nil (25586 27301 827432 950000) 0 nil])
([nil nil ((37 . 44) (30 . 37) (9 . 30) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -9) (undo-tree-id2958 . -1) 10 (4 . 10) (3 . 4) 1) nil (25586 27301 827430 199000) 0 nil])
([nil nil ((45 . 65) (44 . 45) 43) nil (25586 27301 827418 183000) 0 nil])
([nil current ((9 . 13)) nil (25586 27301 827412 182000) 0 nil])
nil
